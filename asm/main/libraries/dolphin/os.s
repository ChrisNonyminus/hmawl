.include "macros.inc"

.section .text, "ax"  # 0x80005980 - 0x8023DD80 ; 0x00238400

/* Dolphin/OS/OS.o START */

.global __OSFPRInit
__OSFPRInit:
/* 801B0B2C 001AD86C  7C 60 00 A6 */	mfmsr r3
/* 801B0B30 001AD870  60 63 20 00 */	ori r3, r3, 0x2000
/* 801B0B34 001AD874  7C 60 01 24 */	mtmsr r3
/* 801B0B38 001AD878  7C 78 E2 A6 */	mfspr r3, 920
/* 801B0B3C 001AD87C  54 63 1F FF */	rlwinm. r3, r3, 3, 31, 31
/* 801B0B40 001AD880  41 82 00 8C */	beq lbl_801B0BCC
/* 801B0B44 001AD884  3C 60 80 35 */	lis r3, lbl_803495D8@ha
/* 801B0B48 001AD888  38 63 95 D8 */	addi r3, r3, lbl_803495D8@l
/* 801B0B4C 001AD88C  E0 03 00 00 */	psq_l f0, 0x0(r3), 0, qr0
/* 801B0B50 001AD890  10 20 00 90 */	ps_mr f1, f0
/* 801B0B54 001AD894  10 40 00 90 */	ps_mr f2, f0
/* 801B0B58 001AD898  10 60 00 90 */	ps_mr f3, f0
/* 801B0B5C 001AD89C  10 80 00 90 */	ps_mr f4, f0
/* 801B0B60 001AD8A0  10 A0 00 90 */	ps_mr f5, f0
/* 801B0B64 001AD8A4  10 C0 00 90 */	ps_mr f6, f0
/* 801B0B68 001AD8A8  10 E0 00 90 */	ps_mr f7, f0
/* 801B0B6C 001AD8AC  11 00 00 90 */	ps_mr f8, f0
/* 801B0B70 001AD8B0  11 20 00 90 */	ps_mr f9, f0
/* 801B0B74 001AD8B4  11 40 00 90 */	ps_mr f10, f0
/* 801B0B78 001AD8B8  11 60 00 90 */	ps_mr f11, f0
/* 801B0B7C 001AD8BC  11 80 00 90 */	ps_mr f12, f0
/* 801B0B80 001AD8C0  11 A0 00 90 */	ps_mr f13, f0
/* 801B0B84 001AD8C4  11 C0 00 90 */	ps_mr f14, f0
/* 801B0B88 001AD8C8  11 E0 00 90 */	ps_mr f15, f0
/* 801B0B8C 001AD8CC  12 00 00 90 */	ps_mr f16, f0
/* 801B0B90 001AD8D0  12 20 00 90 */	ps_mr f17, f0
/* 801B0B94 001AD8D4  12 40 00 90 */	ps_mr f18, f0
/* 801B0B98 001AD8D8  12 60 00 90 */	ps_mr f19, f0
/* 801B0B9C 001AD8DC  12 80 00 90 */	ps_mr f20, f0
/* 801B0BA0 001AD8E0  12 A0 00 90 */	ps_mr f21, f0
/* 801B0BA4 001AD8E4  12 C0 00 90 */	ps_mr f22, f0
/* 801B0BA8 001AD8E8  12 E0 00 90 */	ps_mr f23, f0
/* 801B0BAC 001AD8EC  13 00 00 90 */	ps_mr f24, f0
/* 801B0BB0 001AD8F0  13 20 00 90 */	ps_mr f25, f0
/* 801B0BB4 001AD8F4  13 40 00 90 */	ps_mr f26, f0
/* 801B0BB8 001AD8F8  13 60 00 90 */	ps_mr f27, f0
/* 801B0BBC 001AD8FC  13 80 00 90 */	ps_mr f28, f0
/* 801B0BC0 001AD900  13 A0 00 90 */	ps_mr f29, f0
/* 801B0BC4 001AD904  13 C0 00 90 */	ps_mr f30, f0
/* 801B0BC8 001AD908  13 E0 00 90 */	ps_mr f31, f0
lbl_801B0BCC:
/* 801B0BCC 001AD90C  C8 0D AC 10 */	lfd f0, lbl_803495D0@sda21(r13)
/* 801B0BD0 001AD910  FC 20 00 90 */	fmr f1, f0
/* 801B0BD4 001AD914  FC 40 00 90 */	fmr f2, f0
/* 801B0BD8 001AD918  FC 60 00 90 */	fmr f3, f0
/* 801B0BDC 001AD91C  FC 80 00 90 */	fmr f4, f0
/* 801B0BE0 001AD920  FC A0 00 90 */	fmr f5, f0
/* 801B0BE4 001AD924  FC C0 00 90 */	fmr f6, f0
/* 801B0BE8 001AD928  FC E0 00 90 */	fmr f7, f0
/* 801B0BEC 001AD92C  FD 00 00 90 */	fmr f8, f0
/* 801B0BF0 001AD930  FD 20 00 90 */	fmr f9, f0
/* 801B0BF4 001AD934  FD 40 00 90 */	fmr f10, f0
/* 801B0BF8 001AD938  FD 60 00 90 */	fmr f11, f0
/* 801B0BFC 001AD93C  FD 80 00 90 */	fmr f12, f0
/* 801B0C00 001AD940  FD A0 00 90 */	fmr f13, f0
/* 801B0C04 001AD944  FD C0 00 90 */	fmr f14, f0
/* 801B0C08 001AD948  FD E0 00 90 */	fmr f15, f0
/* 801B0C0C 001AD94C  FE 00 00 90 */	fmr f16, f0
/* 801B0C10 001AD950  FE 20 00 90 */	fmr f17, f0
/* 801B0C14 001AD954  FE 40 00 90 */	fmr f18, f0
/* 801B0C18 001AD958  FE 60 00 90 */	fmr f19, f0
/* 801B0C1C 001AD95C  FE 80 00 90 */	fmr f20, f0
/* 801B0C20 001AD960  FE A0 00 90 */	fmr f21, f0
/* 801B0C24 001AD964  FE C0 00 90 */	fmr f22, f0
/* 801B0C28 001AD968  FE E0 00 90 */	fmr f23, f0
/* 801B0C2C 001AD96C  FF 00 00 90 */	fmr f24, f0
/* 801B0C30 001AD970  FF 20 00 90 */	fmr f25, f0
/* 801B0C34 001AD974  FF 40 00 90 */	fmr f26, f0
/* 801B0C38 001AD978  FF 60 00 90 */	fmr f27, f0
/* 801B0C3C 001AD97C  FF 80 00 90 */	fmr f28, f0
/* 801B0C40 001AD980  FF A0 00 90 */	fmr f29, f0
/* 801B0C44 001AD984  FF C0 00 90 */	fmr f30, f0
/* 801B0C48 001AD988  FF E0 00 90 */	fmr f31, f0
/* 801B0C4C 001AD98C  FD FE 05 8E */	mtfsf 255, f0
/* 801B0C50 001AD990  4E 80 00 20 */	blr

.global OSGetConsoleType
OSGetConsoleType:
/* 801B0C54 001AD994  80 6D AC 00 */	lwz r3, BootInfo@sda21(r13)
/* 801B0C58 001AD998  28 03 00 00 */	cmplwi r3, 0x0
/* 801B0C5C 001AD99C  41 82 00 10 */	beq lbl_801B0C6C
/* 801B0C60 001AD9A0  80 63 00 2C */	lwz r3, 0x2c(r3)
/* 801B0C64 001AD9A4  28 03 00 00 */	cmplwi r3, 0x0
/* 801B0C68 001AD9A8  40 82 00 10 */	bne func_801B0C78
lbl_801B0C6C:
/* 801B0C6C 001AD9AC  3C 60 10 00 */	lis r3, 0x1000
/* 801B0C70 001AD9B0  38 63 00 02 */	addi r3, r3, 0x2
/* 801B0C74 001AD9B4  48 00 00 04 */	b func_801B0C78
func_801B0C78:
/* 801B0C78 001AD9B8  4E 80 00 20 */	blr

.global ClearArena
ClearArena:
/* 801B0C7C 001AD9BC  7C 08 02 A6 */	mflr r0
/* 801B0C80 001AD9C0  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B0C84 001AD9C4  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801B0C88 001AD9C8  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801B0C8C 001AD9CC  48 00 4C B9 */	bl OSGetResetCode
/* 801B0C90 001AD9D0  3C 03 80 00 */	addis r0, r3, 0x8000
/* 801B0C94 001AD9D4  28 00 00 00 */	cmplwi r0, 0x0
/* 801B0C98 001AD9D8  41 82 00 34 */	beq lbl_801B0CCC
/* 801B0C9C 001AD9DC  38 00 00 00 */	li r0, 0x0
/* 801B0CA0 001AD9E0  90 0D AC 2C */	stw r0, __OSSavedRegionStart@sda21(r13)
/* 801B0CA4 001AD9E4  90 0D AC 28 */	stw r0, __OSSavedRegionEnd@sda21(r13)
/* 801B0CA8 001AD9E8  48 00 14 2D */	bl OSGetArenaHi
/* 801B0CAC 001AD9EC  7C 7F 1B 78 */	mr r31, r3
/* 801B0CB0 001AD9F0  48 00 14 2D */	bl OSGetArenaLo
/* 801B0CB4 001AD9F4  7F E3 F8 50 */	subf r31, r3, r31
/* 801B0CB8 001AD9F8  48 00 14 25 */	bl OSGetArenaLo
/* 801B0CBC 001AD9FC  7F E5 FB 78 */	mr r5, r31
/* 801B0CC0 001ADA00  38 80 00 00 */	li r4, 0x0
/* 801B0CC4 001ADA04  4B E5 48 21 */	bl memset
/* 801B0CC8 001ADA08  48 00 00 C8 */	b func_801B0D90
lbl_801B0CCC:
/* 801B0CCC 001ADA0C  3C 80 81 30 */	lis r4, 0x812FDFF0@ha
/* 801B0CD0 001ADA10  80 64 DF F0 */	lwz r3, 0x812FDFF0@l(r4)
/* 801B0CD4 001ADA14  80 04 DF EC */	lwz r0, -0x2014(r4)
/* 801B0CD8 001ADA18  28 03 00 00 */	cmplwi r3, 0x0
/* 801B0CDC 001ADA1C  90 6D AC 2C */	stw r3, __OSSavedRegionStart@sda21(r13)
/* 801B0CE0 001ADA20  90 0D AC 28 */	stw r0, __OSSavedRegionEnd@sda21(r13)
/* 801B0CE4 001ADA24  40 82 00 28 */	bne lbl_801B0D0C
/* 801B0CE8 001ADA28  48 00 13 ED */	bl OSGetArenaHi
/* 801B0CEC 001ADA2C  7C 7F 1B 78 */	mr r31, r3
/* 801B0CF0 001ADA30  48 00 13 ED */	bl OSGetArenaLo
/* 801B0CF4 001ADA34  7F E3 F8 50 */	subf r31, r3, r31
/* 801B0CF8 001ADA38  48 00 13 E5 */	bl OSGetArenaLo
/* 801B0CFC 001ADA3C  7F E5 FB 78 */	mr r5, r31
/* 801B0D00 001ADA40  38 80 00 00 */	li r4, 0x0
/* 801B0D04 001ADA44  4B E5 47 E1 */	bl memset
/* 801B0D08 001ADA48  48 00 00 88 */	b func_801B0D90
lbl_801B0D0C:
/* 801B0D0C 001ADA4C  48 00 13 D1 */	bl OSGetArenaLo
/* 801B0D10 001ADA50  80 0D AC 2C */	lwz r0, __OSSavedRegionStart@sda21(r13)
/* 801B0D14 001ADA54  7C 03 00 40 */	cmplw r3, r0
/* 801B0D18 001ADA58  40 80 00 78 */	bge func_801B0D90
/* 801B0D1C 001ADA5C  48 00 13 B9 */	bl OSGetArenaHi
/* 801B0D20 001ADA60  80 0D AC 2C */	lwz r0, __OSSavedRegionStart@sda21(r13)
/* 801B0D24 001ADA64  7C 03 00 40 */	cmplw r3, r0
/* 801B0D28 001ADA68  41 81 00 28 */	bgt lbl_801B0D50
/* 801B0D2C 001ADA6C  48 00 13 A9 */	bl OSGetArenaHi
/* 801B0D30 001ADA70  7C 7F 1B 78 */	mr r31, r3
/* 801B0D34 001ADA74  48 00 13 A9 */	bl OSGetArenaLo
/* 801B0D38 001ADA78  7F E3 F8 50 */	subf r31, r3, r31
/* 801B0D3C 001ADA7C  48 00 13 A1 */	bl OSGetArenaLo
/* 801B0D40 001ADA80  7F E5 FB 78 */	mr r5, r31
/* 801B0D44 001ADA84  38 80 00 00 */	li r4, 0x0
/* 801B0D48 001ADA88  4B E5 47 9D */	bl memset
/* 801B0D4C 001ADA8C  48 00 00 44 */	b func_801B0D90
lbl_801B0D50:
/* 801B0D50 001ADA90  48 00 13 8D */	bl OSGetArenaLo
/* 801B0D54 001ADA94  80 0D AC 2C */	lwz r0, __OSSavedRegionStart@sda21(r13)
/* 801B0D58 001ADA98  7F E3 00 50 */	subf r31, r3, r0
/* 801B0D5C 001ADA9C  48 00 13 81 */	bl OSGetArenaLo
/* 801B0D60 001ADAA0  7F E5 FB 78 */	mr r5, r31
/* 801B0D64 001ADAA4  38 80 00 00 */	li r4, 0x0
/* 801B0D68 001ADAA8  4B E5 47 7D */	bl memset
/* 801B0D6C 001ADAAC  48 00 13 69 */	bl OSGetArenaHi
/* 801B0D70 001ADAB0  83 ED AC 28 */	lwz r31, __OSSavedRegionEnd@sda21(r13)
/* 801B0D74 001ADAB4  7C 03 F8 40 */	cmplw r3, r31
/* 801B0D78 001ADAB8  40 81 00 18 */	ble func_801B0D90
/* 801B0D7C 001ADABC  48 00 13 59 */	bl OSGetArenaHi
/* 801B0D80 001ADAC0  7C BF 18 50 */	subf r5, r31, r3
/* 801B0D84 001ADAC4  7F E3 FB 78 */	mr r3, r31
/* 801B0D88 001ADAC8  38 80 00 00 */	li r4, 0x0
/* 801B0D8C 001ADACC  4B E5 47 59 */	bl memset
func_801B0D90:
/* 801B0D90 001ADAD0  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801B0D94 001ADAD4  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801B0D98 001ADAD8  38 21 00 10 */	addi r1, r1, 0x10
/* 801B0D9C 001ADADC  7C 08 03 A6 */	mtlr r0
/* 801B0DA0 001ADAE0  4E 80 00 20 */	blr

.global InquiryCallback
InquiryCallback:
/* 801B0DA4 001ADAE4  80 04 00 0C */	lwz r0, 0xc(r4)
/* 801B0DA8 001ADAE8  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B0DAC 001ADAEC  41 82 00 08 */	beq lbl_801B0DB4
/* 801B0DB0 001ADAF0  48 00 00 20 */	b func_801B0DD0
lbl_801B0DB4:
/* 801B0DB4 001ADAF4  3C 60 80 31 */	lis r3, DriveInfo@ha
/* 801B0DB8 001ADAF8  38 63 7A 40 */	addi r3, r3, DriveInfo@l
/* 801B0DBC 001ADAFC  A0 03 00 02 */	lhz r0, 0x2(r3)
/* 801B0DC0 001ADB00  3C 60 80 00 */	lis r3, 0x800030E6@ha
/* 801B0DC4 001ADB04  60 00 80 00 */	ori r0, r0, 0x8000
/* 801B0DC8 001ADB08  B0 03 30 E6 */	sth r0, 0x800030E6@l(r3)
/* 801B0DCC 001ADB0C  48 00 00 10 */	b func_801B0DDC
func_801B0DD0:
/* 801B0DD0 001ADB10  38 00 00 01 */	li r0, 0x1
/* 801B0DD4 001ADB14  3C 60 80 00 */	lis r3, 0x800030E6@ha
/* 801B0DD8 001ADB18  B0 03 30 E6 */	sth r0, 0x800030E6@l(r3)
func_801B0DDC:
/* 801B0DDC 001ADB1C  4E 80 00 20 */	blr

.global OSInit
OSInit:
/* 801B0DE0 001ADB20  7C 08 02 A6 */	mflr r0
/* 801B0DE4 001ADB24  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B0DE8 001ADB28  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B0DEC 001ADB2C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B0DF0 001ADB30  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801B0DF4 001ADB34  93 A1 00 0C */	stw r29, 0xc(r1)
/* 801B0DF8 001ADB38  80 0D AC 20 */	lwz r0, AreWeInitialized@sda21(r13)
/* 801B0DFC 001ADB3C  3C 60 80 31 */	lis r3, DriveInfo@ha
/* 801B0E00 001ADB40  3B C3 7A 40 */	addi r30, r3, DriveInfo@l
/* 801B0E04 001ADB44  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B0E08 001ADB48  3C 60 80 2E */	lis r3, lbl_802DFC88@ha
/* 801B0E0C 001ADB4C  3B E3 FC 88 */	addi r31, r3, lbl_802DFC88@l
/* 801B0E10 001ADB50  40 82 03 8C */	bne func_801B119C
/* 801B0E14 001ADB54  38 00 00 01 */	li r0, 0x1
/* 801B0E18 001ADB58  90 0D AC 20 */	stw r0, AreWeInitialized@sda21(r13)
/* 801B0E1C 001ADB5C  48 00 6D F5 */	bl __OSGetSystemTime
/* 801B0E20 001ADB60  90 8D AC 3C */	stw r4, lbl_803495FC@sda21(r13)
/* 801B0E24 001ADB64  90 6D AC 38 */	stw r3, __OSStartTime@sda21(r13)
/* 801B0E28 001ADB68  48 00 2C 1D */	bl OSDisableInterrupts
/* 801B0E2C 001ADB6C  38 60 00 00 */	li r3, 0x0
/* 801B0E30 001ADB70  4B FF FC 3D */	bl PPCMtmmcr0
/* 801B0E34 001ADB74  38 60 00 00 */	li r3, 0x0
/* 801B0E38 001ADB78  4B FF FC 3D */	bl PPCMtmmcr1
/* 801B0E3C 001ADB7C  38 60 00 00 */	li r3, 0x0
/* 801B0E40 001ADB80  4B FF FC 3D */	bl PPCMtpmc1
/* 801B0E44 001ADB84  38 60 00 00 */	li r3, 0x0
/* 801B0E48 001ADB88  4B FF FC 3D */	bl PPCMtpmc2
/* 801B0E4C 001ADB8C  38 60 00 00 */	li r3, 0x0
/* 801B0E50 001ADB90  4B FF FC 3D */	bl PPCMtpmc3
/* 801B0E54 001ADB94  38 60 00 00 */	li r3, 0x0
/* 801B0E58 001ADB98  4B FF FC 3D */	bl PPCMtpmc4
/* 801B0E5C 001ADB9C  4B FF FC A1 */	bl PPCDisableSpeculation
/* 801B0E60 001ADBA0  4B FF FC C5 */	bl PPCSetFpNonIEEEMode
/* 801B0E64 001ADBA4  38 00 00 00 */	li r0, 0x0
/* 801B0E68 001ADBA8  3C 80 80 00 */	lis r4, 0x800000F4@ha
/* 801B0E6C 001ADBAC  90 0D AC 04 */	stw r0, BI2DebugFlag@sda21(r13)
/* 801B0E70 001ADBB0  90 8D AC 00 */	stw r4, BootInfo@sda21(r13)
/* 801B0E74 001ADBB4  90 0D AD 2C */	stw r0, __DVDLongFileNameFlag@sda21(r13)
/* 801B0E78 001ADBB8  80 64 00 F4 */	lwz r3, 0x800000F4@l(r4)
/* 801B0E7C 001ADBBC  28 03 00 00 */	cmplwi r3, 0x0
/* 801B0E80 001ADBC0  41 82 00 34 */	beq lbl_801B0EB4
/* 801B0E84 001ADBC4  38 03 00 0C */	addi r0, r3, 0xc
/* 801B0E88 001ADBC8  90 0D AC 04 */	stw r0, BI2DebugFlag@sda21(r13)
/* 801B0E8C 001ADBCC  80 03 00 24 */	lwz r0, 0x24(r3)
/* 801B0E90 001ADBD0  80 6D AC 04 */	lwz r3, BI2DebugFlag@sda21(r13)
/* 801B0E94 001ADBD4  90 0D AE 20 */	stw r0, __PADSpec@sda21(r13)
/* 801B0E98 001ADBD8  80 03 00 00 */	lwz r0, 0x0(r3)
/* 801B0E9C 001ADBDC  54 00 06 3E */	clrlwi r0, r0, 24
/* 801B0EA0 001ADBE0  98 04 30 E8 */	stb r0, 0x30e8(r4)
/* 801B0EA4 001ADBE4  80 0D AE 20 */	lwz r0, __PADSpec@sda21(r13)
/* 801B0EA8 001ADBE8  54 00 06 3E */	clrlwi r0, r0, 24
/* 801B0EAC 001ADBEC  98 04 30 E9 */	stb r0, 0x30e9(r4)
/* 801B0EB0 001ADBF0  48 00 00 28 */	b func_801B0ED8
lbl_801B0EB4:
/* 801B0EB4 001ADBF4  80 04 00 34 */	lwz r0, 0x34(r4)
/* 801B0EB8 001ADBF8  28 00 00 00 */	cmplwi r0, 0x0
/* 801B0EBC 001ADBFC  41 82 00 1C */	beq func_801B0ED8
/* 801B0EC0 001ADC00  88 64 30 E8 */	lbz r3, 0x30e8(r4)
/* 801B0EC4 001ADC04  38 0D AC 08 */	addi r0, r13, lbl_803495C8@sda21
/* 801B0EC8 001ADC08  90 6D AC 08 */	stw r3, lbl_803495C8@sda21(r13)
/* 801B0ECC 001ADC0C  90 0D AC 04 */	stw r0, BI2DebugFlag@sda21(r13)
/* 801B0ED0 001ADC10  88 04 30 E9 */	lbz r0, 0x30e9(r4)
/* 801B0ED4 001ADC14  90 0D AE 20 */	stw r0, __PADSpec@sda21(r13)
func_801B0ED8:
/* 801B0ED8 001ADC18  38 00 00 01 */	li r0, 0x1
/* 801B0EDC 001ADC1C  80 6D AC 00 */	lwz r3, BootInfo@sda21(r13)
/* 801B0EE0 001ADC20  90 0D AD 2C */	stw r0, __DVDLongFileNameFlag@sda21(r13)
/* 801B0EE4 001ADC24  80 63 00 30 */	lwz r3, 0x30(r3)
/* 801B0EE8 001ADC28  28 03 00 00 */	cmplwi r3, 0x0
/* 801B0EEC 001ADC2C  40 82 00 10 */	bne func_801B0EFC
/* 801B0EF0 001ADC30  3C 60 80 36 */	lis r3, __ArenaLo@ha
/* 801B0EF4 001ADC34  38 63 EF A0 */	addi r3, r3, __ArenaLo@l
/* 801B0EF8 001ADC38  48 00 00 04 */	b func_801B0EFC
func_801B0EFC:
/* 801B0EFC 001ADC3C  48 00 11 F1 */	bl OSSetArenaLo
/* 801B0F00 001ADC40  80 6D AC 00 */	lwz r3, BootInfo@sda21(r13)
/* 801B0F04 001ADC44  80 03 00 30 */	lwz r0, 0x30(r3)
/* 801B0F08 001ADC48  28 00 00 00 */	cmplwi r0, 0x0
/* 801B0F0C 001ADC4C  40 82 00 30 */	bne lbl_801B0F3C
/* 801B0F10 001ADC50  80 6D AC 04 */	lwz r3, BI2DebugFlag@sda21(r13)
/* 801B0F14 001ADC54  28 03 00 00 */	cmplwi r3, 0x0
/* 801B0F18 001ADC58  41 82 00 24 */	beq lbl_801B0F3C
/* 801B0F1C 001ADC5C  80 03 00 00 */	lwz r0, 0x0(r3)
/* 801B0F20 001ADC60  28 00 00 02 */	cmplwi r0, 0x2
/* 801B0F24 001ADC64  40 80 00 18 */	bge lbl_801B0F3C
/* 801B0F28 001ADC68  3C 60 80 36 */	lis r3, _stack_addr@ha
/* 801B0F2C 001ADC6C  38 63 CF A0 */	addi r3, r3, _stack_addr@l
/* 801B0F30 001ADC70  38 03 00 1F */	addi r0, r3, 0x1f
/* 801B0F34 001ADC74  54 03 00 34 */	rlwinm r3, r0, 0, 0, 26
/* 801B0F38 001ADC78  48 00 11 B5 */	bl OSSetArenaLo
lbl_801B0F3C:
/* 801B0F3C 001ADC7C  80 6D AC 00 */	lwz r3, BootInfo@sda21(r13)
/* 801B0F40 001ADC80  80 63 00 34 */	lwz r3, 0x34(r3)
/* 801B0F44 001ADC84  28 03 00 00 */	cmplwi r3, 0x0
/* 801B0F48 001ADC88  40 82 00 10 */	bne func_801B0F58
/* 801B0F4C 001ADC8C  3C 60 81 70 */	lis r3, __ArenaHi@ha
/* 801B0F50 001ADC90  38 63 00 00 */	addi r3, r3, __ArenaHi@l
/* 801B0F54 001ADC94  48 00 00 04 */	b func_801B0F58
func_801B0F58:
/* 801B0F58 001ADC98  48 00 11 8D */	bl OSSetArenaHi
/* 801B0F5C 001ADC9C  48 00 02 5D */	bl OSExceptionInit
/* 801B0F60 001ADCA0  48 00 5A 29 */	bl __OSInitSystemCall
/* 801B0F64 001ADCA4  48 00 06 B5 */	bl OSInitAlarm
/* 801B0F68 001ADCA8  48 00 3D 29 */	bl __OSModuleInit
/* 801B0F6C 001ADCAC  48 00 2B 55 */	bl __OSInterruptInit
/* 801B0F70 001ADCB0  3C 60 80 1B */	lis r3, __OSResetSWInterruptHandler@ha
/* 801B0F74 001ADCB4  38 83 59 74 */	addi r4, r3, __OSResetSWInterruptHandler@l
/* 801B0F78 001ADCB8  38 60 00 16 */	li r3, 0x16
/* 801B0F7C 001ADCBC  48 00 2B 15 */	bl __OSSetInterruptHandler
/* 801B0F80 001ADCC0  48 00 23 79 */	bl __OSContextInit
/* 801B0F84 001ADCC4  48 00 1A 59 */	bl __OSCacheInit
/* 801B0F88 001ADCC8  48 04 64 B9 */	bl EXIInit
/* 801B0F8C 001ADCCC  48 04 43 69 */	bl SIInit
/* 801B0F90 001ADCD0  48 00 4F 09 */	bl __OSInitSram
/* 801B0F94 001ADCD4  48 00 5A 5D */	bl __OSThreadInit
/* 801B0F98 001ADCD8  48 00 11 5D */	bl __OSInitAudioSystem
/* 801B0F9C 001ADCDC  4B FF FB 49 */	bl PPCMfhid2
/* 801B0FA0 001ADCE0  54 63 00 80 */	rlwinm r3, r3, 0, 2, 0
/* 801B0FA4 001ADCE4  4B FF FB 49 */	bl PPCMthid2
/* 801B0FA8 001ADCE8  80 0D AC 30 */	lwz r0, __OSInIPL@sda21(r13)
/* 801B0FAC 001ADCEC  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B0FB0 001ADCF0  40 82 00 08 */	bne lbl_801B0FB8
/* 801B0FB4 001ADCF4  48 00 40 B9 */	bl __OSInitMemoryProtection
lbl_801B0FB8:
/* 801B0FB8 001ADCF8  38 7F 00 44 */	addi r3, r31, 0x44
/* 801B0FBC 001ADCFC  4C C6 31 82 */	crclr 6
/* 801B0FC0 001ADD00  48 00 24 AD */	bl OSReport
/* 801B0FC4 001ADD04  38 7F 00 54 */	addi r3, r31, 0x54
/* 801B0FC8 001ADD08  4C C6 31 82 */	crclr 6
/* 801B0FCC 001ADD0C  38 9F 00 6C */	addi r4, r31, 0x6c
/* 801B0FD0 001ADD10  38 BF 00 78 */	addi r5, r31, 0x78
/* 801B0FD4 001ADD14  48 00 24 99 */	bl OSReport
/* 801B0FD8 001ADD18  38 7F 00 84 */	addi r3, r31, 0x84
/* 801B0FDC 001ADD1C  4C C6 31 82 */	crclr 6
/* 801B0FE0 001ADD20  48 00 24 8D */	bl OSReport
/* 801B0FE4 001ADD24  80 6D AC 00 */	lwz r3, BootInfo@sda21(r13)
/* 801B0FE8 001ADD28  28 03 00 00 */	cmplwi r3, 0x0
/* 801B0FEC 001ADD2C  41 82 00 10 */	beq lbl_801B0FFC
/* 801B0FF0 001ADD30  80 83 00 2C */	lwz r4, 0x2c(r3)
/* 801B0FF4 001ADD34  28 04 00 00 */	cmplwi r4, 0x0
/* 801B0FF8 001ADD38  40 82 00 10 */	bne func_801B1008
lbl_801B0FFC:
/* 801B0FFC 001ADD3C  3C 60 10 00 */	lis r3, 0x1000
/* 801B1000 001ADD40  38 83 00 02 */	addi r4, r3, 0x2
/* 801B1004 001ADD44  48 00 00 04 */	b func_801B1008
func_801B1008:
/* 801B1008 001ADD48  54 83 00 06 */	rlwinm r3, r4, 0, 0, 3
/* 801B100C 001ADD4C  3C 00 10 00 */	lis r0, 0x1000
/* 801B1010 001ADD50  7C 03 00 00 */	cmpw r3, r0
/* 801B1014 001ADD54  41 82 00 34 */	beq lbl_801B1048
/* 801B1018 001ADD58  40 80 00 10 */	bge lbl_801B1028
/* 801B101C 001ADD5C  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B1020 001ADD60  41 82 00 18 */	beq lbl_801B1038
/* 801B1024 001ADD64  48 00 00 B8 */	b func_801B10DC
lbl_801B1028:
/* 801B1028 001ADD68  3C 00 20 00 */	lis r0, 0x2000
/* 801B102C 001ADD6C  7C 03 00 00 */	cmpw r3, r0
/* 801B1030 001ADD70  41 82 00 18 */	beq lbl_801B1048
/* 801B1034 001ADD74  48 00 00 A8 */	b func_801B10DC
lbl_801B1038:
/* 801B1038 001ADD78  4C C6 31 82 */	crclr 6
/* 801B103C 001ADD7C  38 7F 00 94 */	addi r3, r31, 0x94
/* 801B1040 001ADD80  48 00 24 2D */	bl OSReport
/* 801B1044 001ADD84  48 00 00 A4 */	b func_801B10E8
lbl_801B1048:
/* 801B1048 001ADD88  3C 60 10 00 */	lis r3, 0x1000
/* 801B104C 001ADD8C  54 85 01 3E */	clrlwi r5, r4, 4
/* 801B1050 001ADD90  38 03 00 02 */	addi r0, r3, 0x2
/* 801B1054 001ADD94  7C 05 00 00 */	cmpw r5, r0
/* 801B1058 001ADD98  41 82 00 48 */	beq lbl_801B10A0
/* 801B105C 001ADD9C  40 80 00 14 */	bge lbl_801B1070
/* 801B1060 001ADDA0  7C 05 18 00 */	cmpw r5, r3
/* 801B1064 001ADDA4  41 82 00 1C */	beq lbl_801B1080
/* 801B1068 001ADDA8  40 80 00 28 */	bge lbl_801B1090
/* 801B106C 001ADDAC  48 00 00 54 */	b func_801B10C0
lbl_801B1070:
/* 801B1070 001ADDB0  38 03 00 04 */	addi r0, r3, 0x4
/* 801B1074 001ADDB4  7C 05 00 00 */	cmpw r5, r0
/* 801B1078 001ADDB8  40 80 00 48 */	bge func_801B10C0
/* 801B107C 001ADDBC  48 00 00 34 */	b func_801B10B0
lbl_801B1080:
/* 801B1080 001ADDC0  38 7F 00 A0 */	addi r3, r31, 0xa0
/* 801B1084 001ADDC4  4C C6 31 82 */	crclr 6
/* 801B1088 001ADDC8  48 00 23 E5 */	bl OSReport
/* 801B108C 001ADDCC  48 00 00 5C */	b func_801B10E8
lbl_801B1090:
/* 801B1090 001ADDD0  38 7F 00 B0 */	addi r3, r31, 0xb0
/* 801B1094 001ADDD4  4C C6 31 82 */	crclr 6
/* 801B1098 001ADDD8  48 00 23 D5 */	bl OSReport
/* 801B109C 001ADDDC  48 00 00 4C */	b func_801B10E8
lbl_801B10A0:
/* 801B10A0 001ADDE0  38 7F 00 C0 */	addi r3, r31, 0xc0
/* 801B10A4 001ADDE4  4C C6 31 82 */	crclr 6
/* 801B10A8 001ADDE8  48 00 23 C5 */	bl OSReport
/* 801B10AC 001ADDEC  48 00 00 3C */	b func_801B10E8
func_801B10B0:
/* 801B10B0 001ADDF0  38 7F 00 D0 */	addi r3, r31, 0xd0
/* 801B10B4 001ADDF4  4C C6 31 82 */	crclr 6
/* 801B10B8 001ADDF8  48 00 23 B5 */	bl OSReport
/* 801B10BC 001ADDFC  48 00 00 2C */	b func_801B10E8
func_801B10C0:
/* 801B10C0 001ADE00  54 86 01 3E */	clrlwi r6, r4, 4
/* 801B10C4 001ADE04  4C C6 31 82 */	crclr 6
/* 801B10C8 001ADE08  7C 85 23 78 */	mr r5, r4
/* 801B10CC 001ADE0C  38 7F 00 E0 */	addi r3, r31, 0xe0
/* 801B10D0 001ADE10  38 86 FF FD */	addi r4, r6, -0x3
/* 801B10D4 001ADE14  48 00 23 99 */	bl OSReport
/* 801B10D8 001ADE18  48 00 00 10 */	b func_801B10E8
func_801B10DC:
/* 801B10DC 001ADE1C  4C C6 31 82 */	crclr 6
/* 801B10E0 001ADE20  38 6D A1 C4 */	addi r3, r13, lbl_80348B84@sda21
/* 801B10E4 001ADE24  48 00 23 89 */	bl OSReport
func_801B10E8:
/* 801B10E8 001ADE28  80 8D AC 00 */	lwz r4, BootInfo@sda21(r13)
/* 801B10EC 001ADE2C  38 7F 00 FC */	addi r3, r31, 0xfc
/* 801B10F0 001ADE30  4C C6 31 82 */	crclr 6
/* 801B10F4 001ADE34  80 04 00 28 */	lwz r0, 0x28(r4)
/* 801B10F8 001ADE38  54 04 65 3E */	srwi r4, r0, 20
/* 801B10FC 001ADE3C  48 00 23 71 */	bl OSReport
/* 801B1100 001ADE40  48 00 0F D5 */	bl OSGetArenaHi
/* 801B1104 001ADE44  7C 7D 1B 78 */	mr r29, r3
/* 801B1108 001ADE48  48 00 0F D5 */	bl OSGetArenaLo
/* 801B110C 001ADE4C  7C 64 1B 78 */	mr r4, r3
/* 801B1110 001ADE50  4C C6 31 82 */	crclr 6
/* 801B1114 001ADE54  7F A5 EB 78 */	mr r5, r29
/* 801B1118 001ADE58  38 7F 01 0C */	addi r3, r31, 0x10c
/* 801B111C 001ADE5C  48 00 23 51 */	bl OSReport
/* 801B1120 001ADE60  80 6D A1 C0 */	lwz r3, lbl_80348B80@sda21(r13)
/* 801B1124 001ADE64  48 00 04 C9 */	bl OSRegisterVersion
/* 801B1128 001ADE68  80 6D AC 04 */	lwz r3, BI2DebugFlag@sda21(r13)
/* 801B112C 001ADE6C  28 03 00 00 */	cmplwi r3, 0x0
/* 801B1130 001ADE70  41 82 00 14 */	beq lbl_801B1144
/* 801B1134 001ADE74  80 03 00 00 */	lwz r0, 0x0(r3)
/* 801B1138 001ADE78  28 00 00 02 */	cmplwi r0, 0x2
/* 801B113C 001ADE7C  41 80 00 08 */	blt lbl_801B1144
/* 801B1140 001ADE80  48 08 3C 31 */	bl func_80234D70
lbl_801B1144:
/* 801B1144 001ADE84  4B FF FB 39 */	bl ClearArena
/* 801B1148 001ADE88  48 00 29 11 */	bl OSEnableInterrupts
/* 801B114C 001ADE8C  80 0D AC 30 */	lwz r0, __OSInIPL@sda21(r13)
/* 801B1150 001ADE90  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B1154 001ADE94  40 82 00 48 */	bne func_801B119C
/* 801B1158 001ADE98  48 00 9C 99 */	bl DVDInit
/* 801B115C 001ADE9C  80 0D AC 0C */	lwz r0, __OSIsGcam@sda21(r13)
/* 801B1160 001ADEA0  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B1164 001ADEA4  41 82 00 18 */	beq lbl_801B117C
/* 801B1168 001ADEA8  3C 60 00 01 */	lis r3, 0x1
/* 801B116C 001ADEAC  38 03 90 00 */	addi r0, r3, -0x7000
/* 801B1170 001ADEB0  3C 60 80 00 */	lis r3, 0x800030E6@ha
/* 801B1174 001ADEB4  B0 03 30 E6 */	sth r0, 0x800030E6@l(r3)
/* 801B1178 001ADEB8  48 00 00 24 */	b func_801B119C
lbl_801B117C:
/* 801B117C 001ADEBC  7F C3 F3 78 */	mr r3, r30
/* 801B1180 001ADEC0  38 80 00 20 */	li r4, 0x20
/* 801B1184 001ADEC4  48 00 12 19 */	bl DCInvalidateRange
/* 801B1188 001ADEC8  3C 60 80 1B */	lis r3, InquiryCallback@ha
/* 801B118C 001ADECC  38 A3 0D A4 */	addi r5, r3, InquiryCallback@l
/* 801B1190 001ADED0  7F C4 F3 78 */	mr r4, r30
/* 801B1194 001ADED4  38 7E 00 20 */	addi r3, r30, 0x20
/* 801B1198 001ADED8  48 00 BD C9 */	bl func_801BCF60
func_801B119C:
/* 801B119C 001ADEDC  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B11A0 001ADEE0  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B11A4 001ADEE4  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801B11A8 001ADEE8  83 A1 00 0C */	lwz r29, 0xc(r1)
/* 801B11AC 001ADEEC  38 21 00 18 */	addi r1, r1, 0x18
/* 801B11B0 001ADEF0  7C 08 03 A6 */	mtlr r0
/* 801B11B4 001ADEF4  4E 80 00 20 */	blr

.global OSExceptionInit
OSExceptionInit:
/* 801B11B8 001ADEF8  7C 08 02 A6 */	mflr r0
/* 801B11BC 001ADEFC  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B11C0 001ADF00  94 21 FF C8 */	stwu r1, -0x38(r1)
/* 801B11C4 001ADF04  BE 81 00 08 */	stmw r20, 0x8(r1)
/* 801B11C8 001ADF08  3C 60 80 00 */	lis r3, 0x80000060@ha
/* 801B11CC 001ADF0C  80 03 00 60 */	lwz r0, 0x80000060@l(r3)
/* 801B11D0 001ADF10  3C 80 80 1B */	lis r4, __OSEVSetNumber@ha
/* 801B11D4 001ADF14  3B C4 14 F8 */	addi r30, r4, __OSEVSetNumber@l
/* 801B11D8 001ADF18  3C A0 80 1B */	lis r5, OSExceptionVector@ha
/* 801B11DC 001ADF1C  83 3E 00 00 */	lwz r25, 0x0(r30)
/* 801B11E0 001ADF20  3C 80 80 1B */	lis r4, lbl_801B1528@ha
/* 801B11E4 001ADF24  38 A5 14 90 */	addi r5, r5, OSExceptionVector@l
/* 801B11E8 001ADF28  38 84 15 28 */	addi r4, r4, lbl_801B1528@l
/* 801B11EC 001ADF2C  3C C0 80 2E */	lis r6, lbl_802DFC88@ha
/* 801B11F0 001ADF30  28 00 00 00 */	cmplwi r0, 0x0
/* 801B11F4 001ADF34  7C B8 2B 78 */	mr r24, r5
/* 801B11F8 001ADF38  3B A6 FC 88 */	addi r29, r6, lbl_802DFC88@l
/* 801B11FC 001ADF3C  7E E5 20 50 */	subf r23, r5, r4
/* 801B1200 001ADF40  3A 83 00 60 */	addi r20, r3, 0x60
/* 801B1204 001ADF44  40 82 00 4C */	bne lbl_801B1250
/* 801B1208 001ADF48  38 7D 01 60 */	addi r3, r29, 0x160
/* 801B120C 001ADF4C  4C C6 31 82 */	crclr 6
/* 801B1210 001ADF50  48 02 21 D5 */	bl DBPrintf
/* 801B1214 001ADF54  3C 80 80 1B */	lis r4, __OSDBIntegrator@ha
/* 801B1218 001ADF58  3C 60 80 1B */	lis r3, __OSDBJump@ha
/* 801B121C 001ADF5C  38 03 14 5C */	addi r0, r3, __OSDBJump@l
/* 801B1220 001ADF60  38 84 14 38 */	addi r4, r4, __OSDBIntegrator@l
/* 801B1224 001ADF64  7E A4 00 50 */	subf r21, r4, r0
/* 801B1228 001ADF68  7E 83 A3 78 */	mr r3, r20
/* 801B122C 001ADF6C  7E A5 AB 78 */	mr r5, r21
/* 801B1230 001ADF70  4B E5 43 9D */	bl memcpy
/* 801B1234 001ADF74  7E 83 A3 78 */	mr r3, r20
/* 801B1238 001ADF78  7E A4 AB 78 */	mr r4, r21
/* 801B123C 001ADF7C  48 00 11 ED */	bl DCFlushRangeNoSync
/* 801B1240 001ADF80  7C 00 04 AC */	sync
/* 801B1244 001ADF84  7E 83 A3 78 */	mr r3, r20
/* 801B1248 001ADF88  7E A4 AB 78 */	mr r4, r21
/* 801B124C 001ADF8C  48 00 12 61 */	bl ICInvalidateRange
lbl_801B1250:
/* 801B1250 001ADF90  3C 80 80 1B */	lis r4, __OSDBJump@ha
/* 801B1254 001ADF94  3C 60 80 1B */	lis r3, __OSSetExceptionHandler@ha
/* 801B1258 001ADF98  3B E4 14 5C */	addi r31, r4, __OSDBJump@l
/* 801B125C 001ADF9C  38 03 14 60 */	addi r0, r3, __OSSetExceptionHandler@l
/* 801B1260 001ADFA0  3B 9D 01 24 */	addi r28, r29, 0x124
/* 801B1264 001ADFA4  7F 7F 00 50 */	subf r27, r31, r0
/* 801B1268 001ADFA8  3B 40 00 00 */	li r26, 0x0
/* 801B126C 001ADFAC  48 00 00 04 */	b func_801B1270
func_801B1270:
/* 801B1270 001ADFB0  3C 60 80 1B */	lis r3, __DBVECTOR@ha
/* 801B1274 001ADFB4  3A A3 14 E8 */	addi r21, r3, __DBVECTOR@l
/* 801B1278 001ADFB8  3E C0 60 00 */	lis r22, 0x6000
/* 801B127C 001ADFBC  48 00 00 04 */	b func_801B1280
func_801B1280:
/* 801B1280 001ADFC0  48 00 01 48 */	b func_801B13C8
lbl_801B1284:
/* 801B1284 001ADFC4  80 6D AC 04 */	lwz r3, BI2DebugFlag@sda21(r13)
/* 801B1288 001ADFC8  28 03 00 00 */	cmplwi r3, 0x0
/* 801B128C 001ADFCC  41 82 00 34 */	beq lbl_801B12C0
/* 801B1290 001ADFD0  80 03 00 00 */	lwz r0, 0x0(r3)
/* 801B1294 001ADFD4  28 00 00 02 */	cmplwi r0, 0x2
/* 801B1298 001ADFD8  41 80 00 28 */	blt lbl_801B12C0
/* 801B129C 001ADFDC  7F 43 D3 78 */	mr r3, r26
/* 801B12A0 001ADFE0  48 02 21 29 */	bl __DBIsExceptionMarked
/* 801B12A4 001ADFE4  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B12A8 001ADFE8  41 82 00 18 */	beq lbl_801B12C0
/* 801B12AC 001ADFEC  38 7D 01 7C */	addi r3, r29, 0x17c
/* 801B12B0 001ADFF0  4C C6 31 82 */	crclr 6
/* 801B12B4 001ADFF4  57 44 06 3E */	clrlwi r4, r26, 24
/* 801B12B8 001ADFF8  48 02 21 2D */	bl DBPrintf
/* 801B12BC 001ADFFC  48 00 01 04 */	b func_801B13C0
lbl_801B12C0:
/* 801B12C0 001AE000  57 54 06 3E */	clrlwi r20, r26, 24
/* 801B12C4 001AE004  7F 20 A3 78 */	or r0, r25, r20
/* 801B12C8 001AE008  90 1E 00 00 */	stw r0, 0x0(r30)
/* 801B12CC 001AE00C  7F 43 D3 78 */	mr r3, r26
/* 801B12D0 001AE010  48 02 20 F9 */	bl __DBIsExceptionMarked
/* 801B12D4 001AE014  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B12D8 001AE018  41 82 00 28 */	beq lbl_801B1300
/* 801B12DC 001AE01C  7E 84 A3 78 */	mr r4, r20
/* 801B12E0 001AE020  4C C6 31 82 */	crclr 6
/* 801B12E4 001AE024  38 7D 01 AC */	addi r3, r29, 0x1ac
/* 801B12E8 001AE028  48 02 20 FD */	bl DBPrintf
/* 801B12EC 001AE02C  7E A3 AB 78 */	mr r3, r21
/* 801B12F0 001AE030  7F E4 FB 78 */	mr r4, r31
/* 801B12F4 001AE034  7F 65 DB 78 */	mr r5, r27
/* 801B12F8 001AE038  4B E5 42 D5 */	bl memcpy
/* 801B12FC 001AE03C  48 00 00 90 */	b func_801B138C
lbl_801B1300:
/* 801B1300 001AE040  7E A4 AB 78 */	mr r4, r21
/* 801B1304 001AE044  48 00 00 04 */	b func_801B1308
func_801B1308:
/* 801B1308 001AE048  28 1B 00 00 */	cmplwi r27, 0x0
/* 801B130C 001AE04C  38 7B 00 03 */	addi r3, r27, 0x3
/* 801B1310 001AE050  54 63 F0 BE */	srwi r3, r3, 2
/* 801B1314 001AE054  40 81 00 78 */	ble func_801B138C
/* 801B1318 001AE058  54 60 E8 FE */	srwi r0, r3, 3
/* 801B131C 001AE05C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B1320 001AE060  7C 09 03 A6 */	mtctr r0
/* 801B1324 001AE064  41 82 00 54 */	beq lbl_801B1378
/* 801B1328 001AE068  48 00 00 04 */	b func_801B132C
func_801B132C:
/* 801B132C 001AE06C  92 C4 00 00 */	stw r22, 0x0(r4)
/* 801B1330 001AE070  38 84 00 04 */	addi r4, r4, 0x4
/* 801B1334 001AE074  92 C4 00 00 */	stw r22, 0x0(r4)
/* 801B1338 001AE078  38 84 00 04 */	addi r4, r4, 0x4
/* 801B133C 001AE07C  92 C4 00 00 */	stw r22, 0x0(r4)
/* 801B1340 001AE080  38 84 00 04 */	addi r4, r4, 0x4
/* 801B1344 001AE084  92 C4 00 00 */	stw r22, 0x0(r4)
/* 801B1348 001AE088  38 84 00 04 */	addi r4, r4, 0x4
/* 801B134C 001AE08C  92 C4 00 00 */	stw r22, 0x0(r4)
/* 801B1350 001AE090  38 84 00 04 */	addi r4, r4, 0x4
/* 801B1354 001AE094  92 C4 00 00 */	stw r22, 0x0(r4)
/* 801B1358 001AE098  38 84 00 04 */	addi r4, r4, 0x4
/* 801B135C 001AE09C  92 C4 00 00 */	stw r22, 0x0(r4)
/* 801B1360 001AE0A0  38 84 00 04 */	addi r4, r4, 0x4
/* 801B1364 001AE0A4  92 C4 00 00 */	stw r22, 0x0(r4)
/* 801B1368 001AE0A8  38 84 00 04 */	addi r4, r4, 0x4
/* 801B136C 001AE0AC  42 00 FF C0 */	bdnz func_801B132C
/* 801B1370 001AE0B0  70 63 00 07 */	andi. r3, r3, 0x7
/* 801B1374 001AE0B4  41 82 00 18 */	beq func_801B138C
lbl_801B1378:
/* 801B1378 001AE0B8  7C 69 03 A6 */	mtctr r3
/* 801B137C 001AE0BC  48 00 00 04 */	b func_801B1380
func_801B1380:
/* 801B1380 001AE0C0  92 C4 00 00 */	stw r22, 0x0(r4)
/* 801B1384 001AE0C4  38 84 00 04 */	addi r4, r4, 0x4
/* 801B1388 001AE0C8  42 00 FF F8 */	bdnz func_801B1380
func_801B138C:
/* 801B138C 001AE0CC  80 7C 00 00 */	lwz r3, 0x0(r28)
/* 801B1390 001AE0D0  7F 04 C3 78 */	mr r4, r24
/* 801B1394 001AE0D4  7E E5 BB 78 */	mr r5, r23
/* 801B1398 001AE0D8  3E 83 80 00 */	addis r20, r3, 0x8000
/* 801B139C 001AE0DC  7E 83 A3 78 */	mr r3, r20
/* 801B13A0 001AE0E0  4B E5 42 2D */	bl memcpy
/* 801B13A4 001AE0E4  7E 83 A3 78 */	mr r3, r20
/* 801B13A8 001AE0E8  7E E4 BB 78 */	mr r4, r23
/* 801B13AC 001AE0EC  48 00 10 7D */	bl DCFlushRangeNoSync
/* 801B13B0 001AE0F0  7C 00 04 AC */	sync
/* 801B13B4 001AE0F4  7E 83 A3 78 */	mr r3, r20
/* 801B13B8 001AE0F8  7E E4 BB 78 */	mr r4, r23
/* 801B13BC 001AE0FC  48 00 10 F1 */	bl ICInvalidateRange
func_801B13C0:
/* 801B13C0 001AE100  3B 9C 00 04 */	addi r28, r28, 0x4
/* 801B13C4 001AE104  3B 5A 00 01 */	addi r26, r26, 0x1
func_801B13C8:
/* 801B13C8 001AE108  57 40 06 3E */	clrlwi r0, r26, 24
/* 801B13CC 001AE10C  28 00 00 0F */	cmplwi r0, 0xf
/* 801B13D0 001AE110  41 80 FE B4 */	blt lbl_801B1284
/* 801B13D4 001AE114  3C 60 80 00 */	lis r3, 0x80003000@ha
/* 801B13D8 001AE118  38 03 30 00 */	addi r0, r3, 0x80003000@l
/* 801B13DC 001AE11C  90 0D AC 24 */	stw r0, OSExceptionTable@sda21(r13)
/* 801B13E0 001AE120  3A 80 00 00 */	li r20, 0x0
/* 801B13E4 001AE124  48 00 00 04 */	b func_801B13E8
func_801B13E8:
/* 801B13E8 001AE128  3C 60 80 1B */	lis r3, OSDefaultExceptionHandler@ha
/* 801B13EC 001AE12C  3A E3 15 2C */	addi r23, r3, OSDefaultExceptionHandler@l
/* 801B13F0 001AE130  48 00 00 04 */	b func_801B13F4
func_801B13F4:
/* 801B13F4 001AE134  48 00 00 14 */	b func_801B1408
lbl_801B13F8:
/* 801B13F8 001AE138  7E 83 A3 78 */	mr r3, r20
/* 801B13FC 001AE13C  7E E4 BB 78 */	mr r4, r23
/* 801B1400 001AE140  48 00 00 61 */	bl __OSSetExceptionHandler
/* 801B1404 001AE144  3A 94 00 01 */	addi r20, r20, 0x1
func_801B1408:
/* 801B1408 001AE148  56 80 06 3E */	clrlwi r0, r20, 24
/* 801B140C 001AE14C  28 00 00 0F */	cmplwi r0, 0xf
/* 801B1410 001AE150  41 80 FF E8 */	blt lbl_801B13F8
/* 801B1414 001AE154  93 3E 00 00 */	stw r25, 0x0(r30)
/* 801B1418 001AE158  38 7D 01 DC */	addi r3, r29, 0x1dc
/* 801B141C 001AE15C  4C C6 31 82 */	crclr 6
/* 801B1420 001AE160  48 02 1F C5 */	bl DBPrintf
/* 801B1424 001AE164  BA 81 00 08 */	lmw r20, 0x8(r1)
/* 801B1428 001AE168  80 01 00 3C */	lwz r0, 0x3c(r1)
/* 801B142C 001AE16C  38 21 00 38 */	addi r1, r1, 0x38
/* 801B1430 001AE170  7C 08 03 A6 */	mtlr r0
/* 801B1434 001AE174  4E 80 00 20 */	blr

.global __OSDBIntegrator
__OSDBIntegrator:
/* 801B1438 001AE178  38 A0 00 40 */	li r5, 0x40
/* 801B143C 001AE17C  7C 68 02 A6 */	mflr r3
/* 801B1440 001AE180  90 65 00 0C */	stw r3, 0xc(r5)
/* 801B1444 001AE184  80 65 00 08 */	lwz r3, 0x8(r5)
/* 801B1448 001AE188  64 63 80 00 */	oris r3, r3, 0x8000
/* 801B144C 001AE18C  7C 68 03 A6 */	mtlr r3
/* 801B1450 001AE190  38 60 00 30 */	li r3, 0x30
/* 801B1454 001AE194  7C 60 01 24 */	mtmsr r3
/* 801B1458 001AE198  4E 80 00 20 */	blr

.global __OSDBJump
__OSDBJump:
/* 801B145C 001AE19C  48 00 00 63 */	bla 0x60

.global __OSSetExceptionHandler
__OSSetExceptionHandler:
/* 801B1460 001AE1A0  54 60 06 3E */	clrlwi r0, r3, 24
/* 801B1464 001AE1A4  80 6D AC 24 */	lwz r3, OSExceptionTable@sda21(r13)
/* 801B1468 001AE1A8  54 00 10 3A */	slwi r0, r0, 2
/* 801B146C 001AE1AC  7C A3 02 14 */	add r5, r3, r0
/* 801B1470 001AE1B0  80 65 00 00 */	lwz r3, 0x0(r5)
/* 801B1474 001AE1B4  90 85 00 00 */	stw r4, 0x0(r5)
/* 801B1478 001AE1B8  4E 80 00 20 */	blr

.global __OSGetExceptionHandler
__OSGetExceptionHandler:
/* 801B147C 001AE1BC  54 60 06 3E */	clrlwi r0, r3, 24
/* 801B1480 001AE1C0  80 6D AC 24 */	lwz r3, OSExceptionTable@sda21(r13)
/* 801B1484 001AE1C4  54 00 10 3A */	slwi r0, r0, 2
/* 801B1488 001AE1C8  7C 63 00 2E */	lwzx r3, r3, r0
/* 801B148C 001AE1CC  4E 80 00 20 */	blr

.global OSExceptionVector
OSExceptionVector:
/* 801B1490 001AE1D0  7C 90 43 A6 */	mtspr 272, r4
/* 801B1494 001AE1D4  80 80 00 C0 */	lwz r4, 0xc0(r0)
/* 801B1498 001AE1D8  90 64 00 0C */	stw r3, 0xc(r4)
/* 801B149C 001AE1DC  7C 70 42 A6 */	mfspr r3, 272
/* 801B14A0 001AE1E0  90 64 00 10 */	stw r3, 0x10(r4)
/* 801B14A4 001AE1E4  90 A4 00 14 */	stw r5, 0x14(r4)
/* 801B14A8 001AE1E8  A0 64 01 A2 */	lhz r3, 0x1a2(r4)
/* 801B14AC 001AE1EC  60 63 00 02 */	ori r3, r3, 0x2
/* 801B14B0 001AE1F0  B0 64 01 A2 */	sth r3, 0x1a2(r4)
/* 801B14B4 001AE1F4  7C 60 00 26 */	mfcr r3
/* 801B14B8 001AE1F8  90 64 00 80 */	stw r3, 0x80(r4)
/* 801B14BC 001AE1FC  7C 68 02 A6 */	mflr r3
/* 801B14C0 001AE200  90 64 00 84 */	stw r3, 0x84(r4)
/* 801B14C4 001AE204  7C 69 02 A6 */	mfctr r3
/* 801B14C8 001AE208  90 64 00 88 */	stw r3, 0x88(r4)
/* 801B14CC 001AE20C  7C 61 02 A6 */	mfxer r3
/* 801B14D0 001AE210  90 64 00 8C */	stw r3, 0x8c(r4)
/* 801B14D4 001AE214  7C 7A 02 A6 */	mfspr r3, 26
/* 801B14D8 001AE218  90 64 01 98 */	stw r3, 0x198(r4)
/* 801B14DC 001AE21C  7C 7B 02 A6 */	mfspr r3, 27
/* 801B14E0 001AE220  90 64 01 9C */	stw r3, 0x19c(r4)
/* 801B14E4 001AE224  7C 65 1B 78 */	mr r5, r3
__DBVECTOR:
/* 801B14E8 001AE228  60 00 00 00 */	nop
/* 801B14EC 001AE22C  7C 60 00 A6 */	mfmsr r3
/* 801B14F0 001AE230  60 63 00 30 */	ori r3, r3, 0x30
/* 801B14F4 001AE234  7C 7B 03 A6 */	mtspr 27, r3
__OSEVSetNumber:
/* 801B14F8 001AE238  38 60 00 00 */	li r3, 0x0
/* 801B14FC 001AE23C  80 80 00 D4 */	lwz r4, 0xd4(r0)
/* 801B1500 001AE240  54 A5 07 BD */	rlwinm. r5, r5, 0, 30, 30
/* 801B1504 001AE244  40 82 00 14 */	bne lbl_801B1518
/* 801B1508 001AE248  3C A0 80 1B */	lis r5, OSDefaultExceptionHandler@ha
/* 801B150C 001AE24C  38 A5 15 2C */	addi r5, r5, OSDefaultExceptionHandler@l
/* 801B1510 001AE250  7C BA 03 A6 */	mtspr 26, r5
/* 801B1514 001AE254  4C 00 00 64 */	rfi
lbl_801B1518:
/* 801B1518 001AE258  54 65 15 BA */	rlwinm r5, r3, 2, 22, 29
/* 801B151C 001AE25C  80 A5 30 00 */	lwz r5, 0x3000(r5)
/* 801B1520 001AE260  7C BA 03 A6 */	mtspr 26, r5
/* 801B1524 001AE264  4C 00 00 64 */	rfi
lbl_801B1528:
/* 801B1528 001AE268  60 00 00 00 */	nop

.global OSDefaultExceptionHandler
OSDefaultExceptionHandler:
/* 801B152C 001AE26C  90 04 00 00 */	stw r0, 0x0(r4)
/* 801B1530 001AE270  90 24 00 04 */	stw r1, 0x4(r4)
/* 801B1534 001AE274  90 44 00 08 */	stw r2, 0x8(r4)
/* 801B1538 001AE278  BC C4 00 18 */	stmw r6, 0x18(r4)
/* 801B153C 001AE27C  7C 11 E2 A6 */	mfspr r0, 913
/* 801B1540 001AE280  90 04 01 A8 */	stw r0, 0x1a8(r4)
/* 801B1544 001AE284  7C 12 E2 A6 */	mfspr r0, 914
/* 801B1548 001AE288  90 04 01 AC */	stw r0, 0x1ac(r4)
/* 801B154C 001AE28C  7C 13 E2 A6 */	mfspr r0, 915
/* 801B1550 001AE290  90 04 01 B0 */	stw r0, 0x1b0(r4)
/* 801B1554 001AE294  7C 14 E2 A6 */	mfspr r0, 916
/* 801B1558 001AE298  90 04 01 B4 */	stw r0, 0x1b4(r4)
/* 801B155C 001AE29C  7C 15 E2 A6 */	mfspr r0, 917
/* 801B1560 001AE2A0  90 04 01 B8 */	stw r0, 0x1b8(r4)
/* 801B1564 001AE2A4  7C 16 E2 A6 */	mfspr r0, 918
/* 801B1568 001AE2A8  90 04 01 BC */	stw r0, 0x1bc(r4)
/* 801B156C 001AE2AC  7C 17 E2 A6 */	mfspr r0, 919
/* 801B1570 001AE2B0  90 04 01 C0 */	stw r0, 0x1c0(r4)
/* 801B1574 001AE2B4  7C B2 02 A6 */	mfdsisr r5
/* 801B1578 001AE2B8  7C D3 02 A6 */	mfspr r6, 19
/* 801B157C 001AE2BC  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B1580 001AE2C0  48 00 21 84 */	b __OSUnhandledException

.global __OSPSInit
__OSPSInit:
/* 801B1584 001AE2C4  7C 08 02 A6 */	mflr r0
/* 801B1588 001AE2C8  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B158C 001AE2CC  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B1590 001AE2D0  4B FF F5 55 */	bl PPCMfhid2
/* 801B1594 001AE2D4  64 63 A0 00 */	oris r3, r3, 0xa000
/* 801B1598 001AE2D8  4B FF F5 55 */	bl PPCMthid2
/* 801B159C 001AE2DC  48 00 0F 45 */	bl ICFlashInvalidate
/* 801B15A0 001AE2E0  7C 00 04 AC */	sync
/* 801B15A4 001AE2E4  38 60 00 00 */	li r3, 0x0
/* 801B15A8 001AE2E8  7C 70 E3 A6 */	mtspr 912, r3
/* 801B15AC 001AE2EC  7C 71 E3 A6 */	mtspr 913, r3
/* 801B15B0 001AE2F0  7C 72 E3 A6 */	mtspr 914, r3
/* 801B15B4 001AE2F4  7C 73 E3 A6 */	mtspr 915, r3
/* 801B15B8 001AE2F8  7C 74 E3 A6 */	mtspr 916, r3
/* 801B15BC 001AE2FC  7C 75 E3 A6 */	mtspr 917, r3
/* 801B15C0 001AE300  7C 76 E3 A6 */	mtspr 918, r3
/* 801B15C4 001AE304  7C 77 E3 A6 */	mtspr 919, r3
/* 801B15C8 001AE308  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B15CC 001AE30C  38 21 00 08 */	addi r1, r1, 0x8
/* 801B15D0 001AE310  7C 08 03 A6 */	mtlr r0
/* 801B15D4 001AE314  4E 80 00 20 */	blr

.global __OSGetDIConfig
__OSGetDIConfig:
/* 801B15D8 001AE318  3C 60 CC 00 */	lis r3, 0xCC006000@ha
/* 801B15DC 001AE31C  38 63 60 00 */	addi r3, r3, 0xCC006000@l
/* 801B15E0 001AE320  80 03 00 24 */	lwz r0, 0x24(r3)
/* 801B15E4 001AE324  54 03 06 3E */	clrlwi r3, r0, 24
/* 801B15E8 001AE328  4E 80 00 20 */	blr

.global OSRegisterVersion
OSRegisterVersion:
/* 801B15EC 001AE32C  7C 08 02 A6 */	mflr r0
/* 801B15F0 001AE330  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B15F4 001AE334  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B15F8 001AE338  7C 64 1B 78 */	mr r4, r3
/* 801B15FC 001AE33C  4C C6 31 82 */	crclr 6
/* 801B1600 001AE340  38 6D A1 CC */	addi r3, r13, lbl_80348B8C@sda21
/* 801B1604 001AE344  48 00 1E 69 */	bl OSReport
/* 801B1608 001AE348  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B160C 001AE34C  38 21 00 08 */	addi r1, r1, 0x8
/* 801B1610 001AE350  7C 08 03 A6 */	mtlr r0
/* 801B1614 001AE354  4E 80 00 20 */	blr

/* Dolphin/OS/OS.o END */

/* Dolphin/OS/OSAlarm.o START */

.global OSInitAlarm
OSInitAlarm:
/* 801B1618 001AE358  7C 08 02 A6 */	mflr r0
/* 801B161C 001AE35C  38 60 00 08 */	li r3, 0x8
/* 801B1620 001AE360  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B1624 001AE364  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B1628 001AE368  4B FF FE 55 */	bl __OSGetExceptionHandler
/* 801B162C 001AE36C  3C 80 80 1B */	lis r4, DecrementerExceptionHandler@ha
/* 801B1630 001AE370  38 84 1C 84 */	addi r4, r4, DecrementerExceptionHandler@l
/* 801B1634 001AE374  7C 03 20 40 */	cmplw r3, r4
/* 801B1638 001AE378  41 82 00 28 */	beq lbl_801B1660
/* 801B163C 001AE37C  38 00 00 00 */	li r0, 0x0
/* 801B1640 001AE380  38 6D AC 40 */	addi r3, r13, AlarmQueue@sda21
/* 801B1644 001AE384  90 03 00 04 */	stw r0, 0x4(r3)
/* 801B1648 001AE388  38 60 00 08 */	li r3, 0x8
/* 801B164C 001AE38C  90 0D AC 40 */	stw r0, AlarmQueue@sda21(r13)
/* 801B1650 001AE390  4B FF FE 11 */	bl __OSSetExceptionHandler
/* 801B1654 001AE394  3C 60 80 2E */	lis r3, ResetFunctionInfo@ha
/* 801B1658 001AE398  38 63 FE 80 */	addi r3, r3, ResetFunctionInfo@l
/* 801B165C 001AE39C  48 00 3E F5 */	bl OSRegisterResetFunction
lbl_801B1660:
/* 801B1660 001AE3A0  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B1664 001AE3A4  38 21 00 08 */	addi r1, r1, 0x8
/* 801B1668 001AE3A8  7C 08 03 A6 */	mtlr r0
/* 801B166C 001AE3AC  4E 80 00 20 */	blr

.global OSCreateAlarm
OSCreateAlarm:
/* 801B1670 001AE3B0  38 00 00 00 */	li r0, 0x0
/* 801B1674 001AE3B4  90 03 00 00 */	stw r0, 0x0(r3)
/* 801B1678 001AE3B8  90 03 00 04 */	stw r0, 0x4(r3)
/* 801B167C 001AE3BC  4E 80 00 20 */	blr

.global InsertAlarm
InsertAlarm:
/* 801B1680 001AE3C0  7C 08 02 A6 */	mflr r0
/* 801B1684 001AE3C4  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B1688 001AE3C8  94 21 FF C0 */	stwu r1, -0x40(r1)
/* 801B168C 001AE3CC  BF 21 00 24 */	stmw r25, 0x24(r1)
/* 801B1690 001AE3D0  3B 80 00 00 */	li r28, 0x0
/* 801B1694 001AE3D4  7C 7D 1B 78 */	mr r29, r3
/* 801B1698 001AE3D8  6F 84 80 00 */	xoris r4, r28, 0x8000
/* 801B169C 001AE3DC  3B 25 00 00 */	addi r25, r5, 0x0
/* 801B16A0 001AE3E0  3B C6 00 00 */	addi r30, r6, 0x0
/* 801B16A4 001AE3E4  3B E7 00 00 */	addi r31, r7, 0x0
/* 801B16A8 001AE3E8  80 03 00 18 */	lwz r0, 0x18(r3)
/* 801B16AC 001AE3EC  81 03 00 1C */	lwz r8, 0x1c(r3)
/* 801B16B0 001AE3F0  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801B16B4 001AE3F4  7C 08 E0 10 */	subfc r0, r8, r28
/* 801B16B8 001AE3F8  7C 63 21 10 */	subfe r3, r3, r4
/* 801B16BC 001AE3FC  7C 64 21 10 */	subfe r3, r4, r4
/* 801B16C0 001AE400  7C 63 00 D1 */	neg. r3, r3
/* 801B16C4 001AE404  41 82 00 7C */	beq lbl_801B1740
/* 801B16C8 001AE408  48 00 65 49 */	bl __OSGetSystemTime
/* 801B16CC 001AE40C  80 FD 00 20 */	lwz r7, 0x20(r29)
/* 801B16D0 001AE410  6C 65 80 00 */	xoris r5, r3, 0x8000
/* 801B16D4 001AE414  81 1D 00 24 */	lwz r8, 0x24(r29)
/* 801B16D8 001AE418  6C E6 80 00 */	xoris r6, r7, 0x8000
/* 801B16DC 001AE41C  7C 04 40 10 */	subfc r0, r4, r8
/* 801B16E0 001AE420  7C A5 31 10 */	subfe r5, r5, r6
/* 801B16E4 001AE424  7C A6 31 10 */	subfe r5, r6, r6
/* 801B16E8 001AE428  7C A5 00 D1 */	neg. r5, r5
/* 801B16EC 001AE42C  3B C8 00 00 */	addi r30, r8, 0x0
/* 801B16F0 001AE430  3B 27 00 00 */	addi r25, r7, 0x0
/* 801B16F4 001AE434  41 82 00 4C */	beq lbl_801B1740
/* 801B16F8 001AE438  83 7D 00 18 */	lwz r27, 0x18(r29)
/* 801B16FC 001AE43C  7C 88 20 10 */	subfc r4, r8, r4
/* 801B1700 001AE440  83 5D 00 1C */	lwz r26, 0x1c(r29)
/* 801B1704 001AE444  7C 67 19 10 */	subfe r3, r7, r3
/* 801B1708 001AE448  38 BB 00 00 */	addi r5, r27, 0x0
/* 801B170C 001AE44C  38 DA 00 00 */	addi r6, r26, 0x0
/* 801B1710 001AE450  48 08 49 0D */	bl __div2i
/* 801B1714 001AE454  38 00 00 01 */	li r0, 0x1
/* 801B1718 001AE458  7C A4 00 14 */	addc r5, r4, r0
/* 801B171C 001AE45C  7C 9B 29 D6 */	mullw r4, r27, r5
/* 801B1720 001AE460  7C 1A 28 16 */	mulhwu r0, r26, r5
/* 801B1724 001AE464  7C 63 E1 14 */	adde r3, r3, r28
/* 801B1728 001AE468  7C 84 02 14 */	add r4, r4, r0
/* 801B172C 001AE46C  7C 1A 19 D6 */	mullw r0, r26, r3
/* 801B1730 001AE470  7C 7A 29 D6 */	mullw r3, r26, r5
/* 801B1734 001AE474  7C 04 02 14 */	add r0, r4, r0
/* 801B1738 001AE478  7F DE 18 14 */	addc r30, r30, r3
/* 801B173C 001AE47C  7F 39 01 14 */	adde r25, r25, r0
lbl_801B1740:
/* 801B1740 001AE480  93 FD 00 00 */	stw r31, 0x0(r29)
/* 801B1744 001AE484  6F 24 80 00 */	xoris r4, r25, 0x8000
/* 801B1748 001AE488  93 DD 00 0C */	stw r30, 0xc(r29)
/* 801B174C 001AE48C  93 3D 00 08 */	stw r25, 0x8(r29)
/* 801B1750 001AE490  80 CD AC 40 */	lwz r6, AlarmQueue@sda21(r13)
/* 801B1754 001AE494  48 00 00 C4 */	b func_801B1818
lbl_801B1758:
/* 801B1758 001AE498  80 06 00 08 */	lwz r0, 0x8(r6)
/* 801B175C 001AE49C  80 A6 00 0C */	lwz r5, 0xc(r6)
/* 801B1760 001AE4A0  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801B1764 001AE4A4  7C 05 F0 10 */	subfc r0, r5, r30
/* 801B1768 001AE4A8  7C 63 21 10 */	subfe r3, r3, r4
/* 801B176C 001AE4AC  7C 64 21 10 */	subfe r3, r4, r4
/* 801B1770 001AE4B0  7C 63 00 D1 */	neg. r3, r3
/* 801B1774 001AE4B4  41 82 00 A0 */	beq lbl_801B1814
/* 801B1778 001AE4B8  80 06 00 10 */	lwz r0, 0x10(r6)
/* 801B177C 001AE4BC  90 1D 00 10 */	stw r0, 0x10(r29)
/* 801B1780 001AE4C0  93 A6 00 10 */	stw r29, 0x10(r6)
/* 801B1784 001AE4C4  90 DD 00 14 */	stw r6, 0x14(r29)
/* 801B1788 001AE4C8  80 7D 00 10 */	lwz r3, 0x10(r29)
/* 801B178C 001AE4CC  28 03 00 00 */	cmplwi r3, 0x0
/* 801B1790 001AE4D0  41 82 00 0C */	beq lbl_801B179C
/* 801B1794 001AE4D4  93 A3 00 14 */	stw r29, 0x14(r3)
/* 801B1798 001AE4D8  48 00 01 24 */	b func_801B18BC
lbl_801B179C:
/* 801B179C 001AE4DC  93 AD AC 40 */	stw r29, AlarmQueue@sda21(r13)
/* 801B17A0 001AE4E0  48 00 64 71 */	bl __OSGetSystemTime
/* 801B17A4 001AE4E4  80 DD 00 0C */	lwz r6, 0xc(r29)
/* 801B17A8 001AE4E8  38 E0 00 00 */	li r7, 0x0
/* 801B17AC 001AE4EC  80 1D 00 08 */	lwz r0, 0x8(r29)
/* 801B17B0 001AE4F0  6C E5 80 00 */	xoris r5, r7, 0x8000
/* 801B17B4 001AE4F4  7D 04 30 10 */	subfc r8, r4, r6
/* 801B17B8 001AE4F8  7C 03 01 10 */	subfe r0, r3, r0
/* 801B17BC 001AE4FC  6C 06 80 00 */	xoris r6, r0, 0x8000
/* 801B17C0 001AE500  7C 07 40 10 */	subfc r0, r7, r8
/* 801B17C4 001AE504  7C A5 31 10 */	subfe r5, r5, r6
/* 801B17C8 001AE508  7C A6 31 10 */	subfe r5, r6, r6
/* 801B17CC 001AE50C  7C A5 00 D1 */	neg. r5, r5
/* 801B17D0 001AE510  41 82 00 10 */	beq lbl_801B17E0
/* 801B17D4 001AE514  38 60 00 00 */	li r3, 0x0
/* 801B17D8 001AE518  4B FF F2 71 */	bl PPCMtdec
/* 801B17DC 001AE51C  48 00 00 E0 */	b func_801B18BC
lbl_801B17E0:
/* 801B17E0 001AE520  3C 80 80 00 */	lis r4, 0x8000
/* 801B17E4 001AE524  6C E3 80 00 */	xoris r3, r7, 0x8000
/* 801B17E8 001AE528  7C 04 40 10 */	subfc r0, r4, r8
/* 801B17EC 001AE52C  7C 63 31 10 */	subfe r3, r3, r6
/* 801B17F0 001AE530  7C 66 31 10 */	subfe r3, r6, r6
/* 801B17F4 001AE534  7C 63 00 D1 */	neg. r3, r3
/* 801B17F8 001AE538  41 82 00 10 */	beq lbl_801B1808
/* 801B17FC 001AE53C  7D 03 43 78 */	mr r3, r8
/* 801B1800 001AE540  4B FF F2 49 */	bl PPCMtdec
/* 801B1804 001AE544  48 00 00 B8 */	b func_801B18BC
lbl_801B1808:
/* 801B1808 001AE548  38 64 FF FF */	addi r3, r4, -0x1
/* 801B180C 001AE54C  4B FF F2 3D */	bl PPCMtdec
/* 801B1810 001AE550  48 00 00 AC */	b func_801B18BC
lbl_801B1814:
/* 801B1814 001AE554  80 C6 00 14 */	lwz r6, 0x14(r6)
func_801B1818:
/* 801B1818 001AE558  28 06 00 00 */	cmplwi r6, 0x0
/* 801B181C 001AE55C  40 82 FF 3C */	bne lbl_801B1758
/* 801B1820 001AE560  3B C0 00 00 */	li r30, 0x0
/* 801B1824 001AE564  93 DD 00 14 */	stw r30, 0x14(r29)
/* 801B1828 001AE568  38 6D AC 40 */	addi r3, r13, AlarmQueue@sda21
/* 801B182C 001AE56C  80 83 00 04 */	lwz r4, 0x4(r3)
/* 801B1830 001AE570  97 A3 00 04 */	stwu r29, 0x4(r3)
/* 801B1834 001AE574  28 04 00 00 */	cmplwi r4, 0x0
/* 801B1838 001AE578  90 9D 00 10 */	stw r4, 0x10(r29)
/* 801B183C 001AE57C  41 82 00 0C */	beq lbl_801B1848
/* 801B1840 001AE580  93 A4 00 14 */	stw r29, 0x14(r4)
/* 801B1844 001AE584  48 00 00 78 */	b func_801B18BC
lbl_801B1848:
/* 801B1848 001AE588  93 A3 00 00 */	stw r29, 0x0(r3)
/* 801B184C 001AE58C  93 AD AC 40 */	stw r29, AlarmQueue@sda21(r13)
/* 801B1850 001AE590  48 00 63 C1 */	bl __OSGetSystemTime
/* 801B1854 001AE594  80 DD 00 0C */	lwz r6, 0xc(r29)
/* 801B1858 001AE598  6F C5 80 00 */	xoris r5, r30, 0x8000
/* 801B185C 001AE59C  80 1D 00 08 */	lwz r0, 0x8(r29)
/* 801B1860 001AE5A0  7C E4 30 10 */	subfc r7, r4, r6
/* 801B1864 001AE5A4  7C 03 01 10 */	subfe r0, r3, r0
/* 801B1868 001AE5A8  6C 06 80 00 */	xoris r6, r0, 0x8000
/* 801B186C 001AE5AC  7C 1E 38 10 */	subfc r0, r30, r7
/* 801B1870 001AE5B0  7C A5 31 10 */	subfe r5, r5, r6
/* 801B1874 001AE5B4  7C A6 31 10 */	subfe r5, r6, r6
/* 801B1878 001AE5B8  7C A5 00 D1 */	neg. r5, r5
/* 801B187C 001AE5BC  41 82 00 10 */	beq lbl_801B188C
/* 801B1880 001AE5C0  38 60 00 00 */	li r3, 0x0
/* 801B1884 001AE5C4  4B FF F1 C5 */	bl PPCMtdec
/* 801B1888 001AE5C8  48 00 00 34 */	b func_801B18BC
lbl_801B188C:
/* 801B188C 001AE5CC  3C 80 80 00 */	lis r4, 0x8000
/* 801B1890 001AE5D0  6F C3 80 00 */	xoris r3, r30, 0x8000
/* 801B1894 001AE5D4  7C 04 38 10 */	subfc r0, r4, r7
/* 801B1898 001AE5D8  7C 63 31 10 */	subfe r3, r3, r6
/* 801B189C 001AE5DC  7C 66 31 10 */	subfe r3, r6, r6
/* 801B18A0 001AE5E0  7C 63 00 D1 */	neg. r3, r3
/* 801B18A4 001AE5E4  41 82 00 10 */	beq lbl_801B18B4
/* 801B18A8 001AE5E8  7C E3 3B 78 */	mr r3, r7
/* 801B18AC 001AE5EC  4B FF F1 9D */	bl PPCMtdec
/* 801B18B0 001AE5F0  48 00 00 0C */	b func_801B18BC
lbl_801B18B4:
/* 801B18B4 001AE5F4  38 64 FF FF */	addi r3, r4, -0x1
/* 801B18B8 001AE5F8  4B FF F1 91 */	bl PPCMtdec
func_801B18BC:
/* 801B18BC 001AE5FC  BB 21 00 24 */	lmw r25, 0x24(r1)
/* 801B18C0 001AE600  80 01 00 44 */	lwz r0, 0x44(r1)
/* 801B18C4 001AE604  38 21 00 40 */	addi r1, r1, 0x40
/* 801B18C8 001AE608  7C 08 03 A6 */	mtlr r0
/* 801B18CC 001AE60C  4E 80 00 20 */	blr

.global OSSetAlarm
OSSetAlarm:
/* 801B18D0 001AE610  7C 08 02 A6 */	mflr r0
/* 801B18D4 001AE614  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B18D8 001AE618  94 21 FF C8 */	stwu r1, -0x38(r1)
/* 801B18DC 001AE61C  BF 61 00 24 */	stmw r27, 0x24(r1)
/* 801B18E0 001AE620  3B 63 00 00 */	addi r27, r3, 0x0
/* 801B18E4 001AE624  3B A5 00 00 */	addi r29, r5, 0x0
/* 801B18E8 001AE628  3B 86 00 00 */	addi r28, r6, 0x0
/* 801B18EC 001AE62C  3B C7 00 00 */	addi r30, r7, 0x0
/* 801B18F0 001AE630  48 00 21 55 */	bl OSDisableInterrupts
/* 801B18F4 001AE634  38 00 00 00 */	li r0, 0x0
/* 801B18F8 001AE638  90 1B 00 1C */	stw r0, 0x1c(r27)
/* 801B18FC 001AE63C  7C 7F 1B 78 */	mr r31, r3
/* 801B1900 001AE640  90 1B 00 18 */	stw r0, 0x18(r27)
/* 801B1904 001AE644  48 00 63 0D */	bl __OSGetSystemTime
/* 801B1908 001AE648  7C DC 20 14 */	addc r6, r28, r4
/* 801B190C 001AE64C  7C BD 19 14 */	adde r5, r29, r3
/* 801B1910 001AE650  38 7B 00 00 */	addi r3, r27, 0x0
/* 801B1914 001AE654  38 FE 00 00 */	addi r7, r30, 0x0
/* 801B1918 001AE658  4B FF FD 69 */	bl InsertAlarm
/* 801B191C 001AE65C  7F E3 FB 78 */	mr r3, r31
/* 801B1920 001AE660  48 00 21 4D */	bl OSRestoreInterrupts
/* 801B1924 001AE664  BB 61 00 24 */	lmw r27, 0x24(r1)
/* 801B1928 001AE668  80 01 00 3C */	lwz r0, 0x3c(r1)
/* 801B192C 001AE66C  38 21 00 38 */	addi r1, r1, 0x38
/* 801B1930 001AE670  7C 08 03 A6 */	mtlr r0
/* 801B1934 001AE674  4E 80 00 20 */	blr

.global OSCancelAlarm
OSCancelAlarm:
/* 801B1938 001AE678  7C 08 02 A6 */	mflr r0
/* 801B193C 001AE67C  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B1940 001AE680  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801B1944 001AE684  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801B1948 001AE688  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801B194C 001AE68C  7C 7E 1B 78 */	mr r30, r3
/* 801B1950 001AE690  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801B1954 001AE694  48 00 20 F1 */	bl OSDisableInterrupts
/* 801B1958 001AE698  80 1E 00 00 */	lwz r0, 0x0(r30)
/* 801B195C 001AE69C  3B E3 00 00 */	addi r31, r3, 0x0
/* 801B1960 001AE6A0  28 00 00 00 */	cmplwi r0, 0x0
/* 801B1964 001AE6A4  40 82 00 10 */	bne lbl_801B1974
/* 801B1968 001AE6A8  7F E3 FB 78 */	mr r3, r31
/* 801B196C 001AE6AC  48 00 21 01 */	bl OSRestoreInterrupts
/* 801B1970 001AE6B0  48 00 00 C8 */	b func_801B1A38
lbl_801B1974:
/* 801B1974 001AE6B4  83 BE 00 14 */	lwz r29, 0x14(r30)
/* 801B1978 001AE6B8  28 1D 00 00 */	cmplwi r29, 0x0
/* 801B197C 001AE6BC  40 82 00 14 */	bne lbl_801B1990
/* 801B1980 001AE6C0  80 1E 00 10 */	lwz r0, 0x10(r30)
/* 801B1984 001AE6C4  38 6D AC 40 */	addi r3, r13, AlarmQueue@sda21
/* 801B1988 001AE6C8  90 03 00 04 */	stw r0, 0x4(r3)
/* 801B198C 001AE6CC  48 00 00 0C */	b func_801B1998
lbl_801B1990:
/* 801B1990 001AE6D0  80 1E 00 10 */	lwz r0, 0x10(r30)
/* 801B1994 001AE6D4  90 1D 00 10 */	stw r0, 0x10(r29)
func_801B1998:
/* 801B1998 001AE6D8  80 7E 00 10 */	lwz r3, 0x10(r30)
/* 801B199C 001AE6DC  28 03 00 00 */	cmplwi r3, 0x0
/* 801B19A0 001AE6E0  41 82 00 0C */	beq lbl_801B19AC
/* 801B19A4 001AE6E4  93 A3 00 14 */	stw r29, 0x14(r3)
/* 801B19A8 001AE6E8  48 00 00 80 */	b func_801B1A28
lbl_801B19AC:
/* 801B19AC 001AE6EC  28 1D 00 00 */	cmplwi r29, 0x0
/* 801B19B0 001AE6F0  93 AD AC 40 */	stw r29, AlarmQueue@sda21(r13)
/* 801B19B4 001AE6F4  41 82 00 74 */	beq func_801B1A28
/* 801B19B8 001AE6F8  48 00 62 59 */	bl __OSGetSystemTime
/* 801B19BC 001AE6FC  80 DD 00 0C */	lwz r6, 0xc(r29)
/* 801B19C0 001AE700  38 E0 00 00 */	li r7, 0x0
/* 801B19C4 001AE704  80 1D 00 08 */	lwz r0, 0x8(r29)
/* 801B19C8 001AE708  6C E5 80 00 */	xoris r5, r7, 0x8000
/* 801B19CC 001AE70C  7D 04 30 10 */	subfc r8, r4, r6
/* 801B19D0 001AE710  7C 03 01 10 */	subfe r0, r3, r0
/* 801B19D4 001AE714  6C 06 80 00 */	xoris r6, r0, 0x8000
/* 801B19D8 001AE718  7C 07 40 10 */	subfc r0, r7, r8
/* 801B19DC 001AE71C  7C A5 31 10 */	subfe r5, r5, r6
/* 801B19E0 001AE720  7C A6 31 10 */	subfe r5, r6, r6
/* 801B19E4 001AE724  7C A5 00 D1 */	neg. r5, r5
/* 801B19E8 001AE728  41 82 00 10 */	beq lbl_801B19F8
/* 801B19EC 001AE72C  38 60 00 00 */	li r3, 0x0
/* 801B19F0 001AE730  4B FF F0 59 */	bl PPCMtdec
/* 801B19F4 001AE734  48 00 00 34 */	b func_801B1A28
lbl_801B19F8:
/* 801B19F8 001AE738  3C 80 80 00 */	lis r4, 0x8000
/* 801B19FC 001AE73C  6C E3 80 00 */	xoris r3, r7, 0x8000
/* 801B1A00 001AE740  7C 04 40 10 */	subfc r0, r4, r8
/* 801B1A04 001AE744  7C 63 31 10 */	subfe r3, r3, r6
/* 801B1A08 001AE748  7C 66 31 10 */	subfe r3, r6, r6
/* 801B1A0C 001AE74C  7C 63 00 D1 */	neg. r3, r3
/* 801B1A10 001AE750  41 82 00 10 */	beq lbl_801B1A20
/* 801B1A14 001AE754  7D 03 43 78 */	mr r3, r8
/* 801B1A18 001AE758  4B FF F0 31 */	bl PPCMtdec
/* 801B1A1C 001AE75C  48 00 00 0C */	b func_801B1A28
lbl_801B1A20:
/* 801B1A20 001AE760  38 64 FF FF */	addi r3, r4, -0x1
/* 801B1A24 001AE764  4B FF F0 25 */	bl PPCMtdec
func_801B1A28:
/* 801B1A28 001AE768  38 00 00 00 */	li r0, 0x0
/* 801B1A2C 001AE76C  90 1E 00 00 */	stw r0, 0x0(r30)
/* 801B1A30 001AE770  7F E3 FB 78 */	mr r3, r31
/* 801B1A34 001AE774  48 00 20 39 */	bl OSRestoreInterrupts
func_801B1A38:
/* 801B1A38 001AE778  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801B1A3C 001AE77C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801B1A40 001AE780  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801B1A44 001AE784  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801B1A48 001AE788  38 21 00 20 */	addi r1, r1, 0x20
/* 801B1A4C 001AE78C  7C 08 03 A6 */	mtlr r0
/* 801B1A50 001AE790  4E 80 00 20 */	blr

.global DecrementerExceptionCallback
DecrementerExceptionCallback:
/* 801B1A54 001AE794  7C 08 02 A6 */	mflr r0
/* 801B1A58 001AE798  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B1A5C 001AE79C  94 21 FD 10 */	stwu r1, -0x2f0(r1)
/* 801B1A60 001AE7A0  93 E1 02 EC */	stw r31, 0x2ec(r1)
/* 801B1A64 001AE7A4  93 C1 02 E8 */	stw r30, 0x2e8(r1)
/* 801B1A68 001AE7A8  93 A1 02 E4 */	stw r29, 0x2e4(r1)
/* 801B1A6C 001AE7AC  7C 9D 23 78 */	mr r29, r4
/* 801B1A70 001AE7B0  93 81 02 E0 */	stw r28, 0x2e0(r1)
/* 801B1A74 001AE7B4  48 00 61 9D */	bl __OSGetSystemTime
/* 801B1A78 001AE7B8  80 0D AC 40 */	lwz r0, AlarmQueue@sda21(r13)
/* 801B1A7C 001AE7BC  3B 84 00 00 */	addi r28, r4, 0x0
/* 801B1A80 001AE7C0  3B C3 00 00 */	addi r30, r3, 0x0
/* 801B1A84 001AE7C4  28 00 00 00 */	cmplwi r0, 0x0
/* 801B1A88 001AE7C8  7C 1F 03 78 */	mr r31, r0
/* 801B1A8C 001AE7CC  40 82 00 0C */	bne lbl_801B1A98
/* 801B1A90 001AE7D0  7F A3 EB 78 */	mr r3, r29
/* 801B1A94 001AE7D4  48 00 13 79 */	bl OSLoadContext
lbl_801B1A98:
/* 801B1A98 001AE7D8  80 1F 00 08 */	lwz r0, 0x8(r31)
/* 801B1A9C 001AE7DC  6F C4 80 00 */	xoris r4, r30, 0x8000
/* 801B1AA0 001AE7E0  80 BF 00 0C */	lwz r5, 0xc(r31)
/* 801B1AA4 001AE7E4  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801B1AA8 001AE7E8  7C 05 E0 10 */	subfc r0, r5, r28
/* 801B1AAC 001AE7EC  7C 63 21 10 */	subfe r3, r3, r4
/* 801B1AB0 001AE7F0  7C 64 21 10 */	subfe r3, r4, r4
/* 801B1AB4 001AE7F4  7C 63 00 D1 */	neg. r3, r3
/* 801B1AB8 001AE7F8  41 82 00 7C */	beq lbl_801B1B34
/* 801B1ABC 001AE7FC  48 00 61 55 */	bl __OSGetSystemTime
/* 801B1AC0 001AE800  80 DF 00 0C */	lwz r6, 0xc(r31)
/* 801B1AC4 001AE804  38 E0 00 00 */	li r7, 0x0
/* 801B1AC8 001AE808  80 1F 00 08 */	lwz r0, 0x8(r31)
/* 801B1ACC 001AE80C  6C E5 80 00 */	xoris r5, r7, 0x8000
/* 801B1AD0 001AE810  7D 04 30 10 */	subfc r8, r4, r6
/* 801B1AD4 001AE814  7C 03 01 10 */	subfe r0, r3, r0
/* 801B1AD8 001AE818  6C 06 80 00 */	xoris r6, r0, 0x8000
/* 801B1ADC 001AE81C  7C 07 40 10 */	subfc r0, r7, r8
/* 801B1AE0 001AE820  7C A5 31 10 */	subfe r5, r5, r6
/* 801B1AE4 001AE824  7C A6 31 10 */	subfe r5, r6, r6
/* 801B1AE8 001AE828  7C A5 00 D1 */	neg. r5, r5
/* 801B1AEC 001AE82C  41 82 00 10 */	beq lbl_801B1AFC
/* 801B1AF0 001AE830  38 60 00 00 */	li r3, 0x0
/* 801B1AF4 001AE834  4B FF EF 55 */	bl PPCMtdec
/* 801B1AF8 001AE838  48 00 00 34 */	b func_801B1B2C
lbl_801B1AFC:
/* 801B1AFC 001AE83C  3C 80 80 00 */	lis r4, 0x8000
/* 801B1B00 001AE840  6C E3 80 00 */	xoris r3, r7, 0x8000
/* 801B1B04 001AE844  7C 04 40 10 */	subfc r0, r4, r8
/* 801B1B08 001AE848  7C 63 31 10 */	subfe r3, r3, r6
/* 801B1B0C 001AE84C  7C 66 31 10 */	subfe r3, r6, r6
/* 801B1B10 001AE850  7C 63 00 D1 */	neg. r3, r3
/* 801B1B14 001AE854  41 82 00 10 */	beq lbl_801B1B24
/* 801B1B18 001AE858  7D 03 43 78 */	mr r3, r8
/* 801B1B1C 001AE85C  4B FF EF 2D */	bl PPCMtdec
/* 801B1B20 001AE860  48 00 00 0C */	b func_801B1B2C
lbl_801B1B24:
/* 801B1B24 001AE864  38 64 FF FF */	addi r3, r4, -0x1
/* 801B1B28 001AE868  4B FF EF 21 */	bl PPCMtdec
func_801B1B2C:
/* 801B1B2C 001AE86C  7F A3 EB 78 */	mr r3, r29
/* 801B1B30 001AE870  48 00 12 DD */	bl OSLoadContext
lbl_801B1B34:
/* 801B1B34 001AE874  80 7F 00 14 */	lwz r3, 0x14(r31)
/* 801B1B38 001AE878  28 03 00 00 */	cmplwi r3, 0x0
/* 801B1B3C 001AE87C  90 6D AC 40 */	stw r3, AlarmQueue@sda21(r13)
/* 801B1B40 001AE880  40 82 00 14 */	bne lbl_801B1B54
/* 801B1B44 001AE884  38 00 00 00 */	li r0, 0x0
/* 801B1B48 001AE888  38 6D AC 40 */	addi r3, r13, AlarmQueue@sda21
/* 801B1B4C 001AE88C  90 03 00 04 */	stw r0, 0x4(r3)
/* 801B1B50 001AE890  48 00 00 0C */	b func_801B1B5C
lbl_801B1B54:
/* 801B1B54 001AE894  38 00 00 00 */	li r0, 0x0
/* 801B1B58 001AE898  90 03 00 10 */	stw r0, 0x10(r3)
func_801B1B5C:
/* 801B1B5C 001AE89C  83 DF 00 00 */	lwz r30, 0x0(r31)
/* 801B1B60 001AE8A0  38 C0 00 00 */	li r6, 0x0
/* 801B1B64 001AE8A4  6C C4 80 00 */	xoris r4, r6, 0x8000
/* 801B1B68 001AE8A8  90 DF 00 00 */	stw r6, 0x0(r31)
/* 801B1B6C 001AE8AC  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 801B1B70 001AE8B0  80 BF 00 1C */	lwz r5, 0x1c(r31)
/* 801B1B74 001AE8B4  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801B1B78 001AE8B8  7C 05 30 10 */	subfc r0, r5, r6
/* 801B1B7C 001AE8BC  7C 63 21 10 */	subfe r3, r3, r4
/* 801B1B80 001AE8C0  7C 64 21 10 */	subfe r3, r4, r4
/* 801B1B84 001AE8C4  7C 63 00 D1 */	neg. r3, r3
/* 801B1B88 001AE8C8  41 82 00 18 */	beq lbl_801B1BA0
/* 801B1B8C 001AE8CC  38 7F 00 00 */	addi r3, r31, 0x0
/* 801B1B90 001AE8D0  38 FE 00 00 */	addi r7, r30, 0x0
/* 801B1B94 001AE8D4  38 C0 00 00 */	li r6, 0x0
/* 801B1B98 001AE8D8  38 A0 00 00 */	li r5, 0x0
/* 801B1B9C 001AE8DC  4B FF FA E5 */	bl InsertAlarm
lbl_801B1BA0:
/* 801B1BA0 001AE8E0  83 8D AC 40 */	lwz r28, AlarmQueue@sda21(r13)
/* 801B1BA4 001AE8E4  28 1C 00 00 */	cmplwi r28, 0x0
/* 801B1BA8 001AE8E8  41 82 00 74 */	beq func_801B1C1C
/* 801B1BAC 001AE8EC  48 00 60 65 */	bl __OSGetSystemTime
/* 801B1BB0 001AE8F0  80 DC 00 0C */	lwz r6, 0xc(r28)
/* 801B1BB4 001AE8F4  38 E0 00 00 */	li r7, 0x0
/* 801B1BB8 001AE8F8  80 1C 00 08 */	lwz r0, 0x8(r28)
/* 801B1BBC 001AE8FC  6C E5 80 00 */	xoris r5, r7, 0x8000
/* 801B1BC0 001AE900  7D 04 30 10 */	subfc r8, r4, r6
/* 801B1BC4 001AE904  7C 03 01 10 */	subfe r0, r3, r0
/* 801B1BC8 001AE908  6C 06 80 00 */	xoris r6, r0, 0x8000
/* 801B1BCC 001AE90C  7C 07 40 10 */	subfc r0, r7, r8
/* 801B1BD0 001AE910  7C A5 31 10 */	subfe r5, r5, r6
/* 801B1BD4 001AE914  7C A6 31 10 */	subfe r5, r6, r6
/* 801B1BD8 001AE918  7C A5 00 D1 */	neg. r5, r5
/* 801B1BDC 001AE91C  41 82 00 10 */	beq lbl_801B1BEC
/* 801B1BE0 001AE920  38 60 00 00 */	li r3, 0x0
/* 801B1BE4 001AE924  4B FF EE 65 */	bl PPCMtdec
/* 801B1BE8 001AE928  48 00 00 34 */	b func_801B1C1C
lbl_801B1BEC:
/* 801B1BEC 001AE92C  3C 80 80 00 */	lis r4, 0x8000
/* 801B1BF0 001AE930  6C E3 80 00 */	xoris r3, r7, 0x8000
/* 801B1BF4 001AE934  7C 04 40 10 */	subfc r0, r4, r8
/* 801B1BF8 001AE938  7C 63 31 10 */	subfe r3, r3, r6
/* 801B1BFC 001AE93C  7C 66 31 10 */	subfe r3, r6, r6
/* 801B1C00 001AE940  7C 63 00 D1 */	neg. r3, r3
/* 801B1C04 001AE944  41 82 00 10 */	beq lbl_801B1C14
/* 801B1C08 001AE948  7D 03 43 78 */	mr r3, r8
/* 801B1C0C 001AE94C  4B FF EE 3D */	bl PPCMtdec
/* 801B1C10 001AE950  48 00 00 0C */	b func_801B1C1C
lbl_801B1C14:
/* 801B1C14 001AE954  38 64 FF FF */	addi r3, r4, -0x1
/* 801B1C18 001AE958  4B FF EE 31 */	bl PPCMtdec
func_801B1C1C:
/* 801B1C1C 001AE95C  48 00 4F 7D */	bl OSDisableScheduler
/* 801B1C20 001AE960  38 61 00 18 */	addi r3, r1, 0x18
/* 801B1C24 001AE964  48 00 12 C9 */	bl OSClearContext
/* 801B1C28 001AE968  38 61 00 18 */	addi r3, r1, 0x18
/* 801B1C2C 001AE96C  48 00 10 F9 */	bl OSSetCurrentContext
/* 801B1C30 001AE970  39 9E 00 00 */	addi r12, r30, 0x0
/* 801B1C34 001AE974  7D 88 03 A6 */	mtlr r12
/* 801B1C38 001AE978  38 7F 00 00 */	addi r3, r31, 0x0
/* 801B1C3C 001AE97C  38 9D 00 00 */	addi r4, r29, 0x0
/* 801B1C40 001AE980  4E 80 00 21 */	blrl
/* 801B1C44 001AE984  38 61 00 18 */	addi r3, r1, 0x18
/* 801B1C48 001AE988  48 00 12 A5 */	bl OSClearContext
/* 801B1C4C 001AE98C  7F A3 EB 78 */	mr r3, r29
/* 801B1C50 001AE990  48 00 10 D5 */	bl OSSetCurrentContext
/* 801B1C54 001AE994  48 00 4F 85 */	bl OSEnableScheduler
/* 801B1C58 001AE998  48 00 54 4D */	bl __OSReschedule
/* 801B1C5C 001AE99C  7F A3 EB 78 */	mr r3, r29
/* 801B1C60 001AE9A0  48 00 11 AD */	bl OSLoadContext
/* 801B1C64 001AE9A4  80 01 02 F4 */	lwz r0, 0x2f4(r1)
/* 801B1C68 001AE9A8  83 E1 02 EC */	lwz r31, 0x2ec(r1)
/* 801B1C6C 001AE9AC  83 C1 02 E8 */	lwz r30, 0x2e8(r1)
/* 801B1C70 001AE9B0  83 A1 02 E4 */	lwz r29, 0x2e4(r1)
/* 801B1C74 001AE9B4  83 81 02 E0 */	lwz r28, 0x2e0(r1)
/* 801B1C78 001AE9B8  38 21 02 F0 */	addi r1, r1, 0x2f0
/* 801B1C7C 001AE9BC  7C 08 03 A6 */	mtlr r0
/* 801B1C80 001AE9C0  4E 80 00 20 */	blr

.global DecrementerExceptionHandler
DecrementerExceptionHandler:
/* 801B1C84 001AE9C4  90 04 00 00 */	stw r0, 0x0(r4)
/* 801B1C88 001AE9C8  90 24 00 04 */	stw r1, 0x4(r4)
/* 801B1C8C 001AE9CC  90 44 00 08 */	stw r2, 0x8(r4)
/* 801B1C90 001AE9D0  BC C4 00 18 */	stmw r6, 0x18(r4)
/* 801B1C94 001AE9D4  7C 11 E2 A6 */	mfspr r0, 913
/* 801B1C98 001AE9D8  90 04 01 A8 */	stw r0, 0x1a8(r4)
/* 801B1C9C 001AE9DC  7C 12 E2 A6 */	mfspr r0, 914
/* 801B1CA0 001AE9E0  90 04 01 AC */	stw r0, 0x1ac(r4)
/* 801B1CA4 001AE9E4  7C 13 E2 A6 */	mfspr r0, 915
/* 801B1CA8 001AE9E8  90 04 01 B0 */	stw r0, 0x1b0(r4)
/* 801B1CAC 001AE9EC  7C 14 E2 A6 */	mfspr r0, 916
/* 801B1CB0 001AE9F0  90 04 01 B4 */	stw r0, 0x1b4(r4)
/* 801B1CB4 001AE9F4  7C 15 E2 A6 */	mfspr r0, 917
/* 801B1CB8 001AE9F8  90 04 01 B8 */	stw r0, 0x1b8(r4)
/* 801B1CBC 001AE9FC  7C 16 E2 A6 */	mfspr r0, 918
/* 801B1CC0 001AEA00  90 04 01 BC */	stw r0, 0x1bc(r4)
/* 801B1CC4 001AEA04  7C 17 E2 A6 */	mfspr r0, 919
/* 801B1CC8 001AEA08  90 04 01 C0 */	stw r0, 0x1c0(r4)
/* 801B1CCC 001AEA0C  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B1CD0 001AEA10  4B FF FD 84 */	b DecrementerExceptionCallback

.global lbl_801B1CD4
lbl_801B1CD4:
/* 801B1CD4 001AEA14  7C 08 02 A6 */	mflr r0
/* 801B1CD8 001AEA18  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B1CDC 001AEA1C  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B1CE0 001AEA20  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B1CE4 001AEA24  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801B1CE8 001AEA28  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B1CEC 001AEA2C  41 82 00 6C */	beq lbl_801B1D58
/* 801B1CF0 001AEA30  80 0D AC 40 */	lwz r0, AlarmQueue@sda21(r13)
/* 801B1CF4 001AEA34  28 00 00 00 */	cmplwi r0, 0x0
/* 801B1CF8 001AEA38  7C 1F 03 78 */	mr r31, r0
/* 801B1CFC 001AEA3C  41 82 00 0C */	beq lbl_801B1D08
/* 801B1D00 001AEA40  80 1F 00 14 */	lwz r0, 0x14(r31)
/* 801B1D04 001AEA44  48 00 00 08 */	b func_801B1D0C
lbl_801B1D08:
/* 801B1D08 001AEA48  38 00 00 00 */	li r0, 0x0
func_801B1D0C:
/* 801B1D0C 001AEA4C  7C 1E 03 78 */	mr r30, r0
/* 801B1D10 001AEA50  48 00 00 04 */	b func_801B1D14
func_801B1D14:
/* 801B1D14 001AEA54  48 00 00 04 */	b func_801B1D18
func_801B1D18:
/* 801B1D18 001AEA58  48 00 00 38 */	b func_801B1D50
lbl_801B1D1C:
/* 801B1D1C 001AEA5C  7F E3 FB 78 */	mr r3, r31
/* 801B1D20 001AEA60  48 00 BA 15 */	bl func_801BD734
/* 801B1D24 001AEA64  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B1D28 001AEA68  40 82 00 0C */	bne lbl_801B1D34
/* 801B1D2C 001AEA6C  7F E3 FB 78 */	mr r3, r31
/* 801B1D30 001AEA70  4B FF FC 09 */	bl OSCancelAlarm
lbl_801B1D34:
/* 801B1D34 001AEA74  28 1E 00 00 */	cmplwi r30, 0x0
/* 801B1D38 001AEA78  7F DF F3 78 */	mr r31, r30
/* 801B1D3C 001AEA7C  41 82 00 0C */	beq lbl_801B1D48
/* 801B1D40 001AEA80  80 1E 00 14 */	lwz r0, 0x14(r30)
/* 801B1D44 001AEA84  48 00 00 08 */	b func_801B1D4C
lbl_801B1D48:
/* 801B1D48 001AEA88  38 00 00 00 */	li r0, 0x0
func_801B1D4C:
/* 801B1D4C 001AEA8C  7C 1E 03 78 */	mr r30, r0
func_801B1D50:
/* 801B1D50 001AEA90  28 1F 00 00 */	cmplwi r31, 0x0
/* 801B1D54 001AEA94  40 82 FF C8 */	bne lbl_801B1D1C
lbl_801B1D58:
/* 801B1D58 001AEA98  38 60 00 01 */	li r3, 0x1
/* 801B1D5C 001AEA9C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B1D60 001AEAA0  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B1D64 001AEAA4  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801B1D68 001AEAA8  38 21 00 18 */	addi r1, r1, 0x18
/* 801B1D6C 001AEAAC  7C 08 03 A6 */	mtlr r0
/* 801B1D70 001AEAB0  4E 80 00 20 */	blr

/* Dolphin/OS/OSAlarm.o END */

.global OSCheckHeap
OSCheckHeap:
/* 801B1D74 001AEAB4  7C 08 02 A6 */	mflr r0
/* 801B1D78 001AEAB8  3C 80 80 2E */	lis r4, lbl_802DFE90@ha
/* 801B1D7C 001AEABC  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B1D80 001AEAC0  38 C4 FE 90 */	addi r6, r4, lbl_802DFE90@l
/* 801B1D84 001AEAC4  38 00 00 00 */	li r0, 0x0
/* 801B1D88 001AEAC8  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B1D8C 001AEACC  38 80 00 00 */	li r4, 0x0
/* 801B1D90 001AEAD0  80 ED AC 48 */	lwz r7, HeapArray@sda21(r13)
/* 801B1D94 001AEAD4  28 07 00 00 */	cmplwi r7, 0x0
/* 801B1D98 001AEAD8  40 82 00 1C */	bne lbl_801B1DB4
/* 801B1D9C 001AEADC  38 66 00 00 */	addi r3, r6, 0x0
/* 801B1DA0 001AEAE0  4C C6 31 82 */	crclr 6
/* 801B1DA4 001AEAE4  38 80 03 7D */	li r4, 0x37d
/* 801B1DA8 001AEAE8  48 00 16 C5 */	bl OSReport
/* 801B1DAC 001AEAEC  38 60 FF FF */	li r3, -0x1
/* 801B1DB0 001AEAF0  48 00 03 14 */	b func_801B20C4
lbl_801B1DB4:
/* 801B1DB4 001AEAF4  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B1DB8 001AEAF8  41 80 00 10 */	blt lbl_801B1DC8
/* 801B1DBC 001AEAFC  80 AD AC 4C */	lwz r5, NumHeaps@sda21(r13)
/* 801B1DC0 001AEB00  7C 03 28 00 */	cmpw r3, r5
/* 801B1DC4 001AEB04  41 80 00 1C */	blt lbl_801B1DE0
lbl_801B1DC8:
/* 801B1DC8 001AEB08  38 66 00 24 */	addi r3, r6, 0x24
/* 801B1DCC 001AEB0C  4C C6 31 82 */	crclr 6
/* 801B1DD0 001AEB10  38 80 03 7E */	li r4, 0x37e
/* 801B1DD4 001AEB14  48 00 16 99 */	bl OSReport
/* 801B1DD8 001AEB18  38 60 FF FF */	li r3, -0x1
/* 801B1DDC 001AEB1C  48 00 02 E8 */	b func_801B20C4
lbl_801B1DE0:
/* 801B1DE0 001AEB20  1C 63 00 0C */	mulli r3, r3, 0xc
/* 801B1DE4 001AEB24  7C A7 1A 14 */	add r5, r7, r3
/* 801B1DE8 001AEB28  80 65 00 00 */	lwz r3, 0x0(r5)
/* 801B1DEC 001AEB2C  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B1DF0 001AEB30  40 80 00 1C */	bge lbl_801B1E0C
/* 801B1DF4 001AEB34  38 66 00 5C */	addi r3, r6, 0x5c
/* 801B1DF8 001AEB38  4C C6 31 82 */	crclr 6
/* 801B1DFC 001AEB3C  38 80 03 81 */	li r4, 0x381
/* 801B1E00 001AEB40  48 00 16 6D */	bl OSReport
/* 801B1E04 001AEB44  38 60 FF FF */	li r3, -0x1
/* 801B1E08 001AEB48  48 00 02 BC */	b func_801B20C4
lbl_801B1E0C:
/* 801B1E0C 001AEB4C  80 E5 00 08 */	lwz r7, 0x8(r5)
/* 801B1E10 001AEB50  28 07 00 00 */	cmplwi r7, 0x0
/* 801B1E14 001AEB54  41 82 00 28 */	beq lbl_801B1E3C
/* 801B1E18 001AEB58  80 67 00 00 */	lwz r3, 0x0(r7)
/* 801B1E1C 001AEB5C  28 03 00 00 */	cmplwi r3, 0x0
/* 801B1E20 001AEB60  41 82 00 1C */	beq lbl_801B1E3C
/* 801B1E24 001AEB64  38 66 00 84 */	addi r3, r6, 0x84
/* 801B1E28 001AEB68  4C C6 31 82 */	crclr 6
/* 801B1E2C 001AEB6C  38 80 03 83 */	li r4, 0x383
/* 801B1E30 001AEB70  48 00 16 3D */	bl OSReport
/* 801B1E34 001AEB74  38 60 FF FF */	li r3, -0x1
/* 801B1E38 001AEB78  48 00 02 8C */	b func_801B20C4
lbl_801B1E3C:
/* 801B1E3C 001AEB7C  81 2D AC 50 */	lwz r9, ArenaStart@sda21(r13)
/* 801B1E40 001AEB80  7C E8 3B 78 */	mr r8, r7
/* 801B1E44 001AEB84  81 4D AC 54 */	lwz r10, ArenaEnd@sda21(r13)
/* 801B1E48 001AEB88  48 00 00 F0 */	b func_801B1F38
lbl_801B1E4C:
/* 801B1E4C 001AEB8C  7C 09 40 40 */	cmplw r9, r8
/* 801B1E50 001AEB90  41 81 00 0C */	bgt lbl_801B1E5C
/* 801B1E54 001AEB94  7C 08 50 40 */	cmplw r8, r10
/* 801B1E58 001AEB98  41 80 00 1C */	blt lbl_801B1E74
lbl_801B1E5C:
/* 801B1E5C 001AEB9C  38 66 00 D4 */	addi r3, r6, 0xd4
/* 801B1E60 001AEBA0  4C C6 31 82 */	crclr 6
/* 801B1E64 001AEBA4  38 80 03 86 */	li r4, 0x386
/* 801B1E68 001AEBA8  48 00 16 05 */	bl OSReport
/* 801B1E6C 001AEBAC  38 60 FF FF */	li r3, -0x1
/* 801B1E70 001AEBB0  48 00 02 54 */	b func_801B20C4
lbl_801B1E74:
/* 801B1E74 001AEBB4  55 03 06 FF */	clrlwi. r3, r8, 27
/* 801B1E78 001AEBB8  41 82 00 1C */	beq lbl_801B1E94
/* 801B1E7C 001AEBBC  38 66 01 14 */	addi r3, r6, 0x114
/* 801B1E80 001AEBC0  4C C6 31 82 */	crclr 6
/* 801B1E84 001AEBC4  38 80 03 87 */	li r4, 0x387
/* 801B1E88 001AEBC8  48 00 15 E5 */	bl OSReport
/* 801B1E8C 001AEBCC  38 60 FF FF */	li r3, -0x1
/* 801B1E90 001AEBD0  48 00 02 34 */	b func_801B20C4
lbl_801B1E94:
/* 801B1E94 001AEBD4  80 E8 00 04 */	lwz r7, 0x4(r8)
/* 801B1E98 001AEBD8  28 07 00 00 */	cmplwi r7, 0x0
/* 801B1E9C 001AEBDC  41 82 00 28 */	beq lbl_801B1EC4
/* 801B1EA0 001AEBE0  80 67 00 00 */	lwz r3, 0x0(r7)
/* 801B1EA4 001AEBE4  7C 03 40 40 */	cmplw r3, r8
/* 801B1EA8 001AEBE8  41 82 00 1C */	beq lbl_801B1EC4
/* 801B1EAC 001AEBEC  38 66 01 4C */	addi r3, r6, 0x14c
/* 801B1EB0 001AEBF0  4C C6 31 82 */	crclr 6
/* 801B1EB4 001AEBF4  38 80 03 88 */	li r4, 0x388
/* 801B1EB8 001AEBF8  48 00 15 B5 */	bl OSReport
/* 801B1EBC 001AEBFC  38 60 FF FF */	li r3, -0x1
/* 801B1EC0 001AEC00  48 00 02 04 */	b func_801B20C4
lbl_801B1EC4:
/* 801B1EC4 001AEC04  81 08 00 08 */	lwz r8, 0x8(r8)
/* 801B1EC8 001AEC08  28 08 00 40 */	cmplwi r8, 0x40
/* 801B1ECC 001AEC0C  40 80 00 1C */	bge lbl_801B1EE8
/* 801B1ED0 001AEC10  38 66 01 98 */	addi r3, r6, 0x198
/* 801B1ED4 001AEC14  4C C6 31 82 */	crclr 6
/* 801B1ED8 001AEC18  38 80 03 89 */	li r4, 0x389
/* 801B1EDC 001AEC1C  48 00 15 91 */	bl OSReport
/* 801B1EE0 001AEC20  38 60 FF FF */	li r3, -0x1
/* 801B1EE4 001AEC24  48 00 01 E0 */	b func_801B20C4
lbl_801B1EE8:
/* 801B1EE8 001AEC28  55 03 06 FF */	clrlwi. r3, r8, 27
/* 801B1EEC 001AEC2C  41 82 00 1C */	beq lbl_801B1F08
/* 801B1EF0 001AEC30  38 66 01 CC */	addi r3, r6, 0x1cc
/* 801B1EF4 001AEC34  4C C6 31 82 */	crclr 6
/* 801B1EF8 001AEC38  38 80 03 8A */	li r4, 0x38a
/* 801B1EFC 001AEC3C  48 00 15 71 */	bl OSReport
/* 801B1F00 001AEC40  38 60 FF FF */	li r3, -0x1
/* 801B1F04 001AEC44  48 00 01 C0 */	b func_801B20C4
lbl_801B1F08:
/* 801B1F08 001AEC48  7C 00 42 15 */	add. r0, r0, r8
/* 801B1F0C 001AEC4C  40 81 00 10 */	ble lbl_801B1F1C
/* 801B1F10 001AEC50  80 65 00 00 */	lwz r3, 0x0(r5)
/* 801B1F14 001AEC54  7C 00 18 00 */	cmpw r0, r3
/* 801B1F18 001AEC58  40 81 00 1C */	ble lbl_801B1F34
lbl_801B1F1C:
/* 801B1F1C 001AEC5C  38 66 02 0C */	addi r3, r6, 0x20c
/* 801B1F20 001AEC60  4C C6 31 82 */	crclr 6
/* 801B1F24 001AEC64  38 80 03 8D */	li r4, 0x38d
/* 801B1F28 001AEC68  48 00 15 45 */	bl OSReport
/* 801B1F2C 001AEC6C  38 60 FF FF */	li r3, -0x1
/* 801B1F30 001AEC70  48 00 01 94 */	b func_801B20C4
lbl_801B1F34:
/* 801B1F34 001AEC74  7C E8 3B 78 */	mr r8, r7
func_801B1F38:
/* 801B1F38 001AEC78  28 08 00 00 */	cmplwi r8, 0x0
/* 801B1F3C 001AEC7C  40 82 FF 10 */	bne lbl_801B1E4C
/* 801B1F40 001AEC80  81 65 00 04 */	lwz r11, 0x4(r5)
/* 801B1F44 001AEC84  28 0B 00 00 */	cmplwi r11, 0x0
/* 801B1F48 001AEC88  41 82 01 4C */	beq func_801B2094
/* 801B1F4C 001AEC8C  80 6B 00 00 */	lwz r3, 0x0(r11)
/* 801B1F50 001AEC90  28 03 00 00 */	cmplwi r3, 0x0
/* 801B1F54 001AEC94  41 82 01 40 */	beq func_801B2094
/* 801B1F58 001AEC98  38 66 02 48 */	addi r3, r6, 0x248
/* 801B1F5C 001AEC9C  4C C6 31 82 */	crclr 6
/* 801B1F60 001AECA0  38 80 03 95 */	li r4, 0x395
/* 801B1F64 001AECA4  48 00 15 09 */	bl OSReport
/* 801B1F68 001AECA8  38 60 FF FF */	li r3, -0x1
/* 801B1F6C 001AECAC  48 00 01 58 */	b func_801B20C4
/* 801B1F70 001AECB0  48 00 01 24 */	b func_801B2094
lbl_801B1F74:
/* 801B1F74 001AECB4  7C 09 58 40 */	cmplw r9, r11
/* 801B1F78 001AECB8  41 81 00 0C */	bgt lbl_801B1F84
/* 801B1F7C 001AECBC  7C 0B 50 40 */	cmplw r11, r10
/* 801B1F80 001AECC0  41 80 00 1C */	blt lbl_801B1F9C
lbl_801B1F84:
/* 801B1F84 001AECC4  38 66 00 D4 */	addi r3, r6, 0xd4
/* 801B1F88 001AECC8  4C C6 31 82 */	crclr 6
/* 801B1F8C 001AECCC  38 80 03 98 */	li r4, 0x398
/* 801B1F90 001AECD0  48 00 14 DD */	bl OSReport
/* 801B1F94 001AECD4  38 60 FF FF */	li r3, -0x1
/* 801B1F98 001AECD8  48 00 01 2C */	b func_801B20C4
lbl_801B1F9C:
/* 801B1F9C 001AECDC  55 63 06 FF */	clrlwi. r3, r11, 27
/* 801B1FA0 001AECE0  41 82 00 1C */	beq lbl_801B1FBC
/* 801B1FA4 001AECE4  38 66 01 14 */	addi r3, r6, 0x114
/* 801B1FA8 001AECE8  4C C6 31 82 */	crclr 6
/* 801B1FAC 001AECEC  38 80 03 99 */	li r4, 0x399
/* 801B1FB0 001AECF0  48 00 14 BD */	bl OSReport
/* 801B1FB4 001AECF4  38 60 FF FF */	li r3, -0x1
/* 801B1FB8 001AECF8  48 00 01 0C */	b func_801B20C4
lbl_801B1FBC:
/* 801B1FBC 001AECFC  80 EB 00 04 */	lwz r7, 0x4(r11)
/* 801B1FC0 001AED00  28 07 00 00 */	cmplwi r7, 0x0
/* 801B1FC4 001AED04  41 82 00 28 */	beq lbl_801B1FEC
/* 801B1FC8 001AED08  80 67 00 00 */	lwz r3, 0x0(r7)
/* 801B1FCC 001AED0C  7C 03 58 40 */	cmplw r3, r11
/* 801B1FD0 001AED10  41 82 00 1C */	beq lbl_801B1FEC
/* 801B1FD4 001AED14  38 66 01 4C */	addi r3, r6, 0x14c
/* 801B1FD8 001AED18  4C C6 31 82 */	crclr 6
/* 801B1FDC 001AED1C  38 80 03 9A */	li r4, 0x39a
/* 801B1FE0 001AED20  48 00 14 8D */	bl OSReport
/* 801B1FE4 001AED24  38 60 FF FF */	li r3, -0x1
/* 801B1FE8 001AED28  48 00 00 DC */	b func_801B20C4
lbl_801B1FEC:
/* 801B1FEC 001AED2C  81 0B 00 08 */	lwz r8, 0x8(r11)
/* 801B1FF0 001AED30  28 08 00 40 */	cmplwi r8, 0x40
/* 801B1FF4 001AED34  40 80 00 1C */	bge lbl_801B2010
/* 801B1FF8 001AED38  38 66 01 98 */	addi r3, r6, 0x198
/* 801B1FFC 001AED3C  4C C6 31 82 */	crclr 6
/* 801B2000 001AED40  38 80 03 9B */	li r4, 0x39b
/* 801B2004 001AED44  48 00 14 69 */	bl OSReport
/* 801B2008 001AED48  38 60 FF FF */	li r3, -0x1
/* 801B200C 001AED4C  48 00 00 B8 */	b func_801B20C4
lbl_801B2010:
/* 801B2010 001AED50  55 03 06 FF */	clrlwi. r3, r8, 27
/* 801B2014 001AED54  41 82 00 1C */	beq lbl_801B2030
/* 801B2018 001AED58  38 66 01 CC */	addi r3, r6, 0x1cc
/* 801B201C 001AED5C  4C C6 31 82 */	crclr 6
/* 801B2020 001AED60  38 80 03 9C */	li r4, 0x39c
/* 801B2024 001AED64  48 00 14 49 */	bl OSReport
/* 801B2028 001AED68  38 60 FF FF */	li r3, -0x1
/* 801B202C 001AED6C  48 00 00 98 */	b func_801B20C4
lbl_801B2030:
/* 801B2030 001AED70  28 07 00 00 */	cmplwi r7, 0x0
/* 801B2034 001AED74  41 82 00 28 */	beq lbl_801B205C
/* 801B2038 001AED78  7C 6B 42 14 */	add r3, r11, r8
/* 801B203C 001AED7C  7C 03 38 40 */	cmplw r3, r7
/* 801B2040 001AED80  41 80 00 1C */	blt lbl_801B205C
/* 801B2044 001AED84  38 66 02 90 */	addi r3, r6, 0x290
/* 801B2048 001AED88  4C C6 31 82 */	crclr 6
/* 801B204C 001AED8C  38 80 03 9D */	li r4, 0x39d
/* 801B2050 001AED90  48 00 14 1D */	bl OSReport
/* 801B2054 001AED94  38 60 FF FF */	li r3, -0x1
/* 801B2058 001AED98  48 00 00 6C */	b func_801B20C4
lbl_801B205C:
/* 801B205C 001AED9C  7C 00 42 15 */	add. r0, r0, r8
/* 801B2060 001AEDA0  7C 88 22 14 */	add r4, r8, r4
/* 801B2064 001AEDA4  38 84 FF E0 */	addi r4, r4, -0x20
/* 801B2068 001AEDA8  40 81 00 10 */	ble lbl_801B2078
/* 801B206C 001AEDAC  80 65 00 00 */	lwz r3, 0x0(r5)
/* 801B2070 001AEDB0  7C 00 18 00 */	cmpw r0, r3
/* 801B2074 001AEDB4  40 81 00 1C */	ble lbl_801B2090
lbl_801B2078:
/* 801B2078 001AEDB8  38 66 02 0C */	addi r3, r6, 0x20c
/* 801B207C 001AEDBC  4C C6 31 82 */	crclr 6
/* 801B2080 001AEDC0  38 80 03 A1 */	li r4, 0x3a1
/* 801B2084 001AEDC4  48 00 13 E9 */	bl OSReport
/* 801B2088 001AEDC8  38 60 FF FF */	li r3, -0x1
/* 801B208C 001AEDCC  48 00 00 38 */	b func_801B20C4
lbl_801B2090:
/* 801B2090 001AEDD0  7C EB 3B 78 */	mr r11, r7
func_801B2094:
/* 801B2094 001AEDD4  28 0B 00 00 */	cmplwi r11, 0x0
/* 801B2098 001AEDD8  40 82 FE DC */	bne lbl_801B1F74
/* 801B209C 001AEDDC  80 65 00 00 */	lwz r3, 0x0(r5)
/* 801B20A0 001AEDE0  7C 00 18 00 */	cmpw r0, r3
/* 801B20A4 001AEDE4  41 82 00 1C */	beq lbl_801B20C0
/* 801B20A8 001AEDE8  38 66 02 F0 */	addi r3, r6, 0x2f0
/* 801B20AC 001AEDEC  4C C6 31 82 */	crclr 6
/* 801B20B0 001AEDF0  38 80 03 A8 */	li r4, 0x3a8
/* 801B20B4 001AEDF4  48 00 13 B9 */	bl OSReport
/* 801B20B8 001AEDF8  38 60 FF FF */	li r3, -0x1
/* 801B20BC 001AEDFC  48 00 00 08 */	b func_801B20C4
lbl_801B20C0:
/* 801B20C0 001AEE00  7C 83 23 78 */	mr r3, r4
func_801B20C4:
/* 801B20C4 001AEE04  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B20C8 001AEE08  38 21 00 08 */	addi r1, r1, 0x8
/* 801B20CC 001AEE0C  7C 08 03 A6 */	mtlr r0
/* 801B20D0 001AEE10  4E 80 00 20 */	blr

.global OSGetArenaHi
OSGetArenaHi:
/* 801B20D4 001AEE14  80 6D AC 58 */	lwz r3, __OSArenaHi@sda21(r13)
/* 801B20D8 001AEE18  4E 80 00 20 */	blr

.global OSGetArenaLo
OSGetArenaLo:
/* 801B20DC 001AEE1C  80 6D A1 D0 */	lwz r3, __OSArenaLo@sda21(r13)
/* 801B20E0 001AEE20  4E 80 00 20 */	blr

.global OSSetArenaHi
OSSetArenaHi:
/* 801B20E4 001AEE24  90 6D AC 58 */	stw r3, __OSArenaHi@sda21(r13)
/* 801B20E8 001AEE28  4E 80 00 20 */	blr

.global OSSetArenaLo
OSSetArenaLo:
/* 801B20EC 001AEE2C  90 6D A1 D0 */	stw r3, __OSArenaLo@sda21(r13)
/* 801B20F0 001AEE30  4E 80 00 20 */	blr

.global __OSInitAudioSystem
__OSInitAudioSystem:
/* 801B20F4 001AEE34  7C 08 02 A6 */	mflr r0
/* 801B20F8 001AEE38  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B20FC 001AEE3C  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 801B2100 001AEE40  BF 21 00 14 */	stmw r25, 0x14(r1)
/* 801B2104 001AEE44  4B FF FF D1 */	bl OSGetArenaHi
/* 801B2108 001AEE48  3C 80 81 00 */	lis r4, 0x8100
/* 801B210C 001AEE4C  38 A0 00 80 */	li r5, 0x80
/* 801B2110 001AEE50  38 63 FF 80 */	addi r3, r3, -0x80
/* 801B2114 001AEE54  4B E5 34 B9 */	bl memcpy
/* 801B2118 001AEE58  3C 60 80 2E */	lis r3, DSPInitCode@ha
/* 801B211C 001AEE5C  38 83 02 28 */	addi r4, r3, DSPInitCode@l
/* 801B2120 001AEE60  3C 60 81 00 */	lis r3, 0x8100
/* 801B2124 001AEE64  38 A0 00 80 */	li r5, 0x80
/* 801B2128 001AEE68  4B E5 34 A5 */	bl memcpy
/* 801B212C 001AEE6C  3C 60 81 00 */	lis r3, 0x8100
/* 801B2130 001AEE70  38 80 00 80 */	li r4, 0x80
/* 801B2134 001AEE74  48 00 02 95 */	bl DCFlushRange
/* 801B2138 001AEE78  3C 60 CC 00 */	lis r3, 0xCC005000@ha
/* 801B213C 001AEE7C  38 63 50 00 */	addi r3, r3, 0xCC005000@l
/* 801B2140 001AEE80  38 00 00 43 */	li r0, 0x43
/* 801B2144 001AEE84  B0 03 00 12 */	sth r0, 0x12(r3)
/* 801B2148 001AEE88  3B E3 00 0A */	addi r31, r3, 0xa
/* 801B214C 001AEE8C  38 00 08 AC */	li r0, 0x8ac
/* 801B2150 001AEE90  B0 03 00 0A */	sth r0, 0xa(r3)
/* 801B2154 001AEE94  A0 03 00 0A */	lhz r0, 0xa(r3)
/* 801B2158 001AEE98  60 00 00 01 */	ori r0, r0, 0x1
/* 801B215C 001AEE9C  B0 03 00 0A */	sth r0, 0xa(r3)
lbl_801B2160:
/* 801B2160 001AEEA0  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 801B2164 001AEEA4  54 00 07 FF */	clrlwi. r0, r0, 31
/* 801B2168 001AEEA8  40 82 FF F8 */	bne lbl_801B2160
/* 801B216C 001AEEAC  38 00 00 00 */	li r0, 0x0
/* 801B2170 001AEEB0  3C 80 CC 00 */	lis r4, 0xCC005000@ha
/* 801B2174 001AEEB4  B0 04 50 00 */	sth r0, 0xCC005000@l(r4)
lbl_801B2178:
/* 801B2178 001AEEB8  3B C4 50 00 */	addi r30, r4, 0x5000
/* 801B217C 001AEEBC  A4 7E 00 04 */	lhzu r3, 0x4(r30)
/* 801B2180 001AEEC0  3B A4 50 00 */	addi r29, r4, 0x5000
/* 801B2184 001AEEC4  A4 1D 00 06 */	lhzu r0, 0x6(r29)
/* 801B2188 001AEEC8  50 60 80 1E */	rlwimi r0, r3, 16, 0, 15
/* 801B218C 001AEECC  54 00 00 01 */	rlwinm. r0, r0, 0, 0, 0
/* 801B2190 001AEED0  40 82 FF E8 */	bne lbl_801B2178
/* 801B2194 001AEED4  3C 60 CC 00 */	lis r3, 0xCC005000@ha
/* 801B2198 001AEED8  3C 00 01 00 */	lis r0, 0x100
/* 801B219C 001AEEDC  3B 63 50 00 */	addi r27, r3, 0xCC005000@l
/* 801B21A0 001AEEE0  94 1B 00 20 */	stwu r0, 0x20(r27)
/* 801B21A4 001AEEE4  38 00 00 00 */	li r0, 0x0
/* 801B21A8 001AEEE8  3B 43 50 00 */	addi r26, r3, 0x5000
/* 801B21AC 001AEEEC  94 1A 00 24 */	stwu r0, 0x24(r26)
/* 801B21B0 001AEEF0  38 00 00 20 */	li r0, 0x20
/* 801B21B4 001AEEF4  3B 23 50 00 */	addi r25, r3, 0x5000
/* 801B21B8 001AEEF8  94 19 00 28 */	stwu r0, 0x28(r25)
/* 801B21BC 001AEEFC  A0 7F 00 00 */	lhz r3, 0x0(r31)
/* 801B21C0 001AEF00  48 00 00 08 */	b func_801B21C8
lbl_801B21C4:
/* 801B21C4 001AEF04  A0 7F 00 00 */	lhz r3, 0x0(r31)
func_801B21C8:
/* 801B21C8 001AEF08  54 60 06 B5 */	rlwinm. r0, r3, 0, 26, 26
/* 801B21CC 001AEF0C  41 82 FF F8 */	beq lbl_801B21C4
/* 801B21D0 001AEF10  B0 7F 00 00 */	sth r3, 0x0(r31)
/* 801B21D4 001AEF14  48 00 5A 35 */	bl OSGetTick
/* 801B21D8 001AEF18  7C 7C 1B 78 */	mr r28, r3
lbl_801B21DC:
/* 801B21DC 001AEF1C  48 00 5A 2D */	bl OSGetTick
/* 801B21E0 001AEF20  7C 1C 18 50 */	subf r0, r28, r3
/* 801B21E4 001AEF24  2C 00 08 92 */	cmpwi r0, 0x892
/* 801B21E8 001AEF28  41 80 FF F4 */	blt lbl_801B21DC
/* 801B21EC 001AEF2C  3C 00 01 00 */	lis r0, 0x100
/* 801B21F0 001AEF30  90 1B 00 00 */	stw r0, 0x0(r27)
/* 801B21F4 001AEF34  38 60 00 00 */	li r3, 0x0
/* 801B21F8 001AEF38  38 00 00 20 */	li r0, 0x20
/* 801B21FC 001AEF3C  90 7A 00 00 */	stw r3, 0x0(r26)
/* 801B2200 001AEF40  90 19 00 00 */	stw r0, 0x0(r25)
/* 801B2204 001AEF44  A0 7F 00 00 */	lhz r3, 0x0(r31)
/* 801B2208 001AEF48  48 00 00 08 */	b func_801B2210
lbl_801B220C:
/* 801B220C 001AEF4C  A0 7F 00 00 */	lhz r3, 0x0(r31)
func_801B2210:
/* 801B2210 001AEF50  54 60 06 B5 */	rlwinm. r0, r3, 0, 26, 26
/* 801B2214 001AEF54  41 82 FF F8 */	beq lbl_801B220C
/* 801B2218 001AEF58  B0 7F 00 00 */	sth r3, 0x0(r31)
/* 801B221C 001AEF5C  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 801B2220 001AEF60  54 00 05 66 */	rlwinm r0, r0, 0, 21, 19
/* 801B2224 001AEF64  B0 1F 00 00 */	sth r0, 0x0(r31)
lbl_801B2228:
/* 801B2228 001AEF68  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 801B222C 001AEF6C  54 00 05 6B */	rlwinm. r0, r0, 0, 21, 21
/* 801B2230 001AEF70  40 82 FF F8 */	bne lbl_801B2228
/* 801B2234 001AEF74  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 801B2238 001AEF78  54 00 07 B8 */	rlwinm r0, r0, 0, 30, 28
/* 801B223C 001AEF7C  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B2240 001AEF80  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 801B2244 001AEF84  48 00 00 08 */	b func_801B224C
lbl_801B2248:
/* 801B2248 001AEF88  A0 1E 00 00 */	lhz r0, 0x0(r30)
func_801B224C:
/* 801B224C 001AEF8C  54 05 04 3E */	clrlwi r5, r0, 16
/* 801B2250 001AEF90  54 00 04 21 */	rlwinm. r0, r0, 0, 16, 16
/* 801B2254 001AEF94  41 82 FF F4 */	beq lbl_801B2248
/* 801B2258 001AEF98  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 801B225C 001AEF9C  A0 9D 00 00 */	lhz r4, 0x0(r29)
/* 801B2260 001AEFA0  60 00 00 04 */	ori r0, r0, 0x4
/* 801B2264 001AEFA4  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B2268 001AEFA8  38 00 08 AC */	li r0, 0x8ac
/* 801B226C 001AEFAC  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B2270 001AEFB0  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 801B2274 001AEFB4  60 00 00 01 */	ori r0, r0, 0x1
/* 801B2278 001AEFB8  B0 1F 00 00 */	sth r0, 0x0(r31)
lbl_801B227C:
/* 801B227C 001AEFBC  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 801B2280 001AEFC0  54 00 07 FF */	clrlwi. r0, r0, 31
/* 801B2284 001AEFC4  40 82 FF F8 */	bne lbl_801B227C
/* 801B2288 001AEFC8  4B FF FE 4D */	bl OSGetArenaHi
/* 801B228C 001AEFCC  38 83 FF 80 */	addi r4, r3, -0x80
/* 801B2290 001AEFD0  3C 60 81 00 */	lis r3, 0x8100
/* 801B2294 001AEFD4  38 A0 00 80 */	li r5, 0x80
/* 801B2298 001AEFD8  4B E5 33 35 */	bl memcpy
/* 801B229C 001AEFDC  BB 21 00 14 */	lmw r25, 0x14(r1)
/* 801B22A0 001AEFE0  80 01 00 34 */	lwz r0, 0x34(r1)
/* 801B22A4 001AEFE4  38 21 00 30 */	addi r1, r1, 0x30
/* 801B22A8 001AEFE8  7C 08 03 A6 */	mtlr r0
/* 801B22AC 001AEFEC  4E 80 00 20 */	blr

.global __OSStopAudioSystem
__OSStopAudioSystem:
/* 801B22B0 001AEFF0  7C 08 02 A6 */	mflr r0
/* 801B22B4 001AEFF4  3C 60 CC 00 */	lis r3, 0xCC005000@ha
/* 801B22B8 001AEFF8  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B22BC 001AEFFC  38 00 08 04 */	li r0, 0x804
/* 801B22C0 001AF000  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801B22C4 001AF004  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801B22C8 001AF008  3B E3 50 00 */	addi r31, r3, 0xCC005000@l
/* 801B22CC 001AF00C  38 63 50 00 */	addi r3, r3, 0x5000
/* 801B22D0 001AF010  93 C1 00 08 */	stw r30, 0x8(r1)
/* 801B22D4 001AF014  B0 1F 00 0A */	sth r0, 0xa(r31)
/* 801B22D8 001AF018  A0 03 00 36 */	lhz r0, 0x36(r3)
/* 801B22DC 001AF01C  54 00 04 5E */	rlwinm r0, r0, 0, 17, 15
/* 801B22E0 001AF020  B0 03 00 36 */	sth r0, 0x36(r3)
/* 801B22E4 001AF024  A4 1F 00 0A */	lhzu r0, 0xa(r31)
/* 801B22E8 001AF028  48 00 00 08 */	b func_801B22F0
lbl_801B22EC:
/* 801B22EC 001AF02C  A0 1F 00 00 */	lhz r0, 0x0(r31)
func_801B22F0:
/* 801B22F0 001AF030  54 00 05 6B */	rlwinm. r0, r0, 0, 21, 21
/* 801B22F4 001AF034  40 82 FF F8 */	bne lbl_801B22EC
/* 801B22F8 001AF038  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 801B22FC 001AF03C  48 00 00 08 */	b func_801B2304
lbl_801B2300:
/* 801B2300 001AF040  A0 1F 00 00 */	lhz r0, 0x0(r31)
func_801B2304:
/* 801B2304 001AF044  54 00 05 AD */	rlwinm. r0, r0, 0, 22, 22
/* 801B2308 001AF048  40 82 FF F8 */	bne lbl_801B2300
/* 801B230C 001AF04C  38 00 08 AC */	li r0, 0x8ac
/* 801B2310 001AF050  3C 60 CC 00 */	lis r3, 0xCC005000@ha
/* 801B2314 001AF054  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B2318 001AF058  38 00 00 00 */	li r0, 0x0
/* 801B231C 001AF05C  B0 03 50 00 */	sth r0, 0xCC005000@l(r3)
/* 801B2320 001AF060  38 83 50 00 */	addi r4, r3, 0x5000
lbl_801B2324:
/* 801B2324 001AF064  A0 64 00 04 */	lhz r3, 0x4(r4)
/* 801B2328 001AF068  A0 04 00 06 */	lhz r0, 0x6(r4)
/* 801B232C 001AF06C  50 60 80 1E */	rlwimi r0, r3, 16, 0, 15
/* 801B2330 001AF070  54 00 00 01 */	rlwinm. r0, r0, 0, 0, 0
/* 801B2334 001AF074  40 82 FF F0 */	bne lbl_801B2324
/* 801B2338 001AF078  48 00 58 D1 */	bl OSGetTick
/* 801B233C 001AF07C  7C 7E 1B 78 */	mr r30, r3
lbl_801B2340:
/* 801B2340 001AF080  48 00 58 C9 */	bl OSGetTick
/* 801B2344 001AF084  7C 1E 18 50 */	subf r0, r30, r3
/* 801B2348 001AF088  2C 00 00 2C */	cmpwi r0, 0x2c
/* 801B234C 001AF08C  41 80 FF F4 */	blt lbl_801B2340
/* 801B2350 001AF090  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 801B2354 001AF094  60 00 00 01 */	ori r0, r0, 0x1
/* 801B2358 001AF098  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B235C 001AF09C  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 801B2360 001AF0A0  48 00 00 08 */	b func_801B2368
lbl_801B2364:
/* 801B2364 001AF0A4  A0 1F 00 00 */	lhz r0, 0x0(r31)
func_801B2368:
/* 801B2368 001AF0A8  54 00 07 FF */	clrlwi. r0, r0, 31
/* 801B236C 001AF0AC  40 82 FF F8 */	bne lbl_801B2364
/* 801B2370 001AF0B0  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801B2374 001AF0B4  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801B2378 001AF0B8  83 C1 00 08 */	lwz r30, 0x8(r1)
/* 801B237C 001AF0BC  38 21 00 10 */	addi r1, r1, 0x10
/* 801B2380 001AF0C0  7C 08 03 A6 */	mtlr r0
/* 801B2384 001AF0C4  4E 80 00 20 */	blr

.global DCEnable
DCEnable:
/* 801B2388 001AF0C8  7C 00 04 AC */	sync
/* 801B238C 001AF0CC  7C 70 FA A6 */	mfspr r3, 1008
/* 801B2390 001AF0D0  60 63 40 00 */	ori r3, r3, 0x4000
/* 801B2394 001AF0D4  7C 70 FB A6 */	mtspr 1008, r3
/* 801B2398 001AF0D8  4E 80 00 20 */	blr

.global DCInvalidateRange
DCInvalidateRange:
/* 801B239C 001AF0DC  28 04 00 00 */	cmplwi r4, 0x0
/* 801B23A0 001AF0E0  4C 81 00 20 */	blelr
/* 801B23A4 001AF0E4  54 65 06 FE */	clrlwi r5, r3, 27
/* 801B23A8 001AF0E8  7C 84 2A 14 */	add r4, r4, r5
/* 801B23AC 001AF0EC  38 84 00 1F */	addi r4, r4, 0x1f
/* 801B23B0 001AF0F0  54 84 D9 7E */	srwi r4, r4, 5
/* 801B23B4 001AF0F4  7C 89 03 A6 */	mtctr r4
lbl_801B23B8:
/* 801B23B8 001AF0F8  7C 00 1B AC */	dcbi r0, r3
/* 801B23BC 001AF0FC  38 63 00 20 */	addi r3, r3, 0x20
/* 801B23C0 001AF100  42 00 FF F8 */	bdnz lbl_801B23B8
/* 801B23C4 001AF104  4E 80 00 20 */	blr

.global DCFlushRange
DCFlushRange:
/* 801B23C8 001AF108  28 04 00 00 */	cmplwi r4, 0x0
/* 801B23CC 001AF10C  4C 81 00 20 */	blelr
/* 801B23D0 001AF110  54 65 06 FE */	clrlwi r5, r3, 27
/* 801B23D4 001AF114  7C 84 2A 14 */	add r4, r4, r5
/* 801B23D8 001AF118  38 84 00 1F */	addi r4, r4, 0x1f
/* 801B23DC 001AF11C  54 84 D9 7E */	srwi r4, r4, 5
/* 801B23E0 001AF120  7C 89 03 A6 */	mtctr r4
lbl_801B23E4:
/* 801B23E4 001AF124  7C 00 18 AC */	dcbf r0, r3
/* 801B23E8 001AF128  38 63 00 20 */	addi r3, r3, 0x20
/* 801B23EC 001AF12C  42 00 FF F8 */	bdnz lbl_801B23E4
/* 801B23F0 001AF130  44 00 00 02 */	sc
/* 801B23F4 001AF134  4E 80 00 20 */	blr

.global DCStoreRange
DCStoreRange:
/* 801B23F8 001AF138  28 04 00 00 */	cmplwi r4, 0x0
/* 801B23FC 001AF13C  4C 81 00 20 */	blelr
/* 801B2400 001AF140  54 65 06 FE */	clrlwi r5, r3, 27
/* 801B2404 001AF144  7C 84 2A 14 */	add r4, r4, r5
/* 801B2408 001AF148  38 84 00 1F */	addi r4, r4, 0x1f
/* 801B240C 001AF14C  54 84 D9 7E */	srwi r4, r4, 5
/* 801B2410 001AF150  7C 89 03 A6 */	mtctr r4
lbl_801B2414:
/* 801B2414 001AF154  7C 00 18 6C */	dcbst r0, r3
/* 801B2418 001AF158  38 63 00 20 */	addi r3, r3, 0x20
/* 801B241C 001AF15C  42 00 FF F8 */	bdnz lbl_801B2414
/* 801B2420 001AF160  44 00 00 02 */	sc
/* 801B2424 001AF164  4E 80 00 20 */	blr

.global DCFlushRangeNoSync
DCFlushRangeNoSync:
/* 801B2428 001AF168  28 04 00 00 */	cmplwi r4, 0x0
/* 801B242C 001AF16C  4C 81 00 20 */	blelr
/* 801B2430 001AF170  54 65 06 FE */	clrlwi r5, r3, 27
/* 801B2434 001AF174  7C 84 2A 14 */	add r4, r4, r5
/* 801B2438 001AF178  38 84 00 1F */	addi r4, r4, 0x1f
/* 801B243C 001AF17C  54 84 D9 7E */	srwi r4, r4, 5
/* 801B2440 001AF180  7C 89 03 A6 */	mtctr r4
lbl_801B2444:
/* 801B2444 001AF184  7C 00 18 AC */	dcbf r0, r3
/* 801B2448 001AF188  38 63 00 20 */	addi r3, r3, 0x20
/* 801B244C 001AF18C  42 00 FF F8 */	bdnz lbl_801B2444
/* 801B2450 001AF190  4E 80 00 20 */	blr

.global DCStoreRangeNoSync
DCStoreRangeNoSync:
/* 801B2454 001AF194  28 04 00 00 */	cmplwi r4, 0x0
/* 801B2458 001AF198  4C 81 00 20 */	blelr
/* 801B245C 001AF19C  54 65 06 FE */	clrlwi r5, r3, 27
/* 801B2460 001AF1A0  7C 84 2A 14 */	add r4, r4, r5
/* 801B2464 001AF1A4  38 84 00 1F */	addi r4, r4, 0x1f
/* 801B2468 001AF1A8  54 84 D9 7E */	srwi r4, r4, 5
/* 801B246C 001AF1AC  7C 89 03 A6 */	mtctr r4
lbl_801B2470:
/* 801B2470 001AF1B0  7C 00 18 6C */	dcbst r0, r3
/* 801B2474 001AF1B4  38 63 00 20 */	addi r3, r3, 0x20
/* 801B2478 001AF1B8  42 00 FF F8 */	bdnz lbl_801B2470
/* 801B247C 001AF1BC  4E 80 00 20 */	blr

.global DCZeroRange
DCZeroRange:
/* 801B2480 001AF1C0  28 04 00 00 */	cmplwi r4, 0x0
/* 801B2484 001AF1C4  4C 81 00 20 */	blelr
/* 801B2488 001AF1C8  54 65 06 FE */	clrlwi r5, r3, 27
/* 801B248C 001AF1CC  7C 84 2A 14 */	add r4, r4, r5
/* 801B2490 001AF1D0  38 84 00 1F */	addi r4, r4, 0x1f
/* 801B2494 001AF1D4  54 84 D9 7E */	srwi r4, r4, 5
/* 801B2498 001AF1D8  7C 89 03 A6 */	mtctr r4
lbl_801B249C:
/* 801B249C 001AF1DC  7C 00 1F EC */	dcbz r0, r3
/* 801B24A0 001AF1E0  38 63 00 20 */	addi r3, r3, 0x20
/* 801B24A4 001AF1E4  42 00 FF F8 */	bdnz lbl_801B249C
/* 801B24A8 001AF1E8  4E 80 00 20 */	blr

.global ICInvalidateRange
ICInvalidateRange:
/* 801B24AC 001AF1EC  28 04 00 00 */	cmplwi r4, 0x0
/* 801B24B0 001AF1F0  4C 81 00 20 */	blelr
/* 801B24B4 001AF1F4  54 65 06 FE */	clrlwi r5, r3, 27
/* 801B24B8 001AF1F8  7C 84 2A 14 */	add r4, r4, r5
/* 801B24BC 001AF1FC  38 84 00 1F */	addi r4, r4, 0x1f
/* 801B24C0 001AF200  54 84 D9 7E */	srwi r4, r4, 5
/* 801B24C4 001AF204  7C 89 03 A6 */	mtctr r4
lbl_801B24C8:
/* 801B24C8 001AF208  7C 00 1F AC */	icbi r0, r3
/* 801B24CC 001AF20C  38 63 00 20 */	addi r3, r3, 0x20
/* 801B24D0 001AF210  42 00 FF F8 */	bdnz lbl_801B24C8
/* 801B24D4 001AF214  7C 00 04 AC */	sync
/* 801B24D8 001AF218  4C 00 01 2C */	isync
/* 801B24DC 001AF21C  4E 80 00 20 */	blr

.global ICFlashInvalidate
ICFlashInvalidate:
/* 801B24E0 001AF220  7C 70 FA A6 */	mfspr r3, 1008
/* 801B24E4 001AF224  60 63 08 00 */	ori r3, r3, 0x800
/* 801B24E8 001AF228  7C 70 FB A6 */	mtspr 1008, r3
/* 801B24EC 001AF22C  4E 80 00 20 */	blr

.global ICEnable
ICEnable:
/* 801B24F0 001AF230  4C 00 01 2C */	isync
/* 801B24F4 001AF234  7C 70 FA A6 */	mfspr r3, 1008
/* 801B24F8 001AF238  60 63 80 00 */	ori r3, r3, 0x8000
/* 801B24FC 001AF23C  7C 70 FB A6 */	mtspr 1008, r3
/* 801B2500 001AF240  4E 80 00 20 */	blr

.global __LCEnable
__LCEnable:
/* 801B2504 001AF244  7C A0 00 A6 */	mfmsr r5
/* 801B2508 001AF248  60 A5 10 00 */	ori r5, r5, 0x1000
/* 801B250C 001AF24C  7C A0 01 24 */	mtmsr r5
/* 801B2510 001AF250  3C 60 80 00 */	lis r3, 0x80000020@ha
/* 801B2514 001AF254  38 80 04 00 */	li r4, 0x400
/* 801B2518 001AF258  7C 89 03 A6 */	mtctr r4
lbl_801B251C:
/* 801B251C 001AF25C  7C 00 1A 2C */	dcbt r0, r3
/* 801B2520 001AF260  7C 00 18 6C */	dcbst r0, r3
/* 801B2524 001AF264  38 63 00 20 */	addi r3, r3, 0x80000020@l
/* 801B2528 001AF268  42 00 FF F4 */	bdnz lbl_801B251C
/* 801B252C 001AF26C  7C 98 E2 A6 */	mfspr r4, 920
/* 801B2530 001AF270  64 84 10 0F */	oris r4, r4, 0x100f
/* 801B2534 001AF274  7C 98 E3 A6 */	mtspr 920, r4
/* 801B2538 001AF278  60 00 00 00 */	nop
/* 801B253C 001AF27C  60 00 00 00 */	nop
/* 801B2540 001AF280  60 00 00 00 */	nop
/* 801B2544 001AF284  60 00 00 00 */	nop
/* 801B2548 001AF288  60 00 00 00 */	nop
/* 801B254C 001AF28C  60 00 00 00 */	nop
/* 801B2550 001AF290  60 00 00 00 */	nop
/* 801B2554 001AF294  60 00 00 00 */	nop
/* 801B2558 001AF298  60 00 00 00 */	nop
/* 801B255C 001AF29C  60 00 00 00 */	nop
/* 801B2560 001AF2A0  60 00 00 00 */	nop
/* 801B2564 001AF2A4  60 00 00 00 */	nop
/* 801B2568 001AF2A8  3C 60 E0 00 */	lis r3, 0xE0000002@h
/* 801B256C 001AF2AC  60 63 00 02 */	ori r3, r3, 0xE0000002@l
/* 801B2570 001AF2B0  7C 7F 83 A6 */	mtspr 543, r3
/* 801B2574 001AF2B4  60 63 01 FE */	ori r3, r3, 0x1fe
/* 801B2578 001AF2B8  7C 7E 83 A6 */	mtspr 542, r3
/* 801B257C 001AF2BC  4C 00 01 2C */	isync
/* 801B2580 001AF2C0  3C 60 E0 00 */	lis r3, 0xE0000020@ha
/* 801B2584 001AF2C4  38 C0 02 00 */	li r6, 0x200
/* 801B2588 001AF2C8  7C C9 03 A6 */	mtctr r6
/* 801B258C 001AF2CC  38 C0 00 00 */	li r6, 0x0
lbl_801B2590:
/* 801B2590 001AF2D0  10 06 1F EC */	dcbz_l r6, r3
/* 801B2594 001AF2D4  38 63 00 20 */	addi r3, r3, 0xE0000020@l
/* 801B2598 001AF2D8  42 00 FF F8 */	bdnz lbl_801B2590
/* 801B259C 001AF2DC  60 00 00 00 */	nop
/* 801B25A0 001AF2E0  60 00 00 00 */	nop
/* 801B25A4 001AF2E4  60 00 00 00 */	nop
/* 801B25A8 001AF2E8  60 00 00 00 */	nop
/* 801B25AC 001AF2EC  60 00 00 00 */	nop
/* 801B25B0 001AF2F0  60 00 00 00 */	nop
/* 801B25B4 001AF2F4  60 00 00 00 */	nop
/* 801B25B8 001AF2F8  60 00 00 00 */	nop
/* 801B25BC 001AF2FC  60 00 00 00 */	nop
/* 801B25C0 001AF300  60 00 00 00 */	nop
/* 801B25C4 001AF304  60 00 00 00 */	nop
/* 801B25C8 001AF308  60 00 00 00 */	nop
/* 801B25CC 001AF30C  4E 80 00 20 */	blr

.global LCEnable
LCEnable:
/* 801B25D0 001AF310  7C 08 02 A6 */	mflr r0
/* 801B25D4 001AF314  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B25D8 001AF318  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801B25DC 001AF31C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801B25E0 001AF320  48 00 14 65 */	bl OSDisableInterrupts
/* 801B25E4 001AF324  7C 7F 1B 78 */	mr r31, r3
/* 801B25E8 001AF328  4B FF FF 1D */	bl __LCEnable
/* 801B25EC 001AF32C  7F E3 FB 78 */	mr r3, r31
/* 801B25F0 001AF330  48 00 14 7D */	bl OSRestoreInterrupts
/* 801B25F4 001AF334  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801B25F8 001AF338  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801B25FC 001AF33C  38 21 00 10 */	addi r1, r1, 0x10
/* 801B2600 001AF340  7C 08 03 A6 */	mtlr r0
/* 801B2604 001AF344  4E 80 00 20 */	blr

.global LCDisable
LCDisable:
/* 801B2608 001AF348  3C 60 E0 00 */	lis r3, 0xE0000020@ha
/* 801B260C 001AF34C  38 80 02 00 */	li r4, 0x200
/* 801B2610 001AF350  7C 89 03 A6 */	mtctr r4
lbl_801B2614:
/* 801B2614 001AF354  7C 00 1B AC */	dcbi r0, r3
/* 801B2618 001AF358  38 63 00 20 */	addi r3, r3, 0xE0000020@l
/* 801B261C 001AF35C  42 00 FF F8 */	bdnz lbl_801B2614
/* 801B2620 001AF360  7C 98 E2 A6 */	mfspr r4, 920
/* 801B2624 001AF364  54 84 01 04 */	rlwinm r4, r4, 0, 4, 2
/* 801B2628 001AF368  7C 98 E3 A6 */	mtspr 920, r4
/* 801B262C 001AF36C  4E 80 00 20 */	blr

.global LCStoreBlocks
LCStoreBlocks:
/* 801B2630 001AF370  54 A6 F6 FE */	rlwinm r6, r5, 30, 27, 31
/* 801B2634 001AF374  54 84 01 3E */	clrlwi r4, r4, 4
/* 801B2638 001AF378  7C C6 23 78 */	or r6, r6, r4
/* 801B263C 001AF37C  7C DA E3 A6 */	mtspr 922, r6
/* 801B2640 001AF380  54 A6 17 3A */	rlwinm r6, r5, 2, 28, 29
/* 801B2644 001AF384  7C C6 1B 78 */	or r6, r6, r3
/* 801B2648 001AF388  60 C6 00 12 */	ori r6, r6, 0x12
/* 801B264C 001AF38C  7C DB E3 A6 */	mtspr 923, r6
/* 801B2650 001AF390  4E 80 00 20 */	blr

.global func_801B2654
func_801B2654:
/* 801B2654 001AF394  54 A6 F6 FE */	rlwinm r6, r5, 30, 27, 31
/* 801B2658 001AF398  54 63 01 3E */	clrlwi r3, r3, 4
/* 801B265C 001AF39C  7C C6 1B 78 */	or r6, r6, r3
/* 801B2660 001AF3A0  7C DA E3 A6 */	mtspr 922, r6
/* 801B2664 001AF3A4  54 A6 17 3A */	rlwinm r6, r5, 2, 28, 29
/* 801B2668 001AF3A8  7C C6 23 78 */	or r6, r6, r4
/* 801B266C 001AF3AC  60 C6 00 02 */	ori r6, r6, 0x2
/* 801B2670 001AF3B0  7C DB E3 A6 */	mtspr 923, r6
/* 801B2674 001AF3B4  4E 80 00 20 */	blr

.global LCStoreData
LCStoreData:
/* 801B2678 001AF3B8  7C 08 02 A6 */	mflr r0
/* 801B267C 001AF3BC  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B2680 001AF3C0  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801B2684 001AF3C4  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801B2688 001AF3C8  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801B268C 001AF3CC  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801B2690 001AF3D0  93 81 00 18 */	stw r28, 0x18(r1)
/* 801B2694 001AF3D4  7C 7C 1B 78 */	mr r28, r3
/* 801B2698 001AF3D8  7C 9D 23 78 */	mr r29, r4
/* 801B269C 001AF3DC  38 05 00 1F */	addi r0, r5, 0x1f
/* 801B26A0 001AF3E0  54 03 D9 7E */	srwi r3, r0, 5
/* 801B26A4 001AF3E4  38 03 00 7F */	addi r0, r3, 0x7f
/* 801B26A8 001AF3E8  7C 7F 1B 78 */	mr r31, r3
/* 801B26AC 001AF3EC  54 1E C9 FE */	srwi r30, r0, 7
/* 801B26B0 001AF3F0  48 00 00 04 */	b func_801B26B4
func_801B26B4:
/* 801B26B4 001AF3F4  48 00 00 04 */	b func_801B26B8
func_801B26B8:
/* 801B26B8 001AF3F8  48 00 00 40 */	b func_801B26F8
lbl_801B26BC:
/* 801B26BC 001AF3FC  28 1F 00 80 */	cmplwi r31, 0x80
/* 801B26C0 001AF400  40 80 00 1C */	bge lbl_801B26DC
/* 801B26C4 001AF404  7F 83 E3 78 */	mr r3, r28
/* 801B26C8 001AF408  7F A4 EB 78 */	mr r4, r29
/* 801B26CC 001AF40C  7F E5 FB 78 */	mr r5, r31
/* 801B26D0 001AF410  4B FF FF 61 */	bl LCStoreBlocks
/* 801B26D4 001AF414  3B E0 00 00 */	li r31, 0x0
/* 801B26D8 001AF418  48 00 00 20 */	b func_801B26F8
lbl_801B26DC:
/* 801B26DC 001AF41C  7F 83 E3 78 */	mr r3, r28
/* 801B26E0 001AF420  7F A4 EB 78 */	mr r4, r29
/* 801B26E4 001AF424  38 A0 00 00 */	li r5, 0x0
/* 801B26E8 001AF428  4B FF FF 49 */	bl LCStoreBlocks
/* 801B26EC 001AF42C  3B FF FF 80 */	addi r31, r31, -0x80
/* 801B26F0 001AF430  3B 9C 10 00 */	addi r28, r28, 0x1000
/* 801B26F4 001AF434  3B BD 10 00 */	addi r29, r29, 0x1000
func_801B26F8:
/* 801B26F8 001AF438  28 1F 00 00 */	cmplwi r31, 0x0
/* 801B26FC 001AF43C  40 82 FF C0 */	bne lbl_801B26BC
/* 801B2700 001AF440  7F C3 F3 78 */	mr r3, r30
/* 801B2704 001AF444  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801B2708 001AF448  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801B270C 001AF44C  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801B2710 001AF450  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801B2714 001AF454  83 81 00 18 */	lwz r28, 0x18(r1)
/* 801B2718 001AF458  38 21 00 28 */	addi r1, r1, 0x28
/* 801B271C 001AF45C  7C 08 03 A6 */	mtlr r0
/* 801B2720 001AF460  4E 80 00 20 */	blr

.global func_801B2724
func_801B2724:
/* 801B2724 001AF464  7C 08 02 A6 */	mflr r0
/* 801B2728 001AF468  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B272C 001AF46C  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801B2730 001AF470  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801B2734 001AF474  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801B2738 001AF478  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801B273C 001AF47C  93 81 00 18 */	stw r28, 0x18(r1)
/* 801B2740 001AF480  7C 7C 1B 78 */	mr r28, r3
/* 801B2744 001AF484  7C 9D 23 78 */	mr r29, r4
/* 801B2748 001AF488  38 05 00 1F */	addi r0, r5, 0x1f
/* 801B274C 001AF48C  54 03 D9 7E */	srwi r3, r0, 5
/* 801B2750 001AF490  38 03 00 7F */	addi r0, r3, 0x7f
/* 801B2754 001AF494  7C 7F 1B 78 */	mr r31, r3
/* 801B2758 001AF498  54 1E C9 FE */	srwi r30, r0, 7
/* 801B275C 001AF49C  48 00 00 04 */	b func_801B2760
func_801B2760:
/* 801B2760 001AF4A0  48 00 00 04 */	b func_801B2764
func_801B2764:
/* 801B2764 001AF4A4  48 00 00 40 */	b func_801B27A4
lbl_801B2768:
/* 801B2768 001AF4A8  28 1F 00 80 */	cmplwi r31, 0x80
/* 801B276C 001AF4AC  40 80 00 1C */	bge lbl_801B2788
/* 801B2770 001AF4B0  7F 83 E3 78 */	mr r3, r28
/* 801B2774 001AF4B4  7F A4 EB 78 */	mr r4, r29
/* 801B2778 001AF4B8  7F E5 FB 78 */	mr r5, r31
/* 801B277C 001AF4BC  4B FF FE D9 */	bl func_801B2654
/* 801B2780 001AF4C0  3B E0 00 00 */	li r31, 0x0
/* 801B2784 001AF4C4  48 00 00 20 */	b func_801B27A4
lbl_801B2788:
/* 801B2788 001AF4C8  7F 83 E3 78 */	mr r3, r28
/* 801B278C 001AF4CC  7F A4 EB 78 */	mr r4, r29
/* 801B2790 001AF4D0  38 A0 00 00 */	li r5, 0x0
/* 801B2794 001AF4D4  4B FF FE C1 */	bl func_801B2654
/* 801B2798 001AF4D8  3B FF FF 80 */	addi r31, r31, -0x80
/* 801B279C 001AF4DC  3B 9C 10 00 */	addi r28, r28, 0x1000
/* 801B27A0 001AF4E0  3B BD 10 00 */	addi r29, r29, 0x1000
func_801B27A4:
/* 801B27A4 001AF4E4  28 1F 00 00 */	cmplwi r31, 0x0
/* 801B27A8 001AF4E8  40 82 FF C0 */	bne lbl_801B2768
/* 801B27AC 001AF4EC  7F C3 F3 78 */	mr r3, r30
/* 801B27B0 001AF4F0  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801B27B4 001AF4F4  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801B27B8 001AF4F8  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801B27BC 001AF4FC  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801B27C0 001AF500  83 81 00 18 */	lwz r28, 0x18(r1)
/* 801B27C4 001AF504  38 21 00 28 */	addi r1, r1, 0x28
/* 801B27C8 001AF508  7C 08 03 A6 */	mtlr r0
/* 801B27CC 001AF50C  4E 80 00 20 */	blr

.global LCQueueWait
LCQueueWait:
/* 801B27D0 001AF510  7C 98 E2 A6 */	mfspr r4, 920
/* 801B27D4 001AF514  54 84 47 3E */	rlwinm r4, r4, 8, 28, 31
/* 801B27D8 001AF518  7C 04 18 00 */	cmpw r4, r3
/* 801B27DC 001AF51C  41 81 FF F4 */	bgt LCQueueWait
/* 801B27E0 001AF520  4E 80 00 20 */	blr

.global L2GlobalInvalidate
L2GlobalInvalidate:
/* 801B27E4 001AF524  7C 08 02 A6 */	mflr r0
/* 801B27E8 001AF528  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B27EC 001AF52C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801B27F0 001AF530  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801B27F4 001AF534  7C 00 04 AC */	sync
/* 801B27F8 001AF538  4B FF E2 41 */	bl PPCMfl2cr
/* 801B27FC 001AF53C  54 63 00 7E */	clrlwi r3, r3, 1
/* 801B2800 001AF540  4B FF E2 41 */	bl PPCMtl2cr
/* 801B2804 001AF544  7C 00 04 AC */	sync
/* 801B2808 001AF548  4B FF E2 31 */	bl PPCMfl2cr
/* 801B280C 001AF54C  64 63 00 20 */	oris r3, r3, 0x20
/* 801B2810 001AF550  4B FF E2 31 */	bl PPCMtl2cr
/* 801B2814 001AF554  48 00 00 04 */	b func_801B2818
func_801B2818:
/* 801B2818 001AF558  48 00 00 04 */	b func_801B281C
func_801B281C:
/* 801B281C 001AF55C  4B FF E2 1D */	bl PPCMfl2cr
/* 801B2820 001AF560  54 60 07 FE */	clrlwi r0, r3, 31
/* 801B2824 001AF564  28 00 00 00 */	cmplwi r0, 0x0
/* 801B2828 001AF568  40 82 FF F4 */	bne func_801B281C
/* 801B282C 001AF56C  4B FF E2 0D */	bl PPCMfl2cr
/* 801B2830 001AF570  54 63 02 D2 */	rlwinm r3, r3, 0, 11, 9
/* 801B2834 001AF574  4B FF E2 0D */	bl PPCMtl2cr
/* 801B2838 001AF578  48 00 00 04 */	b func_801B283C
func_801B283C:
/* 801B283C 001AF57C  3C 60 80 2E */	lis r3, lbl_802E02A8@ha
/* 801B2840 001AF580  3B E3 02 A8 */	addi r31, r3, lbl_802E02A8@l
/* 801B2844 001AF584  48 00 00 04 */	b func_801B2848
func_801B2848:
/* 801B2848 001AF588  48 00 00 10 */	b func_801B2858
lbl_801B284C:
/* 801B284C 001AF58C  7F E3 FB 78 */	mr r3, r31
/* 801B2850 001AF590  4C C6 31 82 */	crclr 6
/* 801B2854 001AF594  48 02 0B 91 */	bl DBPrintf
func_801B2858:
/* 801B2858 001AF598  4B FF E1 E1 */	bl PPCMfl2cr
/* 801B285C 001AF59C  54 60 07 FE */	clrlwi r0, r3, 31
/* 801B2860 001AF5A0  28 00 00 00 */	cmplwi r0, 0x0
/* 801B2864 001AF5A4  40 82 FF E8 */	bne lbl_801B284C
/* 801B2868 001AF5A8  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801B286C 001AF5AC  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801B2870 001AF5B0  38 21 00 10 */	addi r1, r1, 0x10
/* 801B2874 001AF5B4  7C 08 03 A6 */	mtlr r0
/* 801B2878 001AF5B8  4E 80 00 20 */	blr

.global DMAErrorHandler
DMAErrorHandler:
/* 801B287C 001AF5BC  7C 08 02 A6 */	mflr r0
/* 801B2880 001AF5C0  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B2884 001AF5C4  94 21 FF 80 */	stwu r1, -0x80(r1)
/* 801B2888 001AF5C8  93 E1 00 7C */	stw r31, 0x7c(r1)
/* 801B288C 001AF5CC  93 C1 00 78 */	stw r30, 0x78(r1)
/* 801B2890 001AF5D0  93 A1 00 74 */	stw r29, 0x74(r1)
/* 801B2894 001AF5D4  40 86 00 24 */	bne cr1, lbl_801B28B8
/* 801B2898 001AF5D8  D8 21 00 28 */	stfd f1, 0x28(r1)
/* 801B289C 001AF5DC  D8 41 00 30 */	stfd f2, 0x30(r1)
/* 801B28A0 001AF5E0  D8 61 00 38 */	stfd f3, 0x38(r1)
/* 801B28A4 001AF5E4  D8 81 00 40 */	stfd f4, 0x40(r1)
/* 801B28A8 001AF5E8  D8 A1 00 48 */	stfd f5, 0x48(r1)
/* 801B28AC 001AF5EC  D8 C1 00 50 */	stfd f6, 0x50(r1)
/* 801B28B0 001AF5F0  D8 E1 00 58 */	stfd f7, 0x58(r1)
/* 801B28B4 001AF5F4  D9 01 00 60 */	stfd f8, 0x60(r1)
lbl_801B28B8:
/* 801B28B8 001AF5F8  90 61 00 08 */	stw r3, 0x8(r1)
/* 801B28BC 001AF5FC  90 81 00 0C */	stw r4, 0xc(r1)
/* 801B28C0 001AF600  90 A1 00 10 */	stw r5, 0x10(r1)
/* 801B28C4 001AF604  90 C1 00 14 */	stw r6, 0x14(r1)
/* 801B28C8 001AF608  90 E1 00 18 */	stw r7, 0x18(r1)
/* 801B28CC 001AF60C  91 01 00 1C */	stw r8, 0x1c(r1)
/* 801B28D0 001AF610  91 21 00 20 */	stw r9, 0x20(r1)
/* 801B28D4 001AF614  91 41 00 24 */	stw r10, 0x24(r1)
/* 801B28D8 001AF618  7C 9D 23 78 */	mr r29, r4
/* 801B28DC 001AF61C  3C 60 80 2E */	lis r3, lbl_802E02A8@ha
/* 801B28E0 001AF620  3B E3 02 A8 */	addi r31, r3, lbl_802E02A8@l
/* 801B28E4 001AF624  4B FF E2 01 */	bl PPCMfhid2
/* 801B28E8 001AF628  7C 7E 1B 78 */	mr r30, r3
/* 801B28EC 001AF62C  4C C6 31 82 */	crclr 6
/* 801B28F0 001AF630  38 7F 00 2C */	addi r3, r31, 0x2c
/* 801B28F4 001AF634  48 00 0B 79 */	bl OSReport
/* 801B28F8 001AF638  80 BD 01 9C */	lwz r5, 0x19c(r29)
/* 801B28FC 001AF63C  7F C4 F3 78 */	mr r4, r30
/* 801B2900 001AF640  38 7F 00 44 */	addi r3, r31, 0x44
/* 801B2904 001AF644  4C C6 31 82 */	crclr 6
/* 801B2908 001AF648  48 00 0B 65 */	bl OSReport
/* 801B290C 001AF64C  57 C0 02 16 */	rlwinm r0, r30, 0, 8, 11
/* 801B2910 001AF650  28 00 00 00 */	cmplwi r0, 0x0
/* 801B2914 001AF654  41 82 00 14 */	beq lbl_801B2928
/* 801B2918 001AF658  80 1D 01 9C */	lwz r0, 0x19c(r29)
/* 801B291C 001AF65C  54 00 02 94 */	rlwinm r0, r0, 0, 10, 10
/* 801B2920 001AF660  28 00 00 00 */	cmplwi r0, 0x0
/* 801B2924 001AF664  40 82 00 1C */	bne lbl_801B2940
lbl_801B2928:
/* 801B2928 001AF668  38 7F 00 60 */	addi r3, r31, 0x60
/* 801B292C 001AF66C  4C C6 31 82 */	crclr 6
/* 801B2930 001AF670  48 00 0B 3D */	bl OSReport
/* 801B2934 001AF674  7F A3 EB 78 */	mr r3, r29
/* 801B2938 001AF678  48 00 06 95 */	bl OSDumpContext
/* 801B293C 001AF67C  4B FF E1 1D */	bl PPCHalt
lbl_801B2940:
/* 801B2940 001AF680  38 7F 00 90 */	addi r3, r31, 0x90
/* 801B2944 001AF684  4C C6 31 82 */	crclr 6
/* 801B2948 001AF688  48 00 0B 25 */	bl OSReport
/* 801B294C 001AF68C  38 7F 00 CC */	addi r3, r31, 0xcc
/* 801B2950 001AF690  4C C6 31 82 */	crclr 6
/* 801B2954 001AF694  48 00 0B 19 */	bl OSReport
/* 801B2958 001AF698  57 C0 02 10 */	rlwinm r0, r30, 0, 8, 8
/* 801B295C 001AF69C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B2960 001AF6A0  41 82 00 10 */	beq lbl_801B2970
/* 801B2964 001AF6A4  38 7F 01 04 */	addi r3, r31, 0x104
/* 801B2968 001AF6A8  4C C6 31 82 */	crclr 6
/* 801B296C 001AF6AC  48 00 0B 01 */	bl OSReport
lbl_801B2970:
/* 801B2970 001AF6B0  57 C0 02 52 */	rlwinm r0, r30, 0, 9, 9
/* 801B2974 001AF6B4  28 00 00 00 */	cmplwi r0, 0x0
/* 801B2978 001AF6B8  41 82 00 10 */	beq lbl_801B2988
/* 801B297C 001AF6BC  38 7F 01 44 */	addi r3, r31, 0x144
/* 801B2980 001AF6C0  4C C6 31 82 */	crclr 6
/* 801B2984 001AF6C4  48 00 0A E9 */	bl OSReport
lbl_801B2988:
/* 801B2988 001AF6C8  57 C0 02 94 */	rlwinm r0, r30, 0, 10, 10
/* 801B298C 001AF6CC  28 00 00 00 */	cmplwi r0, 0x0
/* 801B2990 001AF6D0  41 82 00 10 */	beq lbl_801B29A0
/* 801B2994 001AF6D4  38 7F 01 70 */	addi r3, r31, 0x170
/* 801B2998 001AF6D8  4C C6 31 82 */	crclr 6
/* 801B299C 001AF6DC  48 00 0A D1 */	bl OSReport
lbl_801B29A0:
/* 801B29A0 001AF6E0  57 C0 02 D6 */	rlwinm r0, r30, 0, 11, 11
/* 801B29A4 001AF6E4  28 00 00 00 */	cmplwi r0, 0x0
/* 801B29A8 001AF6E8  41 82 00 10 */	beq lbl_801B29B8
/* 801B29AC 001AF6EC  38 7F 01 90 */	addi r3, r31, 0x190
/* 801B29B0 001AF6F0  4C C6 31 82 */	crclr 6
/* 801B29B4 001AF6F4  48 00 0A B9 */	bl OSReport
lbl_801B29B8:
/* 801B29B8 001AF6F8  7F C3 F3 78 */	mr r3, r30
/* 801B29BC 001AF6FC  4B FF E1 31 */	bl PPCMthid2
/* 801B29C0 001AF700  80 01 00 84 */	lwz r0, 0x84(r1)
/* 801B29C4 001AF704  83 E1 00 7C */	lwz r31, 0x7c(r1)
/* 801B29C8 001AF708  83 C1 00 78 */	lwz r30, 0x78(r1)
/* 801B29CC 001AF70C  83 A1 00 74 */	lwz r29, 0x74(r1)
/* 801B29D0 001AF710  38 21 00 80 */	addi r1, r1, 0x80
/* 801B29D4 001AF714  7C 08 03 A6 */	mtlr r0
/* 801B29D8 001AF718  4E 80 00 20 */	blr

.global __OSCacheInit
__OSCacheInit:
/* 801B29DC 001AF71C  7C 08 02 A6 */	mflr r0
/* 801B29E0 001AF720  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B29E4 001AF724  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801B29E8 001AF728  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801B29EC 001AF72C  93 C1 00 08 */	stw r30, 0x8(r1)
/* 801B29F0 001AF730  3C 60 80 2E */	lis r3, lbl_802E02A8@ha
/* 801B29F4 001AF734  3B E3 02 A8 */	addi r31, r3, lbl_802E02A8@l
/* 801B29F8 001AF738  4B FF E0 31 */	bl PPCMfhid0
/* 801B29FC 001AF73C  54 60 04 20 */	rlwinm r0, r3, 0, 16, 16
/* 801B2A00 001AF740  28 00 00 00 */	cmplwi r0, 0x0
/* 801B2A04 001AF744  40 82 00 14 */	bne lbl_801B2A18
/* 801B2A08 001AF748  4B FF FA E9 */	bl ICEnable
/* 801B2A0C 001AF74C  38 7F 01 AC */	addi r3, r31, 0x1ac
/* 801B2A10 001AF750  4C C6 31 82 */	crclr 6
/* 801B2A14 001AF754  48 02 09 D1 */	bl DBPrintf
lbl_801B2A18:
/* 801B2A18 001AF758  4B FF E0 11 */	bl PPCMfhid0
/* 801B2A1C 001AF75C  54 60 04 62 */	rlwinm r0, r3, 0, 17, 17
/* 801B2A20 001AF760  28 00 00 00 */	cmplwi r0, 0x0
/* 801B2A24 001AF764  40 82 00 14 */	bne lbl_801B2A38
/* 801B2A28 001AF768  4B FF F9 61 */	bl DCEnable
/* 801B2A2C 001AF76C  38 7F 01 C8 */	addi r3, r31, 0x1c8
/* 801B2A30 001AF770  4C C6 31 82 */	crclr 6
/* 801B2A34 001AF774  48 02 09 B1 */	bl DBPrintf
lbl_801B2A38:
/* 801B2A38 001AF778  4B FF E0 01 */	bl PPCMfl2cr
/* 801B2A3C 001AF77C  54 60 00 00 */	rlwinm r0, r3, 0, 0, 0
/* 801B2A40 001AF780  28 00 00 00 */	cmplwi r0, 0x0
/* 801B2A44 001AF784  40 82 00 58 */	bne lbl_801B2A9C
/* 801B2A48 001AF788  4B FF DF D1 */	bl PPCMfmsr
/* 801B2A4C 001AF78C  7C 7E 1B 78 */	mr r30, r3
/* 801B2A50 001AF790  7C 00 04 AC */	sync
/* 801B2A54 001AF794  38 60 00 30 */	li r3, 0x30
/* 801B2A58 001AF798  4B FF DF C9 */	bl PPCMtmsr
/* 801B2A5C 001AF79C  7C 00 04 AC */	sync
/* 801B2A60 001AF7A0  7C 00 04 AC */	sync
/* 801B2A64 001AF7A4  4B FF DF D5 */	bl PPCMfl2cr
/* 801B2A68 001AF7A8  54 63 00 7E */	clrlwi r3, r3, 1
/* 801B2A6C 001AF7AC  4B FF DF D5 */	bl PPCMtl2cr
/* 801B2A70 001AF7B0  7C 00 04 AC */	sync
/* 801B2A74 001AF7B4  4B FF FD 71 */	bl L2GlobalInvalidate
/* 801B2A78 001AF7B8  7F C3 F3 78 */	mr r3, r30
/* 801B2A7C 001AF7BC  4B FF DF A5 */	bl PPCMtmsr
/* 801B2A80 001AF7C0  4B FF DF B9 */	bl PPCMfl2cr
/* 801B2A84 001AF7C4  64 60 80 00 */	oris r0, r3, 0x8000
/* 801B2A88 001AF7C8  54 03 02 D2 */	rlwinm r3, r0, 0, 11, 9
/* 801B2A8C 001AF7CC  4B FF DF B5 */	bl PPCMtl2cr
/* 801B2A90 001AF7D0  38 7F 01 E4 */	addi r3, r31, 0x1e4
/* 801B2A94 001AF7D4  4C C6 31 82 */	crclr 6
/* 801B2A98 001AF7D8  48 02 09 4D */	bl DBPrintf
lbl_801B2A9C:
/* 801B2A9C 001AF7DC  3C 60 80 1B */	lis r3, DMAErrorHandler@ha
/* 801B2AA0 001AF7E0  38 83 28 7C */	addi r4, r3, DMAErrorHandler@l
/* 801B2AA4 001AF7E4  38 60 00 01 */	li r3, 0x1
/* 801B2AA8 001AF7E8  48 00 0A 45 */	bl OSSetErrorHandler
/* 801B2AAC 001AF7EC  38 7F 01 FC */	addi r3, r31, 0x1fc
/* 801B2AB0 001AF7F0  4C C6 31 82 */	crclr 6
/* 801B2AB4 001AF7F4  48 02 09 31 */	bl DBPrintf
/* 801B2AB8 001AF7F8  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801B2ABC 001AF7FC  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801B2AC0 001AF800  83 C1 00 08 */	lwz r30, 0x8(r1)
/* 801B2AC4 001AF804  38 21 00 10 */	addi r1, r1, 0x10
/* 801B2AC8 001AF808  7C 08 03 A6 */	mtlr r0
/* 801B2ACC 001AF80C  4E 80 00 20 */	blr

.global _OSLoadFPUContext
_OSLoadFPUContext:
/* 801B2AD0 001AF810  A0 A4 01 A2 */	lhz r5, 0x1a2(r4)
/* 801B2AD4 001AF814  54 A5 07 FF */	clrlwi. r5, r5, 31
/* 801B2AD8 001AF818  41 82 01 18 */	beq lbl_801B2BF0
/* 801B2ADC 001AF81C  C8 04 01 90 */	lfd f0, 0x190(r4)
/* 801B2AE0 001AF820  FD FE 05 8E */	mtfsf 255, f0
/* 801B2AE4 001AF824  7C B8 E2 A6 */	mfspr r5, 920
/* 801B2AE8 001AF828  54 A5 1F FF */	rlwinm. r5, r5, 3, 31, 31
/* 801B2AEC 001AF82C  41 82 00 84 */	beq lbl_801B2B70
/* 801B2AF0 001AF830  E0 04 01 C8 */	psq_l f0, 0x1c8(r4), 0, qr0
/* 801B2AF4 001AF834  E0 24 01 D0 */	psq_l f1, 0x1d0(r4), 0, qr0
/* 801B2AF8 001AF838  E0 44 01 D8 */	psq_l f2, 0x1d8(r4), 0, qr0
/* 801B2AFC 001AF83C  E0 64 01 E0 */	psq_l f3, 0x1e0(r4), 0, qr0
/* 801B2B00 001AF840  E0 84 01 E8 */	psq_l f4, 0x1e8(r4), 0, qr0
/* 801B2B04 001AF844  E0 A4 01 F0 */	psq_l f5, 0x1f0(r4), 0, qr0
/* 801B2B08 001AF848  E0 C4 01 F8 */	psq_l f6, 0x1f8(r4), 0, qr0
/* 801B2B0C 001AF84C  E0 E4 02 00 */	psq_l f7, 0x200(r4), 0, qr0
/* 801B2B10 001AF850  E1 04 02 08 */	psq_l f8, 0x208(r4), 0, qr0
/* 801B2B14 001AF854  E1 24 02 10 */	psq_l f9, 0x210(r4), 0, qr0
/* 801B2B18 001AF858  E1 44 02 18 */	psq_l f10, 0x218(r4), 0, qr0
/* 801B2B1C 001AF85C  E1 64 02 20 */	psq_l f11, 0x220(r4), 0, qr0
/* 801B2B20 001AF860  E1 84 02 28 */	psq_l f12, 0x228(r4), 0, qr0
/* 801B2B24 001AF864  E1 A4 02 30 */	psq_l f13, 0x230(r4), 0, qr0
/* 801B2B28 001AF868  E1 C4 02 38 */	psq_l f14, 0x238(r4), 0, qr0
/* 801B2B2C 001AF86C  E1 E4 02 40 */	psq_l f15, 0x240(r4), 0, qr0
/* 801B2B30 001AF870  E2 04 02 48 */	psq_l f16, 0x248(r4), 0, qr0
/* 801B2B34 001AF874  E2 24 02 50 */	psq_l f17, 0x250(r4), 0, qr0
/* 801B2B38 001AF878  E2 44 02 58 */	psq_l f18, 0x258(r4), 0, qr0
/* 801B2B3C 001AF87C  E2 64 02 60 */	psq_l f19, 0x260(r4), 0, qr0
/* 801B2B40 001AF880  E2 84 02 68 */	psq_l f20, 0x268(r4), 0, qr0
/* 801B2B44 001AF884  E2 A4 02 70 */	psq_l f21, 0x270(r4), 0, qr0
/* 801B2B48 001AF888  E2 C4 02 78 */	psq_l f22, 0x278(r4), 0, qr0
/* 801B2B4C 001AF88C  E2 E4 02 80 */	psq_l f23, 0x280(r4), 0, qr0
/* 801B2B50 001AF890  E3 04 02 88 */	psq_l f24, 0x288(r4), 0, qr0
/* 801B2B54 001AF894  E3 24 02 90 */	psq_l f25, 0x290(r4), 0, qr0
/* 801B2B58 001AF898  E3 44 02 98 */	psq_l f26, 0x298(r4), 0, qr0
/* 801B2B5C 001AF89C  E3 64 02 A0 */	psq_l f27, 0x2a0(r4), 0, qr0
/* 801B2B60 001AF8A0  E3 84 02 A8 */	psq_l f28, 0x2a8(r4), 0, qr0
/* 801B2B64 001AF8A4  E3 A4 02 B0 */	psq_l f29, 0x2b0(r4), 0, qr0
/* 801B2B68 001AF8A8  E3 C4 02 B8 */	psq_l f30, 0x2b8(r4), 0, qr0
/* 801B2B6C 001AF8AC  E3 E4 02 C0 */	psq_l f31, 0x2c0(r4), 0, qr0
lbl_801B2B70:
/* 801B2B70 001AF8B0  C8 04 00 90 */	lfd f0, 0x90(r4)
/* 801B2B74 001AF8B4  C8 24 00 98 */	lfd f1, 0x98(r4)
/* 801B2B78 001AF8B8  C8 44 00 A0 */	lfd f2, 0xa0(r4)
/* 801B2B7C 001AF8BC  C8 64 00 A8 */	lfd f3, 0xa8(r4)
/* 801B2B80 001AF8C0  C8 84 00 B0 */	lfd f4, 0xb0(r4)
/* 801B2B84 001AF8C4  C8 A4 00 B8 */	lfd f5, 0xb8(r4)
/* 801B2B88 001AF8C8  C8 C4 00 C0 */	lfd f6, 0xc0(r4)
/* 801B2B8C 001AF8CC  C8 E4 00 C8 */	lfd f7, 0xc8(r4)
/* 801B2B90 001AF8D0  C9 04 00 D0 */	lfd f8, 0xd0(r4)
/* 801B2B94 001AF8D4  C9 24 00 D8 */	lfd f9, 0xd8(r4)
/* 801B2B98 001AF8D8  C9 44 00 E0 */	lfd f10, 0xe0(r4)
/* 801B2B9C 001AF8DC  C9 64 00 E8 */	lfd f11, 0xe8(r4)
/* 801B2BA0 001AF8E0  C9 84 00 F0 */	lfd f12, 0xf0(r4)
/* 801B2BA4 001AF8E4  C9 A4 00 F8 */	lfd f13, 0xf8(r4)
/* 801B2BA8 001AF8E8  C9 C4 01 00 */	lfd f14, 0x100(r4)
/* 801B2BAC 001AF8EC  C9 E4 01 08 */	lfd f15, 0x108(r4)
/* 801B2BB0 001AF8F0  CA 04 01 10 */	lfd f16, 0x110(r4)
/* 801B2BB4 001AF8F4  CA 24 01 18 */	lfd f17, 0x118(r4)
/* 801B2BB8 001AF8F8  CA 44 01 20 */	lfd f18, 0x120(r4)
/* 801B2BBC 001AF8FC  CA 64 01 28 */	lfd f19, 0x128(r4)
/* 801B2BC0 001AF900  CA 84 01 30 */	lfd f20, 0x130(r4)
/* 801B2BC4 001AF904  CA A4 01 38 */	lfd f21, 0x138(r4)
/* 801B2BC8 001AF908  CA C4 01 40 */	lfd f22, 0x140(r4)
/* 801B2BCC 001AF90C  CA E4 01 48 */	lfd f23, 0x148(r4)
/* 801B2BD0 001AF910  CB 04 01 50 */	lfd f24, 0x150(r4)
/* 801B2BD4 001AF914  CB 24 01 58 */	lfd f25, 0x158(r4)
/* 801B2BD8 001AF918  CB 44 01 60 */	lfd f26, 0x160(r4)
/* 801B2BDC 001AF91C  CB 64 01 68 */	lfd f27, 0x168(r4)
/* 801B2BE0 001AF920  CB 84 01 70 */	lfd f28, 0x170(r4)
/* 801B2BE4 001AF924  CB A4 01 78 */	lfd f29, 0x178(r4)
/* 801B2BE8 001AF928  CB C4 01 80 */	lfd f30, 0x180(r4)
/* 801B2BEC 001AF92C  CB E4 01 88 */	lfd f31, 0x188(r4)
lbl_801B2BF0:
/* 801B2BF0 001AF930  4E 80 00 20 */	blr

.global _OSSaveFPUContext
_OSSaveFPUContext:
/* 801B2BF4 001AF934  A0 65 01 A2 */	lhz r3, 0x1a2(r5)
/* 801B2BF8 001AF938  60 63 00 01 */	ori r3, r3, 0x1
/* 801B2BFC 001AF93C  B0 65 01 A2 */	sth r3, 0x1a2(r5)
/* 801B2C00 001AF940  D8 05 00 90 */	stfd f0, 0x90(r5)
/* 801B2C04 001AF944  D8 25 00 98 */	stfd f1, 0x98(r5)
/* 801B2C08 001AF948  D8 45 00 A0 */	stfd f2, 0xa0(r5)
/* 801B2C0C 001AF94C  D8 65 00 A8 */	stfd f3, 0xa8(r5)
/* 801B2C10 001AF950  D8 85 00 B0 */	stfd f4, 0xb0(r5)
/* 801B2C14 001AF954  D8 A5 00 B8 */	stfd f5, 0xb8(r5)
/* 801B2C18 001AF958  D8 C5 00 C0 */	stfd f6, 0xc0(r5)
/* 801B2C1C 001AF95C  D8 E5 00 C8 */	stfd f7, 0xc8(r5)
/* 801B2C20 001AF960  D9 05 00 D0 */	stfd f8, 0xd0(r5)
/* 801B2C24 001AF964  D9 25 00 D8 */	stfd f9, 0xd8(r5)
/* 801B2C28 001AF968  D9 45 00 E0 */	stfd f10, 0xe0(r5)
/* 801B2C2C 001AF96C  D9 65 00 E8 */	stfd f11, 0xe8(r5)
/* 801B2C30 001AF970  D9 85 00 F0 */	stfd f12, 0xf0(r5)
/* 801B2C34 001AF974  D9 A5 00 F8 */	stfd f13, 0xf8(r5)
/* 801B2C38 001AF978  D9 C5 01 00 */	stfd f14, 0x100(r5)
/* 801B2C3C 001AF97C  D9 E5 01 08 */	stfd f15, 0x108(r5)
/* 801B2C40 001AF980  DA 05 01 10 */	stfd f16, 0x110(r5)
/* 801B2C44 001AF984  DA 25 01 18 */	stfd f17, 0x118(r5)
/* 801B2C48 001AF988  DA 45 01 20 */	stfd f18, 0x120(r5)
/* 801B2C4C 001AF98C  DA 65 01 28 */	stfd f19, 0x128(r5)
/* 801B2C50 001AF990  DA 85 01 30 */	stfd f20, 0x130(r5)
/* 801B2C54 001AF994  DA A5 01 38 */	stfd f21, 0x138(r5)
/* 801B2C58 001AF998  DA C5 01 40 */	stfd f22, 0x140(r5)
/* 801B2C5C 001AF99C  DA E5 01 48 */	stfd f23, 0x148(r5)
/* 801B2C60 001AF9A0  DB 05 01 50 */	stfd f24, 0x150(r5)
/* 801B2C64 001AF9A4  DB 25 01 58 */	stfd f25, 0x158(r5)
/* 801B2C68 001AF9A8  DB 45 01 60 */	stfd f26, 0x160(r5)
/* 801B2C6C 001AF9AC  DB 65 01 68 */	stfd f27, 0x168(r5)
/* 801B2C70 001AF9B0  DB 85 01 70 */	stfd f28, 0x170(r5)
/* 801B2C74 001AF9B4  DB A5 01 78 */	stfd f29, 0x178(r5)
/* 801B2C78 001AF9B8  DB C5 01 80 */	stfd f30, 0x180(r5)
/* 801B2C7C 001AF9BC  DB E5 01 88 */	stfd f31, 0x188(r5)
/* 801B2C80 001AF9C0  FC 00 04 8E */	mffs f0
/* 801B2C84 001AF9C4  D8 05 01 90 */	stfd f0, 0x190(r5)
/* 801B2C88 001AF9C8  C8 05 00 90 */	lfd f0, 0x90(r5)
/* 801B2C8C 001AF9CC  7C 78 E2 A6 */	mfspr r3, 920
/* 801B2C90 001AF9D0  54 63 1F FF */	rlwinm. r3, r3, 3, 31, 31
/* 801B2C94 001AF9D4  41 82 00 84 */	beq lbl_801B2D18
/* 801B2C98 001AF9D8  F0 05 01 C8 */	psq_st f0, 0x1c8(r5), 0, qr0
/* 801B2C9C 001AF9DC  F0 25 01 D0 */	psq_st f1, 0x1d0(r5), 0, qr0
/* 801B2CA0 001AF9E0  F0 45 01 D8 */	psq_st f2, 0x1d8(r5), 0, qr0
/* 801B2CA4 001AF9E4  F0 65 01 E0 */	psq_st f3, 0x1e0(r5), 0, qr0
/* 801B2CA8 001AF9E8  F0 85 01 E8 */	psq_st f4, 0x1e8(r5), 0, qr0
/* 801B2CAC 001AF9EC  F0 A5 01 F0 */	psq_st f5, 0x1f0(r5), 0, qr0
/* 801B2CB0 001AF9F0  F0 C5 01 F8 */	psq_st f6, 0x1f8(r5), 0, qr0
/* 801B2CB4 001AF9F4  F0 E5 02 00 */	psq_st f7, 0x200(r5), 0, qr0
/* 801B2CB8 001AF9F8  F1 05 02 08 */	psq_st f8, 0x208(r5), 0, qr0
/* 801B2CBC 001AF9FC  F1 25 02 10 */	psq_st f9, 0x210(r5), 0, qr0
/* 801B2CC0 001AFA00  F1 45 02 18 */	psq_st f10, 0x218(r5), 0, qr0
/* 801B2CC4 001AFA04  F1 65 02 20 */	psq_st f11, 0x220(r5), 0, qr0
/* 801B2CC8 001AFA08  F1 85 02 28 */	psq_st f12, 0x228(r5), 0, qr0
/* 801B2CCC 001AFA0C  F1 A5 02 30 */	psq_st f13, 0x230(r5), 0, qr0
/* 801B2CD0 001AFA10  F1 C5 02 38 */	psq_st f14, 0x238(r5), 0, qr0
/* 801B2CD4 001AFA14  F1 E5 02 40 */	psq_st f15, 0x240(r5), 0, qr0
/* 801B2CD8 001AFA18  F2 05 02 48 */	psq_st f16, 0x248(r5), 0, qr0
/* 801B2CDC 001AFA1C  F2 25 02 50 */	psq_st f17, 0x250(r5), 0, qr0
/* 801B2CE0 001AFA20  F2 45 02 58 */	psq_st f18, 0x258(r5), 0, qr0
/* 801B2CE4 001AFA24  F2 65 02 60 */	psq_st f19, 0x260(r5), 0, qr0
/* 801B2CE8 001AFA28  F2 85 02 68 */	psq_st f20, 0x268(r5), 0, qr0
/* 801B2CEC 001AFA2C  F2 A5 02 70 */	psq_st f21, 0x270(r5), 0, qr0
/* 801B2CF0 001AFA30  F2 C5 02 78 */	psq_st f22, 0x278(r5), 0, qr0
/* 801B2CF4 001AFA34  F2 E5 02 80 */	psq_st f23, 0x280(r5), 0, qr0
/* 801B2CF8 001AFA38  F3 05 02 88 */	psq_st f24, 0x288(r5), 0, qr0
/* 801B2CFC 001AFA3C  F3 25 02 90 */	psq_st f25, 0x290(r5), 0, qr0
/* 801B2D00 001AFA40  F3 45 02 98 */	psq_st f26, 0x298(r5), 0, qr0
/* 801B2D04 001AFA44  F3 65 02 A0 */	psq_st f27, 0x2a0(r5), 0, qr0
/* 801B2D08 001AFA48  F3 85 02 A8 */	psq_st f28, 0x2a8(r5), 0, qr0
/* 801B2D0C 001AFA4C  F3 A5 02 B0 */	psq_st f29, 0x2b0(r5), 0, qr0
/* 801B2D10 001AFA50  F3 C5 02 B8 */	psq_st f30, 0x2b8(r5), 0, qr0
/* 801B2D14 001AFA54  F3 E5 02 C0 */	psq_st f31, 0x2c0(r5), 0, qr0
lbl_801B2D18:
/* 801B2D18 001AFA58  4E 80 00 20 */	blr

.global func_801B2D1C
func_801B2D1C:
/* 801B2D1C 001AFA5C  38 A3 00 00 */	addi r5, r3, 0x0
/* 801B2D20 001AFA60  4B FF FE D4 */	b _OSSaveFPUContext

.global OSSetCurrentContext
OSSetCurrentContext:
/* 801B2D24 001AFA64  3C 80 80 00 */	lis r4, 0x800000D4@ha
/* 801B2D28 001AFA68  90 64 00 D4 */	stw r3, 0x800000D4@l(r4)
/* 801B2D2C 001AFA6C  54 65 00 BE */	clrlwi r5, r3, 2
/* 801B2D30 001AFA70  90 A4 00 C0 */	stw r5, 0xc0(r4)
/* 801B2D34 001AFA74  80 A4 00 D8 */	lwz r5, 0xd8(r4)
/* 801B2D38 001AFA78  7C 05 18 00 */	cmpw r5, r3
/* 801B2D3C 001AFA7C  40 82 00 20 */	bne lbl_801B2D5C
/* 801B2D40 001AFA80  80 C3 01 9C */	lwz r6, 0x19c(r3)
/* 801B2D44 001AFA84  60 C6 20 00 */	ori r6, r6, 0x2000
/* 801B2D48 001AFA88  90 C3 01 9C */	stw r6, 0x19c(r3)
/* 801B2D4C 001AFA8C  7C C0 00 A6 */	mfmsr r6
/* 801B2D50 001AFA90  60 C6 00 02 */	ori r6, r6, 0x2
/* 801B2D54 001AFA94  7C C0 01 24 */	mtmsr r6
/* 801B2D58 001AFA98  4E 80 00 20 */	blr
lbl_801B2D5C:
/* 801B2D5C 001AFA9C  80 C3 01 9C */	lwz r6, 0x19c(r3)
/* 801B2D60 001AFAA0  54 C6 04 E2 */	rlwinm r6, r6, 0, 19, 17
/* 801B2D64 001AFAA4  90 C3 01 9C */	stw r6, 0x19c(r3)
/* 801B2D68 001AFAA8  7C C0 00 A6 */	mfmsr r6
/* 801B2D6C 001AFAAC  54 C6 04 E2 */	rlwinm r6, r6, 0, 19, 17
/* 801B2D70 001AFAB0  60 C6 00 02 */	ori r6, r6, 0x2
/* 801B2D74 001AFAB4  7C C0 01 24 */	mtmsr r6
/* 801B2D78 001AFAB8  4C 00 01 2C */	isync
/* 801B2D7C 001AFABC  4E 80 00 20 */	blr

.global OSGetCurrentContext
OSGetCurrentContext:
/* 801B2D80 001AFAC0  3C 60 80 00 */	lis r3, 0x800000D4@ha
/* 801B2D84 001AFAC4  80 63 00 D4 */	lwz r3, 0x800000D4@l(r3)
/* 801B2D88 001AFAC8  4E 80 00 20 */	blr

.global OSSaveContext
OSSaveContext:
/* 801B2D8C 001AFACC  BD A3 00 34 */	stmw r13, 0x34(r3)
/* 801B2D90 001AFAD0  7C 11 E2 A6 */	mfspr r0, 913
/* 801B2D94 001AFAD4  90 03 01 A8 */	stw r0, 0x1a8(r3)
/* 801B2D98 001AFAD8  7C 12 E2 A6 */	mfspr r0, 914
/* 801B2D9C 001AFADC  90 03 01 AC */	stw r0, 0x1ac(r3)
/* 801B2DA0 001AFAE0  7C 13 E2 A6 */	mfspr r0, 915
/* 801B2DA4 001AFAE4  90 03 01 B0 */	stw r0, 0x1b0(r3)
/* 801B2DA8 001AFAE8  7C 14 E2 A6 */	mfspr r0, 916
/* 801B2DAC 001AFAEC  90 03 01 B4 */	stw r0, 0x1b4(r3)
/* 801B2DB0 001AFAF0  7C 15 E2 A6 */	mfspr r0, 917
/* 801B2DB4 001AFAF4  90 03 01 B8 */	stw r0, 0x1b8(r3)
/* 801B2DB8 001AFAF8  7C 16 E2 A6 */	mfspr r0, 918
/* 801B2DBC 001AFAFC  90 03 01 BC */	stw r0, 0x1bc(r3)
/* 801B2DC0 001AFB00  7C 17 E2 A6 */	mfspr r0, 919
/* 801B2DC4 001AFB04  90 03 01 C0 */	stw r0, 0x1c0(r3)
/* 801B2DC8 001AFB08  7C 00 00 26 */	mfcr r0
/* 801B2DCC 001AFB0C  90 03 00 80 */	stw r0, 0x80(r3)
/* 801B2DD0 001AFB10  7C 08 02 A6 */	mflr r0
/* 801B2DD4 001AFB14  90 03 00 84 */	stw r0, 0x84(r3)
/* 801B2DD8 001AFB18  90 03 01 98 */	stw r0, 0x198(r3)
/* 801B2DDC 001AFB1C  7C 00 00 A6 */	mfmsr r0
/* 801B2DE0 001AFB20  90 03 01 9C */	stw r0, 0x19c(r3)
/* 801B2DE4 001AFB24  7C 09 02 A6 */	mfctr r0
/* 801B2DE8 001AFB28  90 03 00 88 */	stw r0, 0x88(r3)
/* 801B2DEC 001AFB2C  7C 01 02 A6 */	mfxer r0
/* 801B2DF0 001AFB30  90 03 00 8C */	stw r0, 0x8c(r3)
/* 801B2DF4 001AFB34  90 23 00 04 */	stw r1, 0x4(r3)
/* 801B2DF8 001AFB38  90 43 00 08 */	stw r2, 0x8(r3)
/* 801B2DFC 001AFB3C  38 00 00 01 */	li r0, 0x1
/* 801B2E00 001AFB40  90 03 00 0C */	stw r0, 0xc(r3)
/* 801B2E04 001AFB44  38 60 00 00 */	li r3, 0x0
/* 801B2E08 001AFB48  4E 80 00 20 */	blr

.global OSLoadContext
OSLoadContext:
/* 801B2E0C 001AFB4C  3C 80 80 1B */	lis r4, OSDisableInterrupts@ha
/* 801B2E10 001AFB50  80 C3 01 98 */	lwz r6, 0x198(r3)
/* 801B2E14 001AFB54  38 A4 3A 44 */	addi r5, r4, OSDisableInterrupts@l
/* 801B2E18 001AFB58  7C 06 28 40 */	cmplw r6, r5
/* 801B2E1C 001AFB5C  40 81 00 18 */	ble lbl_801B2E34
/* 801B2E20 001AFB60  3C 80 80 1B */	lis r4, lbl_801B3A50@ha
/* 801B2E24 001AFB64  38 04 3A 50 */	addi r0, r4, lbl_801B3A50@l
/* 801B2E28 001AFB68  7C 06 00 40 */	cmplw r6, r0
/* 801B2E2C 001AFB6C  40 80 00 08 */	bge lbl_801B2E34
/* 801B2E30 001AFB70  90 A3 01 98 */	stw r5, 0x198(r3)
lbl_801B2E34:
/* 801B2E34 001AFB74  80 03 00 00 */	lwz r0, 0x0(r3)
/* 801B2E38 001AFB78  80 23 00 04 */	lwz r1, 0x4(r3)
/* 801B2E3C 001AFB7C  80 43 00 08 */	lwz r2, 0x8(r3)
/* 801B2E40 001AFB80  A0 83 01 A2 */	lhz r4, 0x1a2(r3)
/* 801B2E44 001AFB84  54 85 07 BD */	rlwinm. r5, r4, 0, 30, 30
/* 801B2E48 001AFB88  41 82 00 14 */	beq lbl_801B2E5C
/* 801B2E4C 001AFB8C  54 84 07 FA */	rlwinm r4, r4, 0, 31, 29
/* 801B2E50 001AFB90  B0 83 01 A2 */	sth r4, 0x1a2(r3)
/* 801B2E54 001AFB94  B8 A3 00 14 */	lmw r5, 0x14(r3)
/* 801B2E58 001AFB98  48 00 00 08 */	b func_801B2E60
lbl_801B2E5C:
/* 801B2E5C 001AFB9C  B9 A3 00 34 */	lmw r13, 0x34(r3)
func_801B2E60:
/* 801B2E60 001AFBA0  80 83 01 A8 */	lwz r4, 0x1a8(r3)
/* 801B2E64 001AFBA4  7C 91 E3 A6 */	mtspr 913, r4
/* 801B2E68 001AFBA8  80 83 01 AC */	lwz r4, 0x1ac(r3)
/* 801B2E6C 001AFBAC  7C 92 E3 A6 */	mtspr 914, r4
/* 801B2E70 001AFBB0  80 83 01 B0 */	lwz r4, 0x1b0(r3)
/* 801B2E74 001AFBB4  7C 93 E3 A6 */	mtspr 915, r4
/* 801B2E78 001AFBB8  80 83 01 B4 */	lwz r4, 0x1b4(r3)
/* 801B2E7C 001AFBBC  7C 94 E3 A6 */	mtspr 916, r4
/* 801B2E80 001AFBC0  80 83 01 B8 */	lwz r4, 0x1b8(r3)
/* 801B2E84 001AFBC4  7C 95 E3 A6 */	mtspr 917, r4
/* 801B2E88 001AFBC8  80 83 01 BC */	lwz r4, 0x1bc(r3)
/* 801B2E8C 001AFBCC  7C 96 E3 A6 */	mtspr 918, r4
/* 801B2E90 001AFBD0  80 83 01 C0 */	lwz r4, 0x1c0(r3)
/* 801B2E94 001AFBD4  7C 97 E3 A6 */	mtspr 919, r4
/* 801B2E98 001AFBD8  80 83 00 80 */	lwz r4, 0x80(r3)
/* 801B2E9C 001AFBDC  7C 8F F1 20 */	mtcrf 255, r4
/* 801B2EA0 001AFBE0  80 83 00 84 */	lwz r4, 0x84(r3)
/* 801B2EA4 001AFBE4  7C 88 03 A6 */	mtlr r4
/* 801B2EA8 001AFBE8  80 83 00 88 */	lwz r4, 0x88(r3)
/* 801B2EAC 001AFBEC  7C 89 03 A6 */	mtctr r4
/* 801B2EB0 001AFBF0  80 83 00 8C */	lwz r4, 0x8c(r3)
/* 801B2EB4 001AFBF4  7C 81 03 A6 */	mtxer r4
/* 801B2EB8 001AFBF8  7C 80 00 A6 */	mfmsr r4
/* 801B2EBC 001AFBFC  54 84 04 5E */	rlwinm r4, r4, 0, 17, 15
/* 801B2EC0 001AFC00  54 84 07 FA */	rlwinm r4, r4, 0, 31, 29
/* 801B2EC4 001AFC04  7C 80 01 24 */	mtmsr r4
/* 801B2EC8 001AFC08  80 83 01 98 */	lwz r4, 0x198(r3)
/* 801B2ECC 001AFC0C  7C 9A 03 A6 */	mtspr 26, r4
/* 801B2ED0 001AFC10  80 83 01 9C */	lwz r4, 0x19c(r3)
/* 801B2ED4 001AFC14  7C 9B 03 A6 */	mtspr 27, r4
/* 801B2ED8 001AFC18  80 83 00 10 */	lwz r4, 0x10(r3)
/* 801B2EDC 001AFC1C  80 63 00 0C */	lwz r3, 0xc(r3)
/* 801B2EE0 001AFC20  4C 00 00 64 */	rfi

.global OSGetStackPointer
OSGetStackPointer:
/* 801B2EE4 001AFC24  7C 23 0B 78 */	mr r3, r1
/* 801B2EE8 001AFC28  4E 80 00 20 */	blr

.global OSClearContext
OSClearContext:
/* 801B2EEC 001AFC2C  38 A0 00 00 */	li r5, 0x0
/* 801B2EF0 001AFC30  B0 A3 01 A0 */	sth r5, 0x1a0(r3)
/* 801B2EF4 001AFC34  3C 80 80 00 */	lis r4, 0x800000D8@ha
/* 801B2EF8 001AFC38  B0 A3 01 A2 */	sth r5, 0x1a2(r3)
/* 801B2EFC 001AFC3C  80 04 00 D8 */	lwz r0, 0x800000D8@l(r4)
/* 801B2F00 001AFC40  7C 03 00 40 */	cmplw r3, r0
/* 801B2F04 001AFC44  40 82 00 08 */	bne lbl_801B2F0C
/* 801B2F08 001AFC48  90 A4 00 D8 */	stw r5, 0xd8(r4)
lbl_801B2F0C:
/* 801B2F0C 001AFC4C  4E 80 00 20 */	blr

.global OSInitContext
OSInitContext:
/* 801B2F10 001AFC50  90 83 01 98 */	stw r4, 0x198(r3)
/* 801B2F14 001AFC54  90 A3 00 04 */	stw r5, 0x4(r3)
/* 801B2F18 001AFC58  39 60 00 00 */	li r11, 0x0
/* 801B2F1C 001AFC5C  61 6B 90 32 */	ori r11, r11, 0x9032
/* 801B2F20 001AFC60  91 63 01 9C */	stw r11, 0x19c(r3)
/* 801B2F24 001AFC64  38 00 00 00 */	li r0, 0x0
/* 801B2F28 001AFC68  90 03 00 80 */	stw r0, 0x80(r3)
/* 801B2F2C 001AFC6C  90 03 00 8C */	stw r0, 0x8c(r3)
/* 801B2F30 001AFC70  90 43 00 08 */	stw r2, 0x8(r3)
/* 801B2F34 001AFC74  91 A3 00 34 */	stw r13, 0x34(r3)
/* 801B2F38 001AFC78  90 03 00 0C */	stw r0, 0xc(r3)
/* 801B2F3C 001AFC7C  90 03 00 10 */	stw r0, 0x10(r3)
/* 801B2F40 001AFC80  90 03 00 14 */	stw r0, 0x14(r3)
/* 801B2F44 001AFC84  90 03 00 18 */	stw r0, 0x18(r3)
/* 801B2F48 001AFC88  90 03 00 1C */	stw r0, 0x1c(r3)
/* 801B2F4C 001AFC8C  90 03 00 20 */	stw r0, 0x20(r3)
/* 801B2F50 001AFC90  90 03 00 24 */	stw r0, 0x24(r3)
/* 801B2F54 001AFC94  90 03 00 28 */	stw r0, 0x28(r3)
/* 801B2F58 001AFC98  90 03 00 2C */	stw r0, 0x2c(r3)
/* 801B2F5C 001AFC9C  90 03 00 30 */	stw r0, 0x30(r3)
/* 801B2F60 001AFCA0  90 03 00 38 */	stw r0, 0x38(r3)
/* 801B2F64 001AFCA4  90 03 00 3C */	stw r0, 0x3c(r3)
/* 801B2F68 001AFCA8  90 03 00 40 */	stw r0, 0x40(r3)
/* 801B2F6C 001AFCAC  90 03 00 44 */	stw r0, 0x44(r3)
/* 801B2F70 001AFCB0  90 03 00 48 */	stw r0, 0x48(r3)
/* 801B2F74 001AFCB4  90 03 00 4C */	stw r0, 0x4c(r3)
/* 801B2F78 001AFCB8  90 03 00 50 */	stw r0, 0x50(r3)
/* 801B2F7C 001AFCBC  90 03 00 54 */	stw r0, 0x54(r3)
/* 801B2F80 001AFCC0  90 03 00 58 */	stw r0, 0x58(r3)
/* 801B2F84 001AFCC4  90 03 00 5C */	stw r0, 0x5c(r3)
/* 801B2F88 001AFCC8  90 03 00 60 */	stw r0, 0x60(r3)
/* 801B2F8C 001AFCCC  90 03 00 64 */	stw r0, 0x64(r3)
/* 801B2F90 001AFCD0  90 03 00 68 */	stw r0, 0x68(r3)
/* 801B2F94 001AFCD4  90 03 00 6C */	stw r0, 0x6c(r3)
/* 801B2F98 001AFCD8  90 03 00 70 */	stw r0, 0x70(r3)
/* 801B2F9C 001AFCDC  90 03 00 74 */	stw r0, 0x74(r3)
/* 801B2FA0 001AFCE0  90 03 00 78 */	stw r0, 0x78(r3)
/* 801B2FA4 001AFCE4  90 03 00 7C */	stw r0, 0x7c(r3)
/* 801B2FA8 001AFCE8  90 03 01 A4 */	stw r0, 0x1a4(r3)
/* 801B2FAC 001AFCEC  90 03 01 A8 */	stw r0, 0x1a8(r3)
/* 801B2FB0 001AFCF0  90 03 01 AC */	stw r0, 0x1ac(r3)
/* 801B2FB4 001AFCF4  90 03 01 B0 */	stw r0, 0x1b0(r3)
/* 801B2FB8 001AFCF8  90 03 01 B4 */	stw r0, 0x1b4(r3)
/* 801B2FBC 001AFCFC  90 03 01 B8 */	stw r0, 0x1b8(r3)
/* 801B2FC0 001AFD00  90 03 01 BC */	stw r0, 0x1bc(r3)
/* 801B2FC4 001AFD04  90 03 01 C0 */	stw r0, 0x1c0(r3)
/* 801B2FC8 001AFD08  4B FF FF 24 */	b OSClearContext

.global OSDumpContext
OSDumpContext:
/* 801B2FCC 001AFD0C  7C 08 02 A6 */	mflr r0
/* 801B2FD0 001AFD10  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B2FD4 001AFD14  94 21 FD 08 */	stwu r1, -0x2f8(r1)
/* 801B2FD8 001AFD18  BF 21 02 DC */	stmw r25, 0x2dc(r1)
/* 801B2FDC 001AFD1C  7C 7C 1B 78 */	mr r28, r3
/* 801B2FE0 001AFD20  3C 60 80 2E */	lis r3, lbl_802E04D8@ha
/* 801B2FE4 001AFD24  4C C6 31 82 */	crclr 6
/* 801B2FE8 001AFD28  3B E3 04 D8 */	addi r31, r3, lbl_802E04D8@l
/* 801B2FEC 001AFD2C  7F E3 FB 78 */	mr r3, r31
/* 801B2FF0 001AFD30  7F 84 E3 78 */	mr r4, r28
/* 801B2FF4 001AFD34  48 00 04 79 */	bl OSReport
/* 801B2FF8 001AFD38  3B 20 00 00 */	li r25, 0x0
/* 801B2FFC 001AFD3C  57 20 10 3A */	slwi r0, r25, 2
/* 801B3000 001AFD40  7F 7C 02 14 */	add r27, r28, r0
/* 801B3004 001AFD44  48 00 00 04 */	b func_801B3008
func_801B3008:
/* 801B3008 001AFD48  48 00 00 04 */	b func_801B300C
func_801B300C:
/* 801B300C 001AFD4C  48 00 00 04 */	b func_801B3010
func_801B3010:
/* 801B3010 001AFD50  81 1B 00 40 */	lwz r8, 0x40(r27)
/* 801B3014 001AFD54  7F 24 CB 78 */	mr r4, r25
/* 801B3018 001AFD58  80 BB 00 00 */	lwz r5, 0x0(r27)
/* 801B301C 001AFD5C  38 7F 00 44 */	addi r3, r31, 0x44
/* 801B3020 001AFD60  4C C6 31 82 */	crclr 6
/* 801B3024 001AFD64  7C A6 2B 78 */	mr r6, r5
/* 801B3028 001AFD68  7D 09 43 78 */	mr r9, r8
/* 801B302C 001AFD6C  38 F9 00 10 */	addi r7, r25, 0x10
/* 801B3030 001AFD70  48 00 04 3D */	bl OSReport
/* 801B3034 001AFD74  3B 7B 00 04 */	addi r27, r27, 0x4
/* 801B3038 001AFD78  3B 39 00 01 */	addi r25, r25, 0x1
/* 801B303C 001AFD7C  28 19 00 10 */	cmplwi r25, 0x10
/* 801B3040 001AFD80  41 80 FF D0 */	blt func_801B3010
/* 801B3044 001AFD84  80 9C 00 84 */	lwz r4, 0x84(r28)
/* 801B3048 001AFD88  38 7F 00 74 */	addi r3, r31, 0x74
/* 801B304C 001AFD8C  80 BC 00 80 */	lwz r5, 0x80(r28)
/* 801B3050 001AFD90  4C C6 31 82 */	crclr 6
/* 801B3054 001AFD94  48 00 04 19 */	bl OSReport
/* 801B3058 001AFD98  80 9C 01 98 */	lwz r4, 0x198(r28)
/* 801B305C 001AFD9C  38 7F 00 A4 */	addi r3, r31, 0xa4
/* 801B3060 001AFDA0  80 BC 01 9C */	lwz r5, 0x19c(r28)
/* 801B3064 001AFDA4  4C C6 31 82 */	crclr 6
/* 801B3068 001AFDA8  48 00 04 05 */	bl OSReport
/* 801B306C 001AFDAC  38 7F 00 D4 */	addi r3, r31, 0xd4
/* 801B3070 001AFDB0  4C C6 31 82 */	crclr 6
/* 801B3074 001AFDB4  48 00 03 F9 */	bl OSReport
/* 801B3078 001AFDB8  3B 20 00 00 */	li r25, 0x0
/* 801B307C 001AFDBC  57 20 10 3A */	slwi r0, r25, 2
/* 801B3080 001AFDC0  7F 7C 02 14 */	add r27, r28, r0
/* 801B3084 001AFDC4  48 00 00 04 */	b func_801B3088
func_801B3088:
/* 801B3088 001AFDC8  48 00 00 04 */	b func_801B308C
func_801B308C:
/* 801B308C 001AFDCC  48 00 00 04 */	b func_801B3090
func_801B3090:
/* 801B3090 001AFDD0  80 BB 01 A4 */	lwz r5, 0x1a4(r27)
/* 801B3094 001AFDD4  7F 24 CB 78 */	mr r4, r25
/* 801B3098 001AFDD8  80 FB 01 B4 */	lwz r7, 0x1b4(r27)
/* 801B309C 001AFDDC  38 7F 00 E8 */	addi r3, r31, 0xe8
/* 801B30A0 001AFDE0  38 D9 00 04 */	addi r6, r25, 0x4
/* 801B30A4 001AFDE4  4C C6 31 82 */	crclr 6
/* 801B30A8 001AFDE8  48 00 03 C5 */	bl OSReport
/* 801B30AC 001AFDEC  3B 7B 00 04 */	addi r27, r27, 0x4
/* 801B30B0 001AFDF0  3B 39 00 01 */	addi r25, r25, 0x1
/* 801B30B4 001AFDF4  28 19 00 04 */	cmplwi r25, 0x4
/* 801B30B8 001AFDF8  41 80 FF D8 */	blt func_801B3090
/* 801B30BC 001AFDFC  A0 1C 01 A2 */	lhz r0, 0x1a2(r28)
/* 801B30C0 001AFE00  54 00 07 FE */	clrlwi r0, r0, 31
/* 801B30C4 001AFE04  28 00 00 00 */	cmplwi r0, 0x0
/* 801B30C8 001AFE08  41 82 01 3C */	beq lbl_801B3204
/* 801B30CC 001AFE0C  48 00 09 79 */	bl OSDisableInterrupts
/* 801B30D0 001AFE10  3C C0 80 00 */	lis r6, 0x800000D4@ha
/* 801B30D4 001AFE14  80 06 00 D4 */	lwz r0, 0x800000D4@l(r6)
/* 801B30D8 001AFE18  38 A0 00 00 */	li r5, 0x0
/* 801B30DC 001AFE1C  38 81 00 10 */	addi r4, r1, 0x10
/* 801B30E0 001AFE20  B0 A1 01 B0 */	sth r5, 0x1b0(r1)
/* 801B30E4 001AFE24  7C 1E 03 78 */	mr r30, r0
/* 801B30E8 001AFE28  7C 7D 1B 78 */	mr r29, r3
/* 801B30EC 001AFE2C  B0 A1 01 B2 */	sth r5, 0x1b2(r1)
/* 801B30F0 001AFE30  80 06 00 D8 */	lwz r0, 0xd8(r6)
/* 801B30F4 001AFE34  7C 04 00 40 */	cmplw r4, r0
/* 801B30F8 001AFE38  40 82 00 08 */	bne lbl_801B3100
/* 801B30FC 001AFE3C  90 A6 00 D8 */	stw r5, 0xd8(r6)
lbl_801B3100:
/* 801B3100 001AFE40  38 61 00 10 */	addi r3, r1, 0x10
/* 801B3104 001AFE44  4B FF FC 21 */	bl OSSetCurrentContext
/* 801B3108 001AFE48  38 7F 01 0C */	addi r3, r31, 0x10c
/* 801B310C 001AFE4C  4C C6 31 82 */	crclr 6
/* 801B3110 001AFE50  48 00 03 5D */	bl OSReport
/* 801B3114 001AFE54  3B 20 00 00 */	li r25, 0x0
/* 801B3118 001AFE58  57 20 18 38 */	slwi r0, r25, 3
/* 801B311C 001AFE5C  7F 5C 02 14 */	add r26, r28, r0
/* 801B3120 001AFE60  48 00 00 04 */	b func_801B3124
func_801B3124:
/* 801B3124 001AFE64  48 00 00 04 */	b func_801B3128
func_801B3128:
/* 801B3128 001AFE68  48 00 00 04 */	b func_801B312C
func_801B312C:
/* 801B312C 001AFE6C  C8 3A 00 98 */	lfd f1, 0x98(r26)
/* 801B3130 001AFE70  48 08 2C 75 */	bl _cvt_fp2unsigned
/* 801B3134 001AFE74  7C 7B 1B 78 */	mr r27, r3
/* 801B3138 001AFE78  C8 3A 00 90 */	lfd f1, 0x90(r26)
/* 801B313C 001AFE7C  48 08 2C 69 */	bl _cvt_fp2unsigned
/* 801B3140 001AFE80  7C 65 1B 78 */	mr r5, r3
/* 801B3144 001AFE84  4C C6 31 82 */	crclr 6
/* 801B3148 001AFE88  7F 24 CB 78 */	mr r4, r25
/* 801B314C 001AFE8C  7F 67 DB 78 */	mr r7, r27
/* 801B3150 001AFE90  38 7F 01 20 */	addi r3, r31, 0x120
/* 801B3154 001AFE94  38 D9 00 01 */	addi r6, r25, 0x1
/* 801B3158 001AFE98  48 00 03 15 */	bl OSReport
/* 801B315C 001AFE9C  3B 5A 00 10 */	addi r26, r26, 0x10
/* 801B3160 001AFEA0  3B 39 00 02 */	addi r25, r25, 0x2
/* 801B3164 001AFEA4  28 19 00 20 */	cmplwi r25, 0x20
/* 801B3168 001AFEA8  41 80 FF C4 */	blt func_801B312C
/* 801B316C 001AFEAC  38 7F 01 3C */	addi r3, r31, 0x13c
/* 801B3170 001AFEB0  4C C6 31 82 */	crclr 6
/* 801B3174 001AFEB4  48 00 02 F9 */	bl OSReport
/* 801B3178 001AFEB8  3B 20 00 00 */	li r25, 0x0
/* 801B317C 001AFEBC  57 20 18 38 */	slwi r0, r25, 3
/* 801B3180 001AFEC0  7F 5C 02 14 */	add r26, r28, r0
/* 801B3184 001AFEC4  48 00 00 04 */	b func_801B3188
func_801B3188:
/* 801B3188 001AFEC8  48 00 00 04 */	b func_801B318C
func_801B318C:
/* 801B318C 001AFECC  48 00 00 04 */	b func_801B3190
func_801B3190:
/* 801B3190 001AFED0  C8 3A 01 D0 */	lfd f1, 0x1d0(r26)
/* 801B3194 001AFED4  48 08 2C 11 */	bl _cvt_fp2unsigned
/* 801B3198 001AFED8  7C 7B 1B 78 */	mr r27, r3
/* 801B319C 001AFEDC  C8 3A 01 C8 */	lfd f1, 0x1c8(r26)
/* 801B31A0 001AFEE0  48 08 2C 05 */	bl _cvt_fp2unsigned
/* 801B31A4 001AFEE4  7C 65 1B 78 */	mr r5, r3
/* 801B31A8 001AFEE8  4C C6 31 82 */	crclr 6
/* 801B31AC 001AFEEC  7F 24 CB 78 */	mr r4, r25
/* 801B31B0 001AFEF0  7F 67 DB 78 */	mr r7, r27
/* 801B31B4 001AFEF4  38 7F 01 50 */	addi r3, r31, 0x150
/* 801B31B8 001AFEF8  38 D9 00 01 */	addi r6, r25, 0x1
/* 801B31BC 001AFEFC  48 00 02 B1 */	bl OSReport
/* 801B31C0 001AFF00  3B 5A 00 10 */	addi r26, r26, 0x10
/* 801B31C4 001AFF04  3B 39 00 02 */	addi r25, r25, 0x2
/* 801B31C8 001AFF08  28 19 00 20 */	cmplwi r25, 0x20
/* 801B31CC 001AFF0C  41 80 FF C4 */	blt func_801B3190
/* 801B31D0 001AFF10  38 A0 00 00 */	li r5, 0x0
/* 801B31D4 001AFF14  B0 A1 01 B0 */	sth r5, 0x1b0(r1)
/* 801B31D8 001AFF18  3C 60 80 00 */	lis r3, 0x800000D8@ha
/* 801B31DC 001AFF1C  38 81 00 10 */	addi r4, r1, 0x10
/* 801B31E0 001AFF20  B0 A1 01 B2 */	sth r5, 0x1b2(r1)
/* 801B31E4 001AFF24  80 03 00 D8 */	lwz r0, 0x800000D8@l(r3)
/* 801B31E8 001AFF28  7C 04 00 40 */	cmplw r4, r0
/* 801B31EC 001AFF2C  40 82 00 08 */	bne lbl_801B31F4
/* 801B31F0 001AFF30  90 A3 00 D8 */	stw r5, 0xd8(r3)
lbl_801B31F4:
/* 801B31F4 001AFF34  7F C3 F3 78 */	mr r3, r30
/* 801B31F8 001AFF38  4B FF FB 2D */	bl OSSetCurrentContext
/* 801B31FC 001AFF3C  7F A3 EB 78 */	mr r3, r29
/* 801B3200 001AFF40  48 00 08 6D */	bl OSRestoreInterrupts
lbl_801B3204:
/* 801B3204 001AFF44  38 7F 01 70 */	addi r3, r31, 0x170
/* 801B3208 001AFF48  4C C6 31 82 */	crclr 6
/* 801B320C 001AFF4C  48 00 02 61 */	bl OSReport
/* 801B3210 001AFF50  83 3C 00 04 */	lwz r25, 0x4(r28)
/* 801B3214 001AFF54  3B 40 00 00 */	li r26, 0x0
/* 801B3218 001AFF58  48 00 00 04 */	b func_801B321C
func_801B321C:
/* 801B321C 001AFF5C  48 00 00 04 */	b func_801B3220
func_801B3220:
/* 801B3220 001AFF60  48 00 00 20 */	b func_801B3240
lbl_801B3224:
/* 801B3224 001AFF64  80 B9 00 00 */	lwz r5, 0x0(r25)
/* 801B3228 001AFF68  7F 24 CB 78 */	mr r4, r25
/* 801B322C 001AFF6C  80 D9 00 04 */	lwz r6, 0x4(r25)
/* 801B3230 001AFF70  38 7F 01 98 */	addi r3, r31, 0x198
/* 801B3234 001AFF74  4C C6 31 82 */	crclr 6
/* 801B3238 001AFF78  48 00 02 35 */	bl OSReport
/* 801B323C 001AFF7C  83 39 00 00 */	lwz r25, 0x0(r25)
func_801B3240:
/* 801B3240 001AFF80  28 19 00 00 */	cmplwi r25, 0x0
/* 801B3244 001AFF84  41 82 00 1C */	beq lbl_801B3260
/* 801B3248 001AFF88  3C 19 00 01 */	addis r0, r25, 0x1
/* 801B324C 001AFF8C  28 00 FF FF */	cmplwi r0, 0xffff
/* 801B3250 001AFF90  41 82 00 10 */	beq lbl_801B3260
/* 801B3254 001AFF94  28 1A 00 10 */	cmplwi r26, 0x10
/* 801B3258 001AFF98  3B 5A 00 01 */	addi r26, r26, 0x1
/* 801B325C 001AFF9C  41 80 FF C8 */	blt lbl_801B3224
lbl_801B3260:
/* 801B3260 001AFFA0  BB 21 02 DC */	lmw r25, 0x2dc(r1)
/* 801B3264 001AFFA4  80 01 02 FC */	lwz r0, 0x2fc(r1)
/* 801B3268 001AFFA8  38 21 02 F8 */	addi r1, r1, 0x2f8
/* 801B326C 001AFFAC  7C 08 03 A6 */	mtlr r0
/* 801B3270 001AFFB0  4E 80 00 20 */	blr

.global OSSwitchFPUContext
OSSwitchFPUContext:
/* 801B3274 001AFFB4  7C A0 00 A6 */	mfmsr r5
/* 801B3278 001AFFB8  60 A5 20 00 */	ori r5, r5, 0x2000
/* 801B327C 001AFFBC  7C A0 01 24 */	mtmsr r5
/* 801B3280 001AFFC0  4C 00 01 2C */	isync
/* 801B3284 001AFFC4  80 A4 01 9C */	lwz r5, 0x19c(r4)
/* 801B3288 001AFFC8  60 A5 20 00 */	ori r5, r5, 0x2000
/* 801B328C 001AFFCC  7C BB 03 A6 */	mtspr 27, r5
/* 801B3290 001AFFD0  3C 60 80 00 */	lis r3, 0x800000D8@ha
/* 801B3294 001AFFD4  80 A3 00 D8 */	lwz r5, 0x800000D8@l(r3)
/* 801B3298 001AFFD8  90 83 00 D8 */	stw r4, 0xd8(r3)
/* 801B329C 001AFFDC  7C 05 20 00 */	cmpw r5, r4
/* 801B32A0 001AFFE0  41 82 00 14 */	beq lbl_801B32B4
/* 801B32A4 001AFFE4  2C 05 00 00 */	cmpwi r5, 0x0
/* 801B32A8 001AFFE8  41 82 00 08 */	beq lbl_801B32B0
/* 801B32AC 001AFFEC  4B FF F9 49 */	bl _OSSaveFPUContext
lbl_801B32B0:
/* 801B32B0 001AFFF0  4B FF F8 21 */	bl _OSLoadFPUContext
lbl_801B32B4:
/* 801B32B4 001AFFF4  80 64 00 80 */	lwz r3, 0x80(r4)
/* 801B32B8 001AFFF8  7C 6F F1 20 */	mtcrf 255, r3
/* 801B32BC 001AFFFC  80 64 00 84 */	lwz r3, 0x84(r4)
/* 801B32C0 001B0000  7C 68 03 A6 */	mtlr r3
/* 801B32C4 001B0004  80 64 01 98 */	lwz r3, 0x198(r4)
/* 801B32C8 001B0008  7C 7A 03 A6 */	mtspr 26, r3
/* 801B32CC 001B000C  80 64 00 88 */	lwz r3, 0x88(r4)
/* 801B32D0 001B0010  7C 69 03 A6 */	mtctr r3
/* 801B32D4 001B0014  80 64 00 8C */	lwz r3, 0x8c(r4)
/* 801B32D8 001B0018  7C 61 03 A6 */	mtxer r3
/* 801B32DC 001B001C  A0 64 01 A2 */	lhz r3, 0x1a2(r4)
/* 801B32E0 001B0020  54 63 07 FA */	rlwinm r3, r3, 0, 31, 29
/* 801B32E4 001B0024  B0 64 01 A2 */	sth r3, 0x1a2(r4)
/* 801B32E8 001B0028  80 A4 00 14 */	lwz r5, 0x14(r4)
/* 801B32EC 001B002C  80 64 00 0C */	lwz r3, 0xc(r4)
/* 801B32F0 001B0030  80 84 00 10 */	lwz r4, 0x10(r4)
/* 801B32F4 001B0034  4C 00 00 64 */	rfi

.global __OSContextInit
__OSContextInit:
/* 801B32F8 001B0038  7C 08 02 A6 */	mflr r0
/* 801B32FC 001B003C  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B3300 001B0040  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B3304 001B0044  3C 60 80 1B */	lis r3, OSSwitchFPUContext@ha
/* 801B3308 001B0048  38 83 32 74 */	addi r4, r3, OSSwitchFPUContext@l
/* 801B330C 001B004C  38 60 00 07 */	li r3, 0x7
/* 801B3310 001B0050  4B FF E1 51 */	bl __OSSetExceptionHandler
/* 801B3314 001B0054  38 00 00 00 */	li r0, 0x0
/* 801B3318 001B0058  4C C6 31 82 */	crclr 6
/* 801B331C 001B005C  3C 80 80 00 */	lis r4, 0x800000D8@ha
/* 801B3320 001B0060  3C 60 80 2E */	lis r3, lbl_802E068C@ha
/* 801B3324 001B0064  90 04 00 D8 */	stw r0, 0x800000D8@l(r4)
/* 801B3328 001B0068  38 63 06 8C */	addi r3, r3, lbl_802E068C@l
/* 801B332C 001B006C  48 02 00 B9 */	bl DBPrintf
/* 801B3330 001B0070  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B3334 001B0074  38 21 00 08 */	addi r1, r1, 0x8
/* 801B3338 001B0078  7C 08 03 A6 */	mtlr r0
/* 801B333C 001B007C  4E 80 00 20 */	blr

.global OSFillFPUContext
OSFillFPUContext:
/* 801B3340 001B0080  7C A0 00 A6 */	mfmsr r5
/* 801B3344 001B0084  60 A5 20 00 */	ori r5, r5, 0x2000
/* 801B3348 001B0088  7C A0 01 24 */	mtmsr r5
/* 801B334C 001B008C  4C 00 01 2C */	isync
/* 801B3350 001B0090  D8 03 00 90 */	stfd f0, 0x90(r3)
/* 801B3354 001B0094  D8 23 00 98 */	stfd f1, 0x98(r3)
/* 801B3358 001B0098  D8 43 00 A0 */	stfd f2, 0xa0(r3)
/* 801B335C 001B009C  D8 63 00 A8 */	stfd f3, 0xa8(r3)
/* 801B3360 001B00A0  D8 83 00 B0 */	stfd f4, 0xb0(r3)
/* 801B3364 001B00A4  D8 A3 00 B8 */	stfd f5, 0xb8(r3)
/* 801B3368 001B00A8  D8 C3 00 C0 */	stfd f6, 0xc0(r3)
/* 801B336C 001B00AC  D8 E3 00 C8 */	stfd f7, 0xc8(r3)
/* 801B3370 001B00B0  D9 03 00 D0 */	stfd f8, 0xd0(r3)
/* 801B3374 001B00B4  D9 23 00 D8 */	stfd f9, 0xd8(r3)
/* 801B3378 001B00B8  D9 43 00 E0 */	stfd f10, 0xe0(r3)
/* 801B337C 001B00BC  D9 63 00 E8 */	stfd f11, 0xe8(r3)
/* 801B3380 001B00C0  D9 83 00 F0 */	stfd f12, 0xf0(r3)
/* 801B3384 001B00C4  D9 A3 00 F8 */	stfd f13, 0xf8(r3)
/* 801B3388 001B00C8  D9 C3 01 00 */	stfd f14, 0x100(r3)
/* 801B338C 001B00CC  D9 E3 01 08 */	stfd f15, 0x108(r3)
/* 801B3390 001B00D0  DA 03 01 10 */	stfd f16, 0x110(r3)
/* 801B3394 001B00D4  DA 23 01 18 */	stfd f17, 0x118(r3)
/* 801B3398 001B00D8  DA 43 01 20 */	stfd f18, 0x120(r3)
/* 801B339C 001B00DC  DA 63 01 28 */	stfd f19, 0x128(r3)
/* 801B33A0 001B00E0  DA 83 01 30 */	stfd f20, 0x130(r3)
/* 801B33A4 001B00E4  DA A3 01 38 */	stfd f21, 0x138(r3)
/* 801B33A8 001B00E8  DA C3 01 40 */	stfd f22, 0x140(r3)
/* 801B33AC 001B00EC  DA E3 01 48 */	stfd f23, 0x148(r3)
/* 801B33B0 001B00F0  DB 03 01 50 */	stfd f24, 0x150(r3)
/* 801B33B4 001B00F4  DB 23 01 58 */	stfd f25, 0x158(r3)
/* 801B33B8 001B00F8  DB 43 01 60 */	stfd f26, 0x160(r3)
/* 801B33BC 001B00FC  DB 63 01 68 */	stfd f27, 0x168(r3)
/* 801B33C0 001B0100  DB 83 01 70 */	stfd f28, 0x170(r3)
/* 801B33C4 001B0104  DB A3 01 78 */	stfd f29, 0x178(r3)
/* 801B33C8 001B0108  DB C3 01 80 */	stfd f30, 0x180(r3)
/* 801B33CC 001B010C  DB E3 01 88 */	stfd f31, 0x188(r3)
/* 801B33D0 001B0110  FC 00 04 8E */	mffs f0
/* 801B33D4 001B0114  D8 03 01 90 */	stfd f0, 0x190(r3)
/* 801B33D8 001B0118  C8 03 00 90 */	lfd f0, 0x90(r3)
/* 801B33DC 001B011C  7C B8 E2 A6 */	mfspr r5, 920
/* 801B33E0 001B0120  54 A5 1F FF */	rlwinm. r5, r5, 3, 31, 31
/* 801B33E4 001B0124  41 82 00 84 */	beq lbl_801B3468
/* 801B33E8 001B0128  F0 03 01 C8 */	psq_st f0, 0x1c8(r3), 0, qr0
/* 801B33EC 001B012C  F0 23 01 D0 */	psq_st f1, 0x1d0(r3), 0, qr0
/* 801B33F0 001B0130  F0 43 01 D8 */	psq_st f2, 0x1d8(r3), 0, qr0
/* 801B33F4 001B0134  F0 63 01 E0 */	psq_st f3, 0x1e0(r3), 0, qr0
/* 801B33F8 001B0138  F0 83 01 E8 */	psq_st f4, 0x1e8(r3), 0, qr0
/* 801B33FC 001B013C  F0 A3 01 F0 */	psq_st f5, 0x1f0(r3), 0, qr0
/* 801B3400 001B0140  F0 C3 01 F8 */	psq_st f6, 0x1f8(r3), 0, qr0
/* 801B3404 001B0144  F0 E3 02 00 */	psq_st f7, 0x200(r3), 0, qr0
/* 801B3408 001B0148  F1 03 02 08 */	psq_st f8, 0x208(r3), 0, qr0
/* 801B340C 001B014C  F1 23 02 10 */	psq_st f9, 0x210(r3), 0, qr0
/* 801B3410 001B0150  F1 43 02 18 */	psq_st f10, 0x218(r3), 0, qr0
/* 801B3414 001B0154  F1 63 02 20 */	psq_st f11, 0x220(r3), 0, qr0
/* 801B3418 001B0158  F1 83 02 28 */	psq_st f12, 0x228(r3), 0, qr0
/* 801B341C 001B015C  F1 A3 02 30 */	psq_st f13, 0x230(r3), 0, qr0
/* 801B3420 001B0160  F1 C3 02 38 */	psq_st f14, 0x238(r3), 0, qr0
/* 801B3424 001B0164  F1 E3 02 40 */	psq_st f15, 0x240(r3), 0, qr0
/* 801B3428 001B0168  F2 03 02 48 */	psq_st f16, 0x248(r3), 0, qr0
/* 801B342C 001B016C  F2 23 02 50 */	psq_st f17, 0x250(r3), 0, qr0
/* 801B3430 001B0170  F2 43 02 58 */	psq_st f18, 0x258(r3), 0, qr0
/* 801B3434 001B0174  F2 63 02 60 */	psq_st f19, 0x260(r3), 0, qr0
/* 801B3438 001B0178  F2 83 02 68 */	psq_st f20, 0x268(r3), 0, qr0
/* 801B343C 001B017C  F2 A3 02 70 */	psq_st f21, 0x270(r3), 0, qr0
/* 801B3440 001B0180  F2 C3 02 78 */	psq_st f22, 0x278(r3), 0, qr0
/* 801B3444 001B0184  F2 E3 02 80 */	psq_st f23, 0x280(r3), 0, qr0
/* 801B3448 001B0188  F3 03 02 88 */	psq_st f24, 0x288(r3), 0, qr0
/* 801B344C 001B018C  F3 23 02 90 */	psq_st f25, 0x290(r3), 0, qr0
/* 801B3450 001B0190  F3 43 02 98 */	psq_st f26, 0x298(r3), 0, qr0
/* 801B3454 001B0194  F3 63 02 A0 */	psq_st f27, 0x2a0(r3), 0, qr0
/* 801B3458 001B0198  F3 83 02 A8 */	psq_st f28, 0x2a8(r3), 0, qr0
/* 801B345C 001B019C  F3 A3 02 B0 */	psq_st f29, 0x2b0(r3), 0, qr0
/* 801B3460 001B01A0  F3 C3 02 B8 */	psq_st f30, 0x2b8(r3), 0, qr0
/* 801B3464 001B01A4  F3 E3 02 C0 */	psq_st f31, 0x2c0(r3), 0, qr0
lbl_801B3468:
/* 801B3468 001B01A8  4E 80 00 20 */	blr

.global OSReport
OSReport:
/* 801B346C 001B01AC  7C 08 02 A6 */	mflr r0
/* 801B3470 001B01B0  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B3474 001B01B4  94 21 FF 88 */	stwu r1, -0x78(r1)
/* 801B3478 001B01B8  40 86 00 24 */	bne cr1, lbl_801B349C
/* 801B347C 001B01BC  D8 21 00 28 */	stfd f1, 0x28(r1)
/* 801B3480 001B01C0  D8 41 00 30 */	stfd f2, 0x30(r1)
/* 801B3484 001B01C4  D8 61 00 38 */	stfd f3, 0x38(r1)
/* 801B3488 001B01C8  D8 81 00 40 */	stfd f4, 0x40(r1)
/* 801B348C 001B01CC  D8 A1 00 48 */	stfd f5, 0x48(r1)
/* 801B3490 001B01D0  D8 C1 00 50 */	stfd f6, 0x50(r1)
/* 801B3494 001B01D4  D8 E1 00 58 */	stfd f7, 0x58(r1)
/* 801B3498 001B01D8  D9 01 00 60 */	stfd f8, 0x60(r1)
lbl_801B349C:
/* 801B349C 001B01DC  90 61 00 08 */	stw r3, 0x8(r1)
/* 801B34A0 001B01E0  3C 00 01 00 */	lis r0, 0x100
/* 801B34A4 001B01E4  90 81 00 0C */	stw r4, 0xc(r1)
/* 801B34A8 001B01E8  38 81 00 6C */	addi r4, r1, 0x6c
/* 801B34AC 001B01EC  90 A1 00 10 */	stw r5, 0x10(r1)
/* 801B34B0 001B01F0  90 C1 00 14 */	stw r6, 0x14(r1)
/* 801B34B4 001B01F4  90 E1 00 18 */	stw r7, 0x18(r1)
/* 801B34B8 001B01F8  91 01 00 1C */	stw r8, 0x1c(r1)
/* 801B34BC 001B01FC  91 21 00 20 */	stw r9, 0x20(r1)
/* 801B34C0 001B0200  91 41 00 24 */	stw r10, 0x24(r1)
/* 801B34C4 001B0204  90 01 00 6C */	stw r0, 0x6c(r1)
/* 801B34C8 001B0208  38 01 00 80 */	addi r0, r1, 0x80
/* 801B34CC 001B020C  90 01 00 70 */	stw r0, 0x70(r1)
/* 801B34D0 001B0210  38 01 00 08 */	addi r0, r1, 0x8
/* 801B34D4 001B0214  90 01 00 74 */	stw r0, 0x74(r1)
/* 801B34D8 001B0218  48 08 4E E9 */	bl vprintf
/* 801B34DC 001B021C  80 01 00 7C */	lwz r0, 0x7c(r1)
/* 801B34E0 001B0220  38 21 00 78 */	addi r1, r1, 0x78
/* 801B34E4 001B0224  7C 08 03 A6 */	mtlr r0
/* 801B34E8 001B0228  4E 80 00 20 */	blr

.global OSSetErrorHandler
OSSetErrorHandler:
/* 801B34EC 001B022C  7C 08 02 A6 */	mflr r0
/* 801B34F0 001B0230  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B34F4 001B0234  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 801B34F8 001B0238  93 E1 00 2C */	stw r31, 0x2c(r1)
/* 801B34FC 001B023C  93 C1 00 28 */	stw r30, 0x28(r1)
/* 801B3500 001B0240  93 A1 00 24 */	stw r29, 0x24(r1)
/* 801B3504 001B0244  3B A3 00 00 */	addi r29, r3, 0x0
/* 801B3508 001B0248  93 81 00 20 */	stw r28, 0x20(r1)
/* 801B350C 001B024C  3B 84 00 00 */	addi r28, r4, 0x0
/* 801B3510 001B0250  48 00 05 35 */	bl OSDisableInterrupts
/* 801B3514 001B0254  3C 80 80 31 */	lis r4, __OSErrorTable@ha
/* 801B3518 001B0258  57 A5 13 BA */	rlwinm r5, r29, 2, 14, 29
/* 801B351C 001B025C  38 04 7A 90 */	addi r0, r4, __OSErrorTable@l
/* 801B3520 001B0260  57 A6 04 3E */	clrlwi r6, r29, 16
/* 801B3524 001B0264  7C 80 2A 14 */	add r4, r0, r5
/* 801B3528 001B0268  83 C4 00 00 */	lwz r30, 0x0(r4)
/* 801B352C 001B026C  28 06 00 10 */	cmplwi r6, 0x10
/* 801B3530 001B0270  7C 7D 1B 78 */	mr r29, r3
/* 801B3534 001B0274  93 84 00 00 */	stw r28, 0x0(r4)
/* 801B3538 001B0278  40 82 01 A0 */	bne lbl_801B36D8
/* 801B353C 001B027C  4B FF D4 DD */	bl PPCMfmsr
/* 801B3540 001B0280  3B E3 00 00 */	addi r31, r3, 0x0
/* 801B3544 001B0284  63 E3 20 00 */	ori r3, r31, 0x2000
/* 801B3548 001B0288  4B FF D4 D9 */	bl PPCMtmsr
/* 801B354C 001B028C  4B FF D5 51 */	bl PPCMffpscr
/* 801B3550 001B0290  28 1C 00 00 */	cmplwi r28, 0x0
/* 801B3554 001B0294  41 82 01 18 */	beq lbl_801B366C
/* 801B3558 001B0298  3C A0 80 00 */	lis r5, 0x800000DC@ha
/* 801B355C 001B029C  3C 80 60 06 */	lis r4, 0x6006
/* 801B3560 001B02A0  80 C5 00 DC */	lwz r6, 0x800000DC@l(r5)
/* 801B3564 001B02A4  38 84 F8 FF */	addi r4, r4, -0x701
/* 801B3568 001B02A8  48 00 00 E8 */	b func_801B3650
lbl_801B356C:
/* 801B356C 001B02AC  80 06 01 9C */	lwz r0, 0x19c(r6)
/* 801B3570 001B02B0  60 00 09 00 */	ori r0, r0, 0x900
/* 801B3574 001B02B4  90 06 01 9C */	stw r0, 0x19c(r6)
/* 801B3578 001B02B8  A0 A6 01 A2 */	lhz r5, 0x1a2(r6)
/* 801B357C 001B02BC  54 A0 07 FF */	clrlwi. r0, r5, 31
/* 801B3580 001B02C0  40 82 00 AC */	bne lbl_801B362C
/* 801B3584 001B02C4  60 A5 00 01 */	ori r5, r5, 0x1
/* 801B3588 001B02C8  38 00 00 04 */	li r0, 0x4
/* 801B358C 001B02CC  B0 A6 01 A2 */	sth r5, 0x1a2(r6)
/* 801B3590 001B02D0  7C 09 03 A6 */	mtctr r0
/* 801B3594 001B02D4  38 A6 00 00 */	addi r5, r6, 0x0
lbl_801B3598:
/* 801B3598 001B02D8  38 00 FF FF */	li r0, -0x1
/* 801B359C 001B02DC  90 05 00 94 */	stw r0, 0x94(r5)
/* 801B35A0 001B02E0  90 05 00 90 */	stw r0, 0x90(r5)
/* 801B35A4 001B02E4  90 05 01 CC */	stw r0, 0x1cc(r5)
/* 801B35A8 001B02E8  90 05 01 C8 */	stw r0, 0x1c8(r5)
/* 801B35AC 001B02EC  90 05 00 9C */	stw r0, 0x9c(r5)
/* 801B35B0 001B02F0  90 05 00 98 */	stw r0, 0x98(r5)
/* 801B35B4 001B02F4  90 05 01 D4 */	stw r0, 0x1d4(r5)
/* 801B35B8 001B02F8  90 05 01 D0 */	stw r0, 0x1d0(r5)
/* 801B35BC 001B02FC  90 05 00 A4 */	stw r0, 0xa4(r5)
/* 801B35C0 001B0300  90 05 00 A0 */	stw r0, 0xa0(r5)
/* 801B35C4 001B0304  90 05 01 DC */	stw r0, 0x1dc(r5)
/* 801B35C8 001B0308  90 05 01 D8 */	stw r0, 0x1d8(r5)
/* 801B35CC 001B030C  90 05 00 AC */	stw r0, 0xac(r5)
/* 801B35D0 001B0310  90 05 00 A8 */	stw r0, 0xa8(r5)
/* 801B35D4 001B0314  90 05 01 E4 */	stw r0, 0x1e4(r5)
/* 801B35D8 001B0318  90 05 01 E0 */	stw r0, 0x1e0(r5)
/* 801B35DC 001B031C  90 05 00 B4 */	stw r0, 0xb4(r5)
/* 801B35E0 001B0320  90 05 00 B0 */	stw r0, 0xb0(r5)
/* 801B35E4 001B0324  90 05 01 EC */	stw r0, 0x1ec(r5)
/* 801B35E8 001B0328  90 05 01 E8 */	stw r0, 0x1e8(r5)
/* 801B35EC 001B032C  90 05 00 BC */	stw r0, 0xbc(r5)
/* 801B35F0 001B0330  90 05 00 B8 */	stw r0, 0xb8(r5)
/* 801B35F4 001B0334  90 05 01 F4 */	stw r0, 0x1f4(r5)
/* 801B35F8 001B0338  90 05 01 F0 */	stw r0, 0x1f0(r5)
/* 801B35FC 001B033C  90 05 00 C4 */	stw r0, 0xc4(r5)
/* 801B3600 001B0340  90 05 00 C0 */	stw r0, 0xc0(r5)
/* 801B3604 001B0344  90 05 01 FC */	stw r0, 0x1fc(r5)
/* 801B3608 001B0348  90 05 01 F8 */	stw r0, 0x1f8(r5)
/* 801B360C 001B034C  90 05 00 CC */	stw r0, 0xcc(r5)
/* 801B3610 001B0350  90 05 00 C8 */	stw r0, 0xc8(r5)
/* 801B3614 001B0354  90 05 02 04 */	stw r0, 0x204(r5)
/* 801B3618 001B0358  90 05 02 00 */	stw r0, 0x200(r5)
/* 801B361C 001B035C  38 A5 00 40 */	addi r5, r5, 0x40
/* 801B3620 001B0360  42 00 FF 78 */	bdnz lbl_801B3598
/* 801B3624 001B0364  38 00 00 04 */	li r0, 0x4
/* 801B3628 001B0368  90 06 01 94 */	stw r0, 0x194(r6)
lbl_801B362C:
/* 801B362C 001B036C  80 0D A1 D8 */	lwz r0, lbl_80348B98@sda21(r13)
/* 801B3630 001B0370  80 A6 01 94 */	lwz r5, 0x194(r6)
/* 801B3634 001B0374  54 00 06 38 */	rlwinm r0, r0, 0, 24, 28
/* 801B3638 001B0378  7C A0 03 78 */	or r0, r5, r0
/* 801B363C 001B037C  90 06 01 94 */	stw r0, 0x194(r6)
/* 801B3640 001B0380  80 06 01 94 */	lwz r0, 0x194(r6)
/* 801B3644 001B0384  7C 00 20 38 */	and r0, r0, r4
/* 801B3648 001B0388  90 06 01 94 */	stw r0, 0x194(r6)
/* 801B364C 001B038C  80 C6 02 FC */	lwz r6, 0x2fc(r6)
func_801B3650:
/* 801B3650 001B0390  28 06 00 00 */	cmplwi r6, 0x0
/* 801B3654 001B0394  40 82 FF 18 */	bne lbl_801B356C
/* 801B3658 001B0398  80 0D A1 D8 */	lwz r0, lbl_80348B98@sda21(r13)
/* 801B365C 001B039C  63 FF 09 00 */	ori r31, r31, 0x900
/* 801B3660 001B03A0  54 00 06 38 */	rlwinm r0, r0, 0, 24, 28
/* 801B3664 001B03A4  7C 63 03 78 */	or r3, r3, r0
/* 801B3668 001B03A8  48 00 00 58 */	b func_801B36C0
lbl_801B366C:
/* 801B366C 001B03AC  3C A0 80 00 */	lis r5, 0x800000DC@ha
/* 801B3670 001B03B0  3C 80 60 06 */	lis r4, 0x6006
/* 801B3674 001B03B4  80 C5 00 DC */	lwz r6, 0x800000DC@l(r5)
/* 801B3678 001B03B8  38 84 F8 FF */	addi r4, r4, -0x701
/* 801B367C 001B03BC  38 A0 F6 FF */	li r5, -0x901
/* 801B3680 001B03C0  48 00 00 2C */	b func_801B36AC
lbl_801B3684:
/* 801B3684 001B03C4  80 06 01 9C */	lwz r0, 0x19c(r6)
/* 801B3688 001B03C8  7C 00 28 38 */	and r0, r0, r5
/* 801B368C 001B03CC  90 06 01 9C */	stw r0, 0x19c(r6)
/* 801B3690 001B03D0  80 06 01 94 */	lwz r0, 0x194(r6)
/* 801B3694 001B03D4  54 00 07 6E */	rlwinm r0, r0, 0, 29, 23
/* 801B3698 001B03D8  90 06 01 94 */	stw r0, 0x194(r6)
/* 801B369C 001B03DC  80 06 01 94 */	lwz r0, 0x194(r6)
/* 801B36A0 001B03E0  7C 00 20 38 */	and r0, r0, r4
/* 801B36A4 001B03E4  90 06 01 94 */	stw r0, 0x194(r6)
/* 801B36A8 001B03E8  80 C6 02 FC */	lwz r6, 0x2fc(r6)
func_801B36AC:
/* 801B36AC 001B03EC  28 06 00 00 */	cmplwi r6, 0x0
/* 801B36B0 001B03F0  40 82 FF D4 */	bne lbl_801B3684
/* 801B36B4 001B03F4  38 00 F6 FF */	li r0, -0x901
/* 801B36B8 001B03F8  54 63 07 6E */	rlwinm r3, r3, 0, 29, 23
/* 801B36BC 001B03FC  7F FF 00 38 */	and r31, r31, r0
func_801B36C0:
/* 801B36C0 001B0400  3C 80 60 06 */	lis r4, 0x6006
/* 801B36C4 001B0404  38 04 F8 FF */	addi r0, r4, -0x701
/* 801B36C8 001B0408  7C 63 00 38 */	and r3, r3, r0
/* 801B36CC 001B040C  4B FF D3 F1 */	bl PPCMtfpscr
/* 801B36D0 001B0410  7F E3 FB 78 */	mr r3, r31
/* 801B36D4 001B0414  4B FF D3 4D */	bl PPCMtmsr
lbl_801B36D8:
/* 801B36D8 001B0418  7F A3 EB 78 */	mr r3, r29
/* 801B36DC 001B041C  48 00 03 91 */	bl OSRestoreInterrupts
/* 801B36E0 001B0420  7F C3 F3 78 */	mr r3, r30
/* 801B36E4 001B0424  80 01 00 34 */	lwz r0, 0x34(r1)
/* 801B36E8 001B0428  83 E1 00 2C */	lwz r31, 0x2c(r1)
/* 801B36EC 001B042C  83 C1 00 28 */	lwz r30, 0x28(r1)
/* 801B36F0 001B0430  83 A1 00 24 */	lwz r29, 0x24(r1)
/* 801B36F4 001B0434  83 81 00 20 */	lwz r28, 0x20(r1)
/* 801B36F8 001B0438  38 21 00 30 */	addi r1, r1, 0x30
/* 801B36FC 001B043C  7C 08 03 A6 */	mtlr r0
/* 801B3700 001B0440  4E 80 00 20 */	blr

.global __OSUnhandledException
__OSUnhandledException:
/* 801B3704 001B0444  7C 08 02 A6 */	mflr r0
/* 801B3708 001B0448  3D 00 80 31 */	lis r8, __OSErrorTable@ha
/* 801B370C 001B044C  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B3710 001B0450  3C E0 80 2E */	lis r7, lbl_802E06B0@ha
/* 801B3714 001B0454  94 21 FF C0 */	stwu r1, -0x40(r1)
/* 801B3718 001B0458  BE C1 00 18 */	stmw r22, 0x18(r1)
/* 801B371C 001B045C  3B 03 00 00 */	addi r24, r3, 0x0
/* 801B3720 001B0460  3B 24 00 00 */	addi r25, r4, 0x0
/* 801B3724 001B0464  3B 45 00 00 */	addi r26, r5, 0x0
/* 801B3728 001B0468  3B 66 00 00 */	addi r27, r6, 0x0
/* 801B372C 001B046C  3B C8 7A 90 */	addi r30, r8, __OSErrorTable@l
/* 801B3730 001B0470  3B E7 06 B0 */	addi r31, r7, lbl_802E06B0@l
/* 801B3734 001B0474  48 00 44 BD */	bl OSGetTime
/* 801B3738 001B0478  80 B9 01 9C */	lwz r5, 0x19c(r25)
/* 801B373C 001B047C  3B 84 00 00 */	addi r28, r4, 0x0
/* 801B3740 001B0480  3B A3 00 00 */	addi r29, r3, 0x0
/* 801B3744 001B0484  54 A0 07 BD */	rlwinm. r0, r5, 0, 30, 30
/* 801B3748 001B0488  40 82 00 18 */	bne lbl_801B3760
/* 801B374C 001B048C  38 7F 00 5C */	addi r3, r31, 0x5c
/* 801B3750 001B0490  4C C6 31 82 */	crclr 6
/* 801B3754 001B0494  57 04 06 3E */	clrlwi r4, r24, 24
/* 801B3758 001B0498  4B FF FD 15 */	bl OSReport
/* 801B375C 001B049C  48 00 01 54 */	b func_801B38B0
lbl_801B3760:
/* 801B3760 001B04A0  57 00 06 3E */	clrlwi r0, r24, 24
/* 801B3764 001B04A4  28 00 00 06 */	cmplwi r0, 0x6
/* 801B3768 001B04A8  40 82 00 D8 */	bne lbl_801B3840
/* 801B376C 001B04AC  54 A0 02 D7 */	rlwinm. r0, r5, 0, 11, 11
/* 801B3770 001B04B0  41 82 00 D0 */	beq lbl_801B3840
/* 801B3774 001B04B4  80 1E 00 40 */	lwz r0, 0x40(r30)
/* 801B3778 001B04B8  28 00 00 00 */	cmplwi r0, 0x0
/* 801B377C 001B04BC  41 82 00 C4 */	beq lbl_801B3840
/* 801B3780 001B04C0  3B 00 00 10 */	li r24, 0x10
/* 801B3784 001B04C4  4B FF D2 95 */	bl PPCMfmsr
/* 801B3788 001B04C8  3A E3 00 00 */	addi r23, r3, 0x0
/* 801B378C 001B04CC  62 E3 20 00 */	ori r3, r23, 0x2000
/* 801B3790 001B04D0  4B FF D2 91 */	bl PPCMtmsr
/* 801B3794 001B04D4  3C 60 80 00 */	lis r3, 0x800000D8@ha
/* 801B3798 001B04D8  80 63 00 D8 */	lwz r3, 0x800000D8@l(r3)
/* 801B379C 001B04DC  28 03 00 00 */	cmplwi r3, 0x0
/* 801B37A0 001B04E0  41 82 00 08 */	beq lbl_801B37A8
/* 801B37A4 001B04E4  4B FF F5 79 */	bl func_801B2D1C
lbl_801B37A8:
/* 801B37A8 001B04E8  4B FF D2 F5 */	bl PPCMffpscr
/* 801B37AC 001B04EC  3C 80 60 06 */	lis r4, 0x6006
/* 801B37B0 001B04F0  3A C4 F8 FF */	addi r22, r4, -0x701
/* 801B37B4 001B04F4  7C 63 B0 38 */	and r3, r3, r22
/* 801B37B8 001B04F8  4B FF D3 05 */	bl PPCMtfpscr
/* 801B37BC 001B04FC  7E E3 BB 78 */	mr r3, r23
/* 801B37C0 001B0500  4B FF D2 61 */	bl PPCMtmsr
/* 801B37C4 001B0504  3E E0 80 00 */	lis r23, 0x800000D8@ha
/* 801B37C8 001B0508  80 17 00 D8 */	lwz r0, 0x800000D8@l(r23)
/* 801B37CC 001B050C  7C 00 C8 40 */	cmplw r0, r25
/* 801B37D0 001B0510  40 82 00 54 */	bne lbl_801B3824
/* 801B37D4 001B0514  48 00 33 C5 */	bl OSDisableScheduler
/* 801B37D8 001B0518  81 9E 00 40 */	lwz r12, 0x40(r30)
/* 801B37DC 001B051C  38 99 00 00 */	addi r4, r25, 0x0
/* 801B37E0 001B0520  38 BA 00 00 */	addi r5, r26, 0x0
/* 801B37E4 001B0524  4C C6 31 82 */	crclr 6
/* 801B37E8 001B0528  7D 88 03 A6 */	mtlr r12
/* 801B37EC 001B052C  38 DB 00 00 */	addi r6, r27, 0x0
/* 801B37F0 001B0530  38 60 00 10 */	li r3, 0x10
/* 801B37F4 001B0534  4E 80 00 21 */	blrl
/* 801B37F8 001B0538  80 79 01 9C */	lwz r3, 0x19c(r25)
/* 801B37FC 001B053C  38 00 00 00 */	li r0, 0x0
/* 801B3800 001B0540  54 63 04 E2 */	rlwinm r3, r3, 0, 19, 17
/* 801B3804 001B0544  90 79 01 9C */	stw r3, 0x19c(r25)
/* 801B3808 001B0548  90 17 00 D8 */	stw r0, 0xd8(r23)
/* 801B380C 001B054C  80 19 01 94 */	lwz r0, 0x194(r25)
/* 801B3810 001B0550  7C 00 B0 38 */	and r0, r0, r22
/* 801B3814 001B0554  90 19 01 94 */	stw r0, 0x194(r25)
/* 801B3818 001B0558  48 00 33 C1 */	bl OSEnableScheduler
/* 801B381C 001B055C  48 00 38 89 */	bl __OSReschedule
/* 801B3820 001B0560  48 00 00 18 */	b func_801B3838
lbl_801B3824:
/* 801B3824 001B0564  80 79 01 9C */	lwz r3, 0x19c(r25)
/* 801B3828 001B0568  38 00 00 00 */	li r0, 0x0
/* 801B382C 001B056C  54 63 04 E2 */	rlwinm r3, r3, 0, 19, 17
/* 801B3830 001B0570  90 79 01 9C */	stw r3, 0x19c(r25)
/* 801B3834 001B0574  90 17 00 D8 */	stw r0, 0xd8(r23)
func_801B3838:
/* 801B3838 001B0578  7F 23 CB 78 */	mr r3, r25
/* 801B383C 001B057C  4B FF F5 D1 */	bl OSLoadContext
lbl_801B3840:
/* 801B3840 001B0580  57 17 06 3E */	clrlwi r23, r24, 24
/* 801B3844 001B0584  57 00 15 BA */	rlwinm r0, r24, 2, 22, 29
/* 801B3848 001B0588  7E DE 02 14 */	add r22, r30, r0
/* 801B384C 001B058C  80 16 00 00 */	lwz r0, 0x0(r22)
/* 801B3850 001B0590  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3854 001B0594  41 82 00 38 */	beq lbl_801B388C
/* 801B3858 001B0598  48 00 33 41 */	bl OSDisableScheduler
/* 801B385C 001B059C  81 96 00 00 */	lwz r12, 0x0(r22)
/* 801B3860 001B05A0  38 77 00 00 */	addi r3, r23, 0x0
/* 801B3864 001B05A4  38 99 00 00 */	addi r4, r25, 0x0
/* 801B3868 001B05A8  4C C6 31 82 */	crclr 6
/* 801B386C 001B05AC  7D 88 03 A6 */	mtlr r12
/* 801B3870 001B05B0  38 BA 00 00 */	addi r5, r26, 0x0
/* 801B3874 001B05B4  38 DB 00 00 */	addi r6, r27, 0x0
/* 801B3878 001B05B8  4E 80 00 21 */	blrl
/* 801B387C 001B05BC  48 00 33 5D */	bl OSEnableScheduler
/* 801B3880 001B05C0  48 00 38 25 */	bl __OSReschedule
/* 801B3884 001B05C4  7F 23 CB 78 */	mr r3, r25
/* 801B3888 001B05C8  4B FF F5 85 */	bl OSLoadContext
lbl_801B388C:
/* 801B388C 001B05CC  57 00 06 3E */	clrlwi r0, r24, 24
/* 801B3890 001B05D0  28 00 00 08 */	cmplwi r0, 0x8
/* 801B3894 001B05D4  40 82 00 0C */	bne lbl_801B38A0
/* 801B3898 001B05D8  7F 23 CB 78 */	mr r3, r25
/* 801B389C 001B05DC  4B FF F5 71 */	bl OSLoadContext
lbl_801B38A0:
/* 801B38A0 001B05E0  38 7F 00 7C */	addi r3, r31, 0x7c
/* 801B38A4 001B05E4  4C C6 31 82 */	crclr 6
/* 801B38A8 001B05E8  57 04 06 3E */	clrlwi r4, r24, 24
/* 801B38AC 001B05EC  4B FF FB C1 */	bl OSReport
func_801B38B0:
/* 801B38B0 001B05F0  38 6D A1 DC */	addi r3, r13, lbl_80348B9C@sda21
/* 801B38B4 001B05F4  4C C6 31 82 */	crclr 6
/* 801B38B8 001B05F8  4B FF FB B5 */	bl OSReport
/* 801B38BC 001B05FC  7F 23 CB 78 */	mr r3, r25
/* 801B38C0 001B0600  4B FF F7 0D */	bl OSDumpContext
/* 801B38C4 001B0604  38 9A 00 00 */	addi r4, r26, 0x0
/* 801B38C8 001B0608  4C C6 31 82 */	crclr 6
/* 801B38CC 001B060C  38 BB 00 00 */	addi r5, r27, 0x0
/* 801B38D0 001B0610  38 7F 00 94 */	addi r3, r31, 0x94
/* 801B38D4 001B0614  4B FF FB 99 */	bl OSReport
/* 801B38D8 001B0618  38 DC 00 00 */	addi r6, r28, 0x0
/* 801B38DC 001B061C  4C C6 31 82 */	crclr 6
/* 801B38E0 001B0620  38 BD 00 00 */	addi r5, r29, 0x0
/* 801B38E4 001B0624  38 7F 00 C8 */	addi r3, r31, 0xc8
/* 801B38E8 001B0628  4B FF FB 85 */	bl OSReport
/* 801B38EC 001B062C  57 00 06 3E */	clrlwi r0, r24, 24
/* 801B38F0 001B0630  28 00 00 0F */	cmplwi r0, 0xf
/* 801B38F4 001B0634  41 81 00 C4 */	bgt func_801B39B8
/* 801B38F8 001B0638  3C 60 80 2E */	lis r3, lbl_802E098C@ha
/* 801B38FC 001B063C  38 63 09 8C */	addi r3, r3, lbl_802E098C@l
/* 801B3900 001B0640  54 00 10 3A */	slwi r0, r0, 2
/* 801B3904 001B0644  7C 03 00 2E */	lwzx r0, r3, r0
/* 801B3908 001B0648  7C 09 03 A6 */	mtctr r0
/* 801B390C 001B064C  4E 80 04 20 */	bctr
lbl_801B3910:
/* 801B3910 001B0650  80 99 01 98 */	lwz r4, 0x198(r25)
/* 801B3914 001B0654  38 BB 00 00 */	addi r5, r27, 0x0
/* 801B3918 001B0658  38 7F 00 D8 */	addi r3, r31, 0xd8
/* 801B391C 001B065C  4C C6 31 82 */	crclr 6
/* 801B3920 001B0660  4B FF FB 4D */	bl OSReport
/* 801B3924 001B0664  48 00 00 94 */	b func_801B39B8
lbl_801B3928:
/* 801B3928 001B0668  80 99 01 98 */	lwz r4, 0x198(r25)
/* 801B392C 001B066C  38 7F 01 38 */	addi r3, r31, 0x138
/* 801B3930 001B0670  4C C6 31 82 */	crclr 6
/* 801B3934 001B0674  4B FF FB 39 */	bl OSReport
/* 801B3938 001B0678  48 00 00 80 */	b func_801B39B8
lbl_801B393C:
/* 801B393C 001B067C  80 99 01 98 */	lwz r4, 0x198(r25)
/* 801B3940 001B0680  38 BB 00 00 */	addi r5, r27, 0x0
/* 801B3944 001B0684  38 7F 01 84 */	addi r3, r31, 0x184
/* 801B3948 001B0688  4C C6 31 82 */	crclr 6
/* 801B394C 001B068C  4B FF FB 21 */	bl OSReport
/* 801B3950 001B0690  48 00 00 68 */	b func_801B39B8
lbl_801B3954:
/* 801B3954 001B0694  80 99 01 98 */	lwz r4, 0x198(r25)
/* 801B3958 001B0698  38 BB 00 00 */	addi r5, r27, 0x0
/* 801B395C 001B069C  38 7F 01 E8 */	addi r3, r31, 0x1e8
/* 801B3960 001B06A0  4C C6 31 82 */	crclr 6
/* 801B3964 001B06A4  4B FF FB 09 */	bl OSReport
/* 801B3968 001B06A8  48 00 00 50 */	b func_801B39B8
lbl_801B396C:
/* 801B396C 001B06AC  38 6D A1 DC */	addi r3, r13, lbl_80348B9C@sda21
/* 801B3970 001B06B0  4C C6 31 82 */	crclr 6
/* 801B3974 001B06B4  4B FF FA F9 */	bl OSReport
/* 801B3978 001B06B8  3F 20 CC 00 */	lis r25, 0xCC005000@ha
/* 801B397C 001B06BC  4C C6 31 82 */	crclr 6
/* 801B3980 001B06C0  3B 19 50 00 */	addi r24, r25, 0xCC005000@l
/* 801B3984 001B06C4  A0 99 50 30 */	lhz r4, 0x5030(r25)
/* 801B3988 001B06C8  38 7F 02 48 */	addi r3, r31, 0x248
/* 801B398C 001B06CC  A0 B9 50 32 */	lhz r5, 0x5032(r25)
/* 801B3990 001B06D0  4B FF FA DD */	bl OSReport
/* 801B3994 001B06D4  A0 98 00 20 */	lhz r4, 0x20(r24)
/* 801B3998 001B06D8  38 7F 02 68 */	addi r3, r31, 0x268
/* 801B399C 001B06DC  A0 B8 00 22 */	lhz r5, 0x22(r24)
/* 801B39A0 001B06E0  4C C6 31 82 */	crclr 6
/* 801B39A4 001B06E4  4B FF FA C9 */	bl OSReport
/* 801B39A8 001B06E8  80 99 60 14 */	lwz r4, 0x6014(r25)
/* 801B39AC 001B06EC  4C C6 31 82 */	crclr 6
/* 801B39B0 001B06F0  38 7F 02 88 */	addi r3, r31, 0x288
/* 801B39B4 001B06F4  4B FF FA B9 */	bl OSReport
func_801B39B8:
/* 801B39B8 001B06F8  A8 8D AC 68 */	lha r4, _OSLastInterrupt@sda21(r13)
/* 801B39BC 001B06FC  38 7F 02 A4 */	addi r3, r31, 0x2a4
/* 801B39C0 001B0700  4C C6 31 82 */	crclr 6
/* 801B39C4 001B0704  80 AD AC 64 */	lwz r5, _OSLastInterruptSrr0@sda21(r13)
/* 801B39C8 001B0708  80 ED AC 70 */	lwz r7, _OSLastInterruptTime@sda21(r13)
/* 801B39CC 001B070C  81 0D AC 74 */	lwz r8, lbl_80349634@sda21(r13)
/* 801B39D0 001B0710  4B FF FA 9D */	bl OSReport
/* 801B39D4 001B0714  4B FF D0 85 */	bl PPCHalt
/* 801B39D8 001B0718  BA C1 00 18 */	lmw r22, 0x18(r1)
/* 801B39DC 001B071C  80 01 00 44 */	lwz r0, 0x44(r1)
/* 801B39E0 001B0720  38 21 00 40 */	addi r1, r1, 0x40
/* 801B39E4 001B0724  7C 08 03 A6 */	mtlr r0
/* 801B39E8 001B0728  4E 80 00 20 */	blr

.global OSGetFontEncode
OSGetFontEncode:
/* 801B39EC 001B072C  A0 6D A1 E0 */	lhz r3, fontEncode_80@sda21(r13)
/* 801B39F0 001B0730  28 03 00 01 */	cmplwi r3, 0x1
/* 801B39F4 001B0734  4C 81 00 20 */	blelr
/* 801B39F8 001B0738  3C 60 80 00 */	lis r3, 0x800000CC@ha
/* 801B39FC 001B073C  80 03 00 CC */	lwz r0, 0x800000CC@l(r3)
/* 801B3A00 001B0740  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B3A04 001B0744  41 82 00 0C */	beq lbl_801B3A10
/* 801B3A08 001B0748  41 80 00 2C */	blt func_801B3A34
/* 801B3A0C 001B074C  48 00 00 28 */	b func_801B3A34
lbl_801B3A10:
/* 801B3A10 001B0750  3C 60 CC 00 */	lis r3, 0xCC00206E@ha
/* 801B3A14 001B0754  A0 03 20 6E */	lhz r0, 0xCC00206E@l(r3)
/* 801B3A18 001B0758  54 00 07 BD */	rlwinm. r0, r0, 0, 30, 30
/* 801B3A1C 001B075C  41 82 00 0C */	beq lbl_801B3A28
/* 801B3A20 001B0760  38 00 00 01 */	li r0, 0x1
/* 801B3A24 001B0764  48 00 00 08 */	b func_801B3A2C
lbl_801B3A28:
/* 801B3A28 001B0768  38 00 00 00 */	li r0, 0x0
func_801B3A2C:
/* 801B3A2C 001B076C  B0 0D A1 E0 */	sth r0, fontEncode_80@sda21(r13)
/* 801B3A30 001B0770  48 00 00 0C */	b func_801B3A3C
func_801B3A34:
/* 801B3A34 001B0774  38 00 00 00 */	li r0, 0x0
/* 801B3A38 001B0778  B0 0D A1 E0 */	sth r0, fontEncode_80@sda21(r13)
func_801B3A3C:
/* 801B3A3C 001B077C  A0 6D A1 E0 */	lhz r3, fontEncode_80@sda21(r13)
/* 801B3A40 001B0780  4E 80 00 20 */	blr

.global OSDisableInterrupts
OSDisableInterrupts:
/* 801B3A44 001B0784  7C 60 00 A6 */	mfmsr r3
/* 801B3A48 001B0788  54 64 04 5E */	rlwinm r4, r3, 0, 17, 15
/* 801B3A4C 001B078C  7C 80 01 24 */	mtmsr r4
lbl_801B3A50:
/* 801B3A50 001B0790  54 63 8F FE */	rlwinm r3, r3, 17, 31, 31
/* 801B3A54 001B0794  4E 80 00 20 */	blr

.global OSEnableInterrupts
OSEnableInterrupts:
/* 801B3A58 001B0798  7C 60 00 A6 */	mfmsr r3
/* 801B3A5C 001B079C  60 64 80 00 */	ori r4, r3, 0x8000
/* 801B3A60 001B07A0  7C 80 01 24 */	mtmsr r4
/* 801B3A64 001B07A4  54 63 8F FE */	rlwinm r3, r3, 17, 31, 31
/* 801B3A68 001B07A8  4E 80 00 20 */	blr

.global OSRestoreInterrupts
OSRestoreInterrupts:
/* 801B3A6C 001B07AC  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B3A70 001B07B0  7C 80 00 A6 */	mfmsr r4
/* 801B3A74 001B07B4  41 82 00 0C */	beq lbl_801B3A80
/* 801B3A78 001B07B8  60 85 80 00 */	ori r5, r4, 0x8000
/* 801B3A7C 001B07BC  48 00 00 08 */	b func_801B3A84
lbl_801B3A80:
/* 801B3A80 001B07C0  54 85 04 5E */	rlwinm r5, r4, 0, 17, 15
func_801B3A84:
/* 801B3A84 001B07C4  7C A0 01 24 */	mtmsr r5
/* 801B3A88 001B07C8  54 83 8F FE */	rlwinm r3, r4, 17, 31, 31
/* 801B3A8C 001B07CC  4E 80 00 20 */	blr

.global __OSSetInterruptHandler
__OSSetInterruptHandler:
/* 801B3A90 001B07D0  7C 60 07 34 */	extsh r0, r3
/* 801B3A94 001B07D4  80 6D AC 60 */	lwz r3, InterruptHandlerTable@sda21(r13)
/* 801B3A98 001B07D8  54 00 10 3A */	slwi r0, r0, 2
/* 801B3A9C 001B07DC  7C A3 02 14 */	add r5, r3, r0
/* 801B3AA0 001B07E0  80 65 00 00 */	lwz r3, 0x0(r5)
/* 801B3AA4 001B07E4  90 85 00 00 */	stw r4, 0x0(r5)
/* 801B3AA8 001B07E8  4E 80 00 20 */	blr

.global __OSGetInterruptHandler
__OSGetInterruptHandler:
/* 801B3AAC 001B07EC  7C 60 07 34 */	extsh r0, r3
/* 801B3AB0 001B07F0  80 6D AC 60 */	lwz r3, InterruptHandlerTable@sda21(r13)
/* 801B3AB4 001B07F4  54 00 10 3A */	slwi r0, r0, 2
/* 801B3AB8 001B07F8  7C 63 00 2E */	lwzx r3, r3, r0
/* 801B3ABC 001B07FC  4E 80 00 20 */	blr

.global __OSInterruptInit
__OSInterruptInit:
/* 801B3AC0 001B0800  7C 08 02 A6 */	mflr r0
/* 801B3AC4 001B0804  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B3AC8 001B0808  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801B3ACC 001B080C  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801B3AD0 001B0810  3F E0 80 00 */	lis r31, 0x80003040@ha
/* 801B3AD4 001B0814  38 1F 30 40 */	addi r0, r31, 0x80003040@l
/* 801B3AD8 001B0818  90 0D AC 60 */	stw r0, InterruptHandlerTable@sda21(r13)
/* 801B3ADC 001B081C  38 80 00 00 */	li r4, 0x0
/* 801B3AE0 001B0820  38 A0 00 80 */	li r5, 0x80
/* 801B3AE4 001B0824  80 6D AC 60 */	lwz r3, InterruptHandlerTable@sda21(r13)
/* 801B3AE8 001B0828  4B E5 19 FD */	bl memset
/* 801B3AEC 001B082C  38 00 00 00 */	li r0, 0x0
/* 801B3AF0 001B0830  90 1F 00 C4 */	stw r0, 0xc4(r31)
/* 801B3AF4 001B0834  3C 60 CC 00 */	lis r3, 0xCC003000@ha
/* 801B3AF8 001B0838  38 83 30 00 */	addi r4, r3, 0xCC003000@l
/* 801B3AFC 001B083C  90 1F 00 C8 */	stw r0, 0xc8(r31)
/* 801B3B00 001B0840  38 00 00 F0 */	li r0, 0xf0
/* 801B3B04 001B0844  38 60 FF E0 */	li r3, -0x20
/* 801B3B08 001B0848  90 04 00 04 */	stw r0, 0x4(r4)
/* 801B3B0C 001B084C  48 00 03 01 */	bl __OSMaskInterrupts
/* 801B3B10 001B0850  3C 60 80 1B */	lis r3, ExternalInterruptHandler@ha
/* 801B3B14 001B0854  38 83 42 60 */	addi r4, r3, ExternalInterruptHandler@l
/* 801B3B18 001B0858  38 60 00 04 */	li r3, 0x4
/* 801B3B1C 001B085C  4B FF D9 45 */	bl __OSSetExceptionHandler
/* 801B3B20 001B0860  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801B3B24 001B0864  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801B3B28 001B0868  38 21 00 10 */	addi r1, r1, 0x10
/* 801B3B2C 001B086C  7C 08 03 A6 */	mtlr r0
/* 801B3B30 001B0870  4E 80 00 20 */	blr

.global SetInterruptMask
SetInterruptMask:
/* 801B3B34 001B0874  7C 60 00 34 */	cntlzw r0, r3
/* 801B3B38 001B0878  2C 00 00 0C */	cmpwi r0, 0xc
/* 801B3B3C 001B087C  40 80 00 24 */	bge lbl_801B3B60
/* 801B3B40 001B0880  2C 00 00 08 */	cmpwi r0, 0x8
/* 801B3B44 001B0884  41 82 00 FC */	beq lbl_801B3C40
/* 801B3B48 001B0888  40 80 01 28 */	bge lbl_801B3C70
/* 801B3B4C 001B088C  2C 00 00 05 */	cmpwi r0, 0x5
/* 801B3B50 001B0890  40 80 00 9C */	bge lbl_801B3BEC
/* 801B3B54 001B0894  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B3B58 001B0898  40 80 00 28 */	bge lbl_801B3B80
/* 801B3B5C 001B089C  48 00 02 AC */	b func_801B3E08
lbl_801B3B60:
/* 801B3B60 001B08A0  2C 00 00 11 */	cmpwi r0, 0x11
/* 801B3B64 001B08A4  40 80 00 10 */	bge lbl_801B3B74
/* 801B3B68 001B08A8  2C 00 00 0F */	cmpwi r0, 0xf
/* 801B3B6C 001B08AC  40 80 01 A8 */	bge lbl_801B3D14
/* 801B3B70 001B08B0  48 00 01 50 */	b func_801B3CC0
lbl_801B3B74:
/* 801B3B74 001B08B4  2C 00 00 1B */	cmpwi r0, 0x1b
/* 801B3B78 001B08B8  40 80 02 90 */	bge func_801B3E08
/* 801B3B7C 001B08BC  48 00 01 D8 */	b func_801B3D54
lbl_801B3B80:
/* 801B3B80 001B08C0  54 80 00 00 */	rlwinm r0, r4, 0, 0, 0
/* 801B3B84 001B08C4  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3B88 001B08C8  38 A0 00 00 */	li r5, 0x0
/* 801B3B8C 001B08CC  40 82 00 08 */	bne lbl_801B3B94
/* 801B3B90 001B08D0  60 A5 00 01 */	ori r5, r5, 0x1
lbl_801B3B94:
/* 801B3B94 001B08D4  54 80 00 42 */	rlwinm r0, r4, 0, 1, 1
/* 801B3B98 001B08D8  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3B9C 001B08DC  40 82 00 08 */	bne lbl_801B3BA4
/* 801B3BA0 001B08E0  60 A5 00 02 */	ori r5, r5, 0x2
lbl_801B3BA4:
/* 801B3BA4 001B08E4  54 80 00 84 */	rlwinm r0, r4, 0, 2, 2
/* 801B3BA8 001B08E8  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3BAC 001B08EC  40 82 00 08 */	bne lbl_801B3BB4
/* 801B3BB0 001B08F0  60 A5 00 04 */	ori r5, r5, 0x4
lbl_801B3BB4:
/* 801B3BB4 001B08F4  54 80 00 C6 */	rlwinm r0, r4, 0, 3, 3
/* 801B3BB8 001B08F8  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3BBC 001B08FC  40 82 00 08 */	bne lbl_801B3BC4
/* 801B3BC0 001B0900  60 A5 00 08 */	ori r5, r5, 0x8
lbl_801B3BC4:
/* 801B3BC4 001B0904  54 80 01 08 */	rlwinm r0, r4, 0, 4, 4
/* 801B3BC8 001B0908  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3BCC 001B090C  40 82 00 08 */	bne lbl_801B3BD4
/* 801B3BD0 001B0910  60 A5 00 10 */	ori r5, r5, 0x10
lbl_801B3BD4:
/* 801B3BD4 001B0914  3C 80 CC 00 */	lis r4, 0xCC004000@ha
/* 801B3BD8 001B0918  54 A0 04 3E */	clrlwi r0, r5, 16
/* 801B3BDC 001B091C  38 84 40 00 */	addi r4, r4, 0xCC004000@l
/* 801B3BE0 001B0920  B0 04 00 1C */	sth r0, 0x1c(r4)
/* 801B3BE4 001B0924  54 63 01 7E */	clrlwi r3, r3, 5
/* 801B3BE8 001B0928  48 00 02 20 */	b func_801B3E08
lbl_801B3BEC:
/* 801B3BEC 001B092C  3C A0 CC 00 */	lis r5, 0xCC005000@ha
/* 801B3BF0 001B0930  38 A5 50 00 */	addi r5, r5, 0xCC005000@l
/* 801B3BF4 001B0934  38 A5 00 0A */	addi r5, r5, 0xa
/* 801B3BF8 001B0938  54 80 01 4A */	rlwinm r0, r4, 0, 5, 5
/* 801B3BFC 001B093C  A0 C5 00 00 */	lhz r6, 0x0(r5)
/* 801B3C00 001B0940  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3C04 001B0944  54 C6 07 6C */	rlwinm r6, r6, 0, 29, 22
/* 801B3C08 001B0948  40 82 00 08 */	bne lbl_801B3C10
/* 801B3C0C 001B094C  60 C6 00 10 */	ori r6, r6, 0x10
lbl_801B3C10:
/* 801B3C10 001B0950  54 80 01 8C */	rlwinm r0, r4, 0, 6, 6
/* 801B3C14 001B0954  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3C18 001B0958  40 82 00 08 */	bne lbl_801B3C20
/* 801B3C1C 001B095C  60 C6 00 40 */	ori r6, r6, 0x40
lbl_801B3C20:
/* 801B3C20 001B0960  54 80 01 CE */	rlwinm r0, r4, 0, 7, 7
/* 801B3C24 001B0964  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3C28 001B0968  40 82 00 08 */	bne lbl_801B3C30
/* 801B3C2C 001B096C  60 C6 01 00 */	ori r6, r6, 0x100
lbl_801B3C30:
/* 801B3C30 001B0970  54 C0 04 3E */	clrlwi r0, r6, 16
/* 801B3C34 001B0974  B0 05 00 00 */	sth r0, 0x0(r5)
/* 801B3C38 001B0978  54 63 02 08 */	rlwinm r3, r3, 0, 8, 4
/* 801B3C3C 001B097C  48 00 01 CC */	b func_801B3E08
lbl_801B3C40:
/* 801B3C40 001B0980  54 80 02 10 */	rlwinm r0, r4, 0, 8, 8
/* 801B3C44 001B0984  3C 80 CC 00 */	lis r4, 0xCC006C00@ha
/* 801B3C48 001B0988  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3C4C 001B098C  80 A4 6C 00 */	lwz r5, 0xCC006C00@l(r4)
/* 801B3C50 001B0990  38 00 FF D3 */	li r0, -0x2d
/* 801B3C54 001B0994  7C A5 00 38 */	and r5, r5, r0
/* 801B3C58 001B0998  40 82 00 08 */	bne lbl_801B3C60
/* 801B3C5C 001B099C  60 A5 00 04 */	ori r5, r5, 0x4
lbl_801B3C60:
/* 801B3C60 001B09A0  3C 80 CC 00 */	lis r4, 0xCC006C00@ha
/* 801B3C64 001B09A4  90 A4 6C 00 */	stw r5, 0xCC006C00@l(r4)
/* 801B3C68 001B09A8  54 63 02 4E */	rlwinm r3, r3, 0, 9, 7
/* 801B3C6C 001B09AC  48 00 01 9C */	b func_801B3E08
lbl_801B3C70:
/* 801B3C70 001B09B0  54 80 02 52 */	rlwinm r0, r4, 0, 9, 9
/* 801B3C74 001B09B4  3C A0 CC 00 */	lis r5, 0xCC006800@ha
/* 801B3C78 001B09B8  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3C7C 001B09BC  80 A5 68 00 */	lwz r5, 0xCC006800@l(r5)
/* 801B3C80 001B09C0  38 00 D3 F0 */	li r0, -0x2c10
/* 801B3C84 001B09C4  7C A5 00 38 */	and r5, r5, r0
/* 801B3C88 001B09C8  40 82 00 08 */	bne lbl_801B3C90
/* 801B3C8C 001B09CC  60 A5 00 01 */	ori r5, r5, 0x1
lbl_801B3C90:
/* 801B3C90 001B09D0  54 80 02 94 */	rlwinm r0, r4, 0, 10, 10
/* 801B3C94 001B09D4  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3C98 001B09D8  40 82 00 08 */	bne lbl_801B3CA0
/* 801B3C9C 001B09DC  60 A5 00 04 */	ori r5, r5, 0x4
lbl_801B3CA0:
/* 801B3CA0 001B09E0  54 80 02 D6 */	rlwinm r0, r4, 0, 11, 11
/* 801B3CA4 001B09E4  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3CA8 001B09E8  40 82 00 08 */	bne lbl_801B3CB0
/* 801B3CAC 001B09EC  60 A5 04 00 */	ori r5, r5, 0x400
lbl_801B3CB0:
/* 801B3CB0 001B09F0  3C 80 CC 00 */	lis r4, 0xCC006800@ha
/* 801B3CB4 001B09F4  90 A4 68 00 */	stw r5, 0xCC006800@l(r4)
/* 801B3CB8 001B09F8  54 63 03 10 */	rlwinm r3, r3, 0, 12, 8
/* 801B3CBC 001B09FC  48 00 01 4C */	b func_801B3E08

.global func_801B3CC0
func_801B3CC0:
/* 801B3CC0 001B0A00  3C A0 CC 00 */	lis r5, 0xCC006800@ha
/* 801B3CC4 001B0A04  38 C5 68 00 */	addi r6, r5, 0xCC006800@l
/* 801B3CC8 001B0A08  38 C6 00 14 */	addi r6, r6, 0x14
/* 801B3CCC 001B0A0C  54 80 03 18 */	rlwinm r0, r4, 0, 12, 12
/* 801B3CD0 001B0A10  80 E6 00 00 */	lwz r7, 0x0(r6)
/* 801B3CD4 001B0A14  38 A0 F3 F0 */	li r5, -0xc10
/* 801B3CD8 001B0A18  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3CDC 001B0A1C  7C E7 28 38 */	and r7, r7, r5
/* 801B3CE0 001B0A20  40 82 00 08 */	bne lbl_801B3CE8
/* 801B3CE4 001B0A24  60 E7 00 01 */	ori r7, r7, 0x1
lbl_801B3CE8:
/* 801B3CE8 001B0A28  54 80 03 5A */	rlwinm r0, r4, 0, 13, 13
/* 801B3CEC 001B0A2C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3CF0 001B0A30  40 82 00 08 */	bne lbl_801B3CF8
/* 801B3CF4 001B0A34  60 E7 00 04 */	ori r7, r7, 0x4
lbl_801B3CF8:
/* 801B3CF8 001B0A38  54 80 03 9C */	rlwinm r0, r4, 0, 14, 14
/* 801B3CFC 001B0A3C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3D00 001B0A40  40 82 00 08 */	bne lbl_801B3D08
/* 801B3D04 001B0A44  60 E7 04 00 */	ori r7, r7, 0x400
lbl_801B3D08:
/* 801B3D08 001B0A48  90 E6 00 00 */	stw r7, 0x0(r6)
/* 801B3D0C 001B0A4C  54 63 03 D6 */	rlwinm r3, r3, 0, 15, 11
/* 801B3D10 001B0A50  48 00 00 F8 */	b func_801B3E08
lbl_801B3D14:
/* 801B3D14 001B0A54  3C A0 CC 00 */	lis r5, 0xCC006800@ha
/* 801B3D18 001B0A58  38 A5 68 00 */	addi r5, r5, 0xCC006800@l
/* 801B3D1C 001B0A5C  38 A5 00 28 */	addi r5, r5, 0x28
/* 801B3D20 001B0A60  54 80 03 DE */	rlwinm r0, r4, 0, 15, 15
/* 801B3D24 001B0A64  80 C5 00 00 */	lwz r6, 0x0(r5)
/* 801B3D28 001B0A68  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3D2C 001B0A6C  54 C6 00 36 */	rlwinm r6, r6, 0, 0, 27
/* 801B3D30 001B0A70  40 82 00 08 */	bne lbl_801B3D38
/* 801B3D34 001B0A74  60 C6 00 01 */	ori r6, r6, 0x1
lbl_801B3D38:
/* 801B3D38 001B0A78  54 80 04 20 */	rlwinm r0, r4, 0, 16, 16
/* 801B3D3C 001B0A7C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3D40 001B0A80  40 82 00 08 */	bne lbl_801B3D48
/* 801B3D44 001B0A84  60 C6 00 04 */	ori r6, r6, 0x4
lbl_801B3D48:
/* 801B3D48 001B0A88  90 C5 00 00 */	stw r6, 0x0(r5)
/* 801B3D4C 001B0A8C  54 63 04 5C */	rlwinm r3, r3, 0, 17, 14
/* 801B3D50 001B0A90  48 00 00 B8 */	b func_801B3E08

.global func_801B3D54
func_801B3D54:
/* 801B3D54 001B0A94  54 80 04 62 */	rlwinm r0, r4, 0, 17, 17
/* 801B3D58 001B0A98  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3D5C 001B0A9C  38 A0 00 F0 */	li r5, 0xf0
/* 801B3D60 001B0AA0  40 82 00 08 */	bne lbl_801B3D68
/* 801B3D64 001B0AA4  60 A5 08 00 */	ori r5, r5, 0x800
lbl_801B3D68:
/* 801B3D68 001B0AA8  54 80 05 28 */	rlwinm r0, r4, 0, 20, 20
/* 801B3D6C 001B0AAC  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3D70 001B0AB0  40 82 00 08 */	bne lbl_801B3D78
/* 801B3D74 001B0AB4  60 A5 00 08 */	ori r5, r5, 0x8
lbl_801B3D78:
/* 801B3D78 001B0AB8  54 80 05 6A */	rlwinm r0, r4, 0, 21, 21
/* 801B3D7C 001B0ABC  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3D80 001B0AC0  40 82 00 08 */	bne lbl_801B3D88
/* 801B3D84 001B0AC4  60 A5 00 04 */	ori r5, r5, 0x4
lbl_801B3D88:
/* 801B3D88 001B0AC8  54 80 05 AC */	rlwinm r0, r4, 0, 22, 22
/* 801B3D8C 001B0ACC  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3D90 001B0AD0  40 82 00 08 */	bne lbl_801B3D98
/* 801B3D94 001B0AD4  60 A5 00 02 */	ori r5, r5, 0x2
lbl_801B3D98:
/* 801B3D98 001B0AD8  54 80 05 EE */	rlwinm r0, r4, 0, 23, 23
/* 801B3D9C 001B0ADC  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3DA0 001B0AE0  40 82 00 08 */	bne lbl_801B3DA8
/* 801B3DA4 001B0AE4  60 A5 00 01 */	ori r5, r5, 0x1
lbl_801B3DA8:
/* 801B3DA8 001B0AE8  54 80 06 30 */	rlwinm r0, r4, 0, 24, 24
/* 801B3DAC 001B0AEC  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3DB0 001B0AF0  40 82 00 08 */	bne lbl_801B3DB8
/* 801B3DB4 001B0AF4  60 A5 01 00 */	ori r5, r5, 0x100
lbl_801B3DB8:
/* 801B3DB8 001B0AF8  54 80 06 72 */	rlwinm r0, r4, 0, 25, 25
/* 801B3DBC 001B0AFC  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3DC0 001B0B00  40 82 00 08 */	bne lbl_801B3DC8
/* 801B3DC4 001B0B04  60 A5 10 00 */	ori r5, r5, 0x1000
lbl_801B3DC8:
/* 801B3DC8 001B0B08  54 80 04 A4 */	rlwinm r0, r4, 0, 18, 18
/* 801B3DCC 001B0B0C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3DD0 001B0B10  40 82 00 08 */	bne lbl_801B3DD8
/* 801B3DD4 001B0B14  60 A5 02 00 */	ori r5, r5, 0x200
lbl_801B3DD8:
/* 801B3DD8 001B0B18  54 80 04 E6 */	rlwinm r0, r4, 0, 19, 19
/* 801B3DDC 001B0B1C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3DE0 001B0B20  40 82 00 08 */	bne lbl_801B3DE8
/* 801B3DE4 001B0B24  60 A5 04 00 */	ori r5, r5, 0x400
lbl_801B3DE8:
/* 801B3DE8 001B0B28  54 80 06 B4 */	rlwinm r0, r4, 0, 26, 26
/* 801B3DEC 001B0B2C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3DF0 001B0B30  40 82 00 08 */	bne lbl_801B3DF8
/* 801B3DF4 001B0B34  60 A5 20 00 */	ori r5, r5, 0x2000
lbl_801B3DF8:
/* 801B3DF8 001B0B38  3C 80 CC 00 */	lis r4, 0xCC003000@ha
/* 801B3DFC 001B0B3C  38 84 30 00 */	addi r4, r4, 0xCC003000@l
/* 801B3E00 001B0B40  90 A4 00 04 */	stw r5, 0x4(r4)
/* 801B3E04 001B0B44  54 63 06 E0 */	rlwinm r3, r3, 0, 27, 16

.global func_801B3E08
func_801B3E08:
/* 801B3E08 001B0B48  4E 80 00 20 */	blr

.global __OSMaskInterrupts
__OSMaskInterrupts:
/* 801B3E0C 001B0B4C  7C 08 02 A6 */	mflr r0
/* 801B3E10 001B0B50  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B3E14 001B0B54  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801B3E18 001B0B58  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801B3E1C 001B0B5C  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801B3E20 001B0B60  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801B3E24 001B0B64  7C 7F 1B 78 */	mr r31, r3
/* 801B3E28 001B0B68  4B FF FC 1D */	bl OSDisableInterrupts
/* 801B3E2C 001B0B6C  3C 80 80 00 */	lis r4, 0x800000C4@ha
/* 801B3E30 001B0B70  83 A4 00 C4 */	lwz r29, 0x800000C4@l(r4)
/* 801B3E34 001B0B74  7C 7E 1B 78 */	mr r30, r3
/* 801B3E38 001B0B78  80 A4 00 C8 */	lwz r5, 0xc8(r4)
/* 801B3E3C 001B0B7C  7F A0 2B 78 */	or r0, r29, r5
/* 801B3E40 001B0B80  7F E3 00 78 */	andc r3, r31, r0
/* 801B3E44 001B0B84  7F FF EB 78 */	or r31, r31, r29
/* 801B3E48 001B0B88  93 E4 00 C4 */	stw r31, 0xc4(r4)
/* 801B3E4C 001B0B8C  7F FF 2B 78 */	or r31, r31, r5
/* 801B3E50 001B0B90  48 00 00 04 */	b func_801B3E54

.global func_801B3E54
func_801B3E54:
/* 801B3E54 001B0B94  48 00 00 04 */	b func_801B3E58

.global func_801B3E58
func_801B3E58:
/* 801B3E58 001B0B98  48 00 00 0C */	b func_801B3E64
lbl_801B3E5C:
/* 801B3E5C 001B0B9C  7F E4 FB 78 */	mr r4, r31
/* 801B3E60 001B0BA0  4B FF FC D5 */	bl SetInterruptMask

.global func_801B3E64
func_801B3E64:
/* 801B3E64 001B0BA4  28 03 00 00 */	cmplwi r3, 0x0
/* 801B3E68 001B0BA8  40 82 FF F4 */	bne lbl_801B3E5C
/* 801B3E6C 001B0BAC  7F C3 F3 78 */	mr r3, r30
/* 801B3E70 001B0BB0  4B FF FB FD */	bl OSRestoreInterrupts
/* 801B3E74 001B0BB4  7F A3 EB 78 */	mr r3, r29
/* 801B3E78 001B0BB8  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801B3E7C 001B0BBC  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801B3E80 001B0BC0  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801B3E84 001B0BC4  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801B3E88 001B0BC8  38 21 00 20 */	addi r1, r1, 0x20
/* 801B3E8C 001B0BCC  7C 08 03 A6 */	mtlr r0
/* 801B3E90 001B0BD0  4E 80 00 20 */	blr

.global __OSUnmaskInterrupts
__OSUnmaskInterrupts:
/* 801B3E94 001B0BD4  7C 08 02 A6 */	mflr r0
/* 801B3E98 001B0BD8  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B3E9C 001B0BDC  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801B3EA0 001B0BE0  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801B3EA4 001B0BE4  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801B3EA8 001B0BE8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801B3EAC 001B0BEC  7C 7F 1B 78 */	mr r31, r3
/* 801B3EB0 001B0BF0  4B FF FB 95 */	bl OSDisableInterrupts
/* 801B3EB4 001B0BF4  3C 80 80 00 */	lis r4, 0x800000C4@ha
/* 801B3EB8 001B0BF8  83 A4 00 C4 */	lwz r29, 0x800000C4@l(r4)
/* 801B3EBC 001B0BFC  7C 7E 1B 78 */	mr r30, r3
/* 801B3EC0 001B0C00  80 A4 00 C8 */	lwz r5, 0xc8(r4)
/* 801B3EC4 001B0C04  7F A0 2B 78 */	or r0, r29, r5
/* 801B3EC8 001B0C08  7F E3 00 38 */	and r3, r31, r0
/* 801B3ECC 001B0C0C  7F BF F8 78 */	andc r31, r29, r31
/* 801B3ED0 001B0C10  93 E4 00 C4 */	stw r31, 0xc4(r4)
/* 801B3ED4 001B0C14  7F FF 2B 78 */	or r31, r31, r5
/* 801B3ED8 001B0C18  48 00 00 04 */	b func_801B3EDC

.global func_801B3EDC
func_801B3EDC:
/* 801B3EDC 001B0C1C  48 00 00 04 */	b func_801B3EE0

.global func_801B3EE0
func_801B3EE0:
/* 801B3EE0 001B0C20  48 00 00 0C */	b func_801B3EEC
lbl_801B3EE4:
/* 801B3EE4 001B0C24  7F E4 FB 78 */	mr r4, r31
/* 801B3EE8 001B0C28  4B FF FC 4D */	bl SetInterruptMask

.global func_801B3EEC
func_801B3EEC:
/* 801B3EEC 001B0C2C  28 03 00 00 */	cmplwi r3, 0x0
/* 801B3EF0 001B0C30  40 82 FF F4 */	bne lbl_801B3EE4
/* 801B3EF4 001B0C34  7F C3 F3 78 */	mr r3, r30
/* 801B3EF8 001B0C38  4B FF FB 75 */	bl OSRestoreInterrupts
/* 801B3EFC 001B0C3C  7F A3 EB 78 */	mr r3, r29
/* 801B3F00 001B0C40  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801B3F04 001B0C44  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801B3F08 001B0C48  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801B3F0C 001B0C4C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801B3F10 001B0C50  38 21 00 20 */	addi r1, r1, 0x20
/* 801B3F14 001B0C54  7C 08 03 A6 */	mtlr r0
/* 801B3F18 001B0C58  4E 80 00 20 */	blr

.global __OSDispatchInterrupt
__OSDispatchInterrupt:
/* 801B3F1C 001B0C5C  7C 08 02 A6 */	mflr r0
/* 801B3F20 001B0C60  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B3F24 001B0C64  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801B3F28 001B0C68  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801B3F2C 001B0C6C  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801B3F30 001B0C70  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801B3F34 001B0C74  7C 9E 23 78 */	mr r30, r4
/* 801B3F38 001B0C78  3C 60 CC 00 */	lis r3, 0xCC003000@ha
/* 801B3F3C 001B0C7C  83 E3 30 00 */	lwz r31, 0xCC003000@l(r3)
/* 801B3F40 001B0C80  57 FF 04 1C */	rlwinm r31, r31, 0, 16, 14
/* 801B3F44 001B0C84  28 1F 00 00 */	cmplwi r31, 0x0
/* 801B3F48 001B0C88  41 82 00 18 */	beq lbl_801B3F60
/* 801B3F4C 001B0C8C  38 63 30 00 */	addi r3, r3, 0x3000
/* 801B3F50 001B0C90  80 03 00 04 */	lwz r0, 0x4(r3)
/* 801B3F54 001B0C94  7F E0 00 38 */	and r0, r31, r0
/* 801B3F58 001B0C98  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3F5C 001B0C9C  40 82 00 0C */	bne lbl_801B3F68
lbl_801B3F60:
/* 801B3F60 001B0CA0  7F C3 F3 78 */	mr r3, r30
/* 801B3F64 001B0CA4  4B FF EE A9 */	bl OSLoadContext
lbl_801B3F68:
/* 801B3F68 001B0CA8  57 E0 06 30 */	rlwinm r0, r31, 0, 24, 24
/* 801B3F6C 001B0CAC  28 00 00 00 */	cmplwi r0, 0x0
/* 801B3F70 001B0CB0  38 00 00 00 */	li r0, 0x0
/* 801B3F74 001B0CB4  41 82 00 60 */	beq lbl_801B3FD4
/* 801B3F78 001B0CB8  3C 60 CC 00 */	lis r3, 0xCC004000@ha
/* 801B3F7C 001B0CBC  38 63 40 00 */	addi r3, r3, 0xCC004000@l
/* 801B3F80 001B0CC0  A0 83 00 1E */	lhz r4, 0x1e(r3)
/* 801B3F84 001B0CC4  54 83 07 FE */	clrlwi r3, r4, 31
/* 801B3F88 001B0CC8  28 03 00 00 */	cmplwi r3, 0x0
/* 801B3F8C 001B0CCC  41 82 00 08 */	beq lbl_801B3F94
/* 801B3F90 001B0CD0  64 00 80 00 */	oris r0, r0, 0x8000
lbl_801B3F94:
/* 801B3F94 001B0CD4  54 83 07 BC */	rlwinm r3, r4, 0, 30, 30
/* 801B3F98 001B0CD8  28 03 00 00 */	cmplwi r3, 0x0
/* 801B3F9C 001B0CDC  41 82 00 08 */	beq lbl_801B3FA4
/* 801B3FA0 001B0CE0  64 00 40 00 */	oris r0, r0, 0x4000
lbl_801B3FA4:
/* 801B3FA4 001B0CE4  54 83 07 7A */	rlwinm r3, r4, 0, 29, 29
/* 801B3FA8 001B0CE8  28 03 00 00 */	cmplwi r3, 0x0
/* 801B3FAC 001B0CEC  41 82 00 08 */	beq lbl_801B3FB4
/* 801B3FB0 001B0CF0  64 00 20 00 */	oris r0, r0, 0x2000
lbl_801B3FB4:
/* 801B3FB4 001B0CF4  54 83 07 38 */	rlwinm r3, r4, 0, 28, 28
/* 801B3FB8 001B0CF8  28 03 00 00 */	cmplwi r3, 0x0
/* 801B3FBC 001B0CFC  41 82 00 08 */	beq lbl_801B3FC4
/* 801B3FC0 001B0D00  64 00 10 00 */	oris r0, r0, 0x1000
lbl_801B3FC4:
/* 801B3FC4 001B0D04  54 83 06 F6 */	rlwinm r3, r4, 0, 27, 27
/* 801B3FC8 001B0D08  28 03 00 00 */	cmplwi r3, 0x0
/* 801B3FCC 001B0D0C  41 82 00 08 */	beq lbl_801B3FD4
/* 801B3FD0 001B0D10  64 00 08 00 */	oris r0, r0, 0x800
lbl_801B3FD4:
/* 801B3FD4 001B0D14  57 E3 06 72 */	rlwinm r3, r31, 0, 25, 25
/* 801B3FD8 001B0D18  28 03 00 00 */	cmplwi r3, 0x0
/* 801B3FDC 001B0D1C  41 82 00 40 */	beq lbl_801B401C
/* 801B3FE0 001B0D20  3C 60 CC 00 */	lis r3, 0xCC005000@ha
/* 801B3FE4 001B0D24  38 63 50 00 */	addi r3, r3, 0xCC005000@l
/* 801B3FE8 001B0D28  A0 83 00 0A */	lhz r4, 0xa(r3)
/* 801B3FEC 001B0D2C  54 83 07 38 */	rlwinm r3, r4, 0, 28, 28
/* 801B3FF0 001B0D30  28 03 00 00 */	cmplwi r3, 0x0
/* 801B3FF4 001B0D34  41 82 00 08 */	beq lbl_801B3FFC
/* 801B3FF8 001B0D38  64 00 04 00 */	oris r0, r0, 0x400
lbl_801B3FFC:
/* 801B3FFC 001B0D3C  54 83 06 B4 */	rlwinm r3, r4, 0, 26, 26
/* 801B4000 001B0D40  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4004 001B0D44  41 82 00 08 */	beq lbl_801B400C
/* 801B4008 001B0D48  64 00 02 00 */	oris r0, r0, 0x200
lbl_801B400C:
/* 801B400C 001B0D4C  54 83 06 30 */	rlwinm r3, r4, 0, 24, 24
/* 801B4010 001B0D50  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4014 001B0D54  41 82 00 08 */	beq lbl_801B401C
/* 801B4018 001B0D58  64 00 01 00 */	oris r0, r0, 0x100
lbl_801B401C:
/* 801B401C 001B0D5C  57 E3 06 B4 */	rlwinm r3, r31, 0, 26, 26
/* 801B4020 001B0D60  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4024 001B0D64  41 82 00 1C */	beq lbl_801B4040
/* 801B4028 001B0D68  3C 60 CC 00 */	lis r3, 0xCC006C00@ha
/* 801B402C 001B0D6C  80 63 6C 00 */	lwz r3, 0xCC006C00@l(r3)
/* 801B4030 001B0D70  54 63 07 38 */	rlwinm r3, r3, 0, 28, 28
/* 801B4034 001B0D74  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4038 001B0D78  41 82 00 08 */	beq lbl_801B4040
/* 801B403C 001B0D7C  64 00 00 80 */	oris r0, r0, 0x80
lbl_801B4040:
/* 801B4040 001B0D80  57 E3 06 F6 */	rlwinm r3, r31, 0, 27, 27
/* 801B4044 001B0D84  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4048 001B0D88  41 82 00 A4 */	beq lbl_801B40EC
/* 801B404C 001B0D8C  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 801B4050 001B0D90  80 83 68 00 */	lwz r4, 0xCC006800@l(r3)
/* 801B4054 001B0D94  54 83 07 BC */	rlwinm r3, r4, 0, 30, 30
/* 801B4058 001B0D98  28 03 00 00 */	cmplwi r3, 0x0
/* 801B405C 001B0D9C  41 82 00 08 */	beq lbl_801B4064
/* 801B4060 001B0DA0  64 00 00 40 */	oris r0, r0, 0x40
lbl_801B4064:
/* 801B4064 001B0DA4  54 83 07 38 */	rlwinm r3, r4, 0, 28, 28
/* 801B4068 001B0DA8  28 03 00 00 */	cmplwi r3, 0x0
/* 801B406C 001B0DAC  41 82 00 08 */	beq lbl_801B4074
/* 801B4070 001B0DB0  64 00 00 20 */	oris r0, r0, 0x20
lbl_801B4074:
/* 801B4074 001B0DB4  54 83 05 28 */	rlwinm r3, r4, 0, 20, 20
/* 801B4078 001B0DB8  28 03 00 00 */	cmplwi r3, 0x0
/* 801B407C 001B0DBC  41 82 00 08 */	beq lbl_801B4084
/* 801B4080 001B0DC0  64 00 00 10 */	oris r0, r0, 0x10
lbl_801B4084:
/* 801B4084 001B0DC4  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 801B4088 001B0DC8  38 63 68 00 */	addi r3, r3, 0xCC006800@l
/* 801B408C 001B0DCC  80 83 00 14 */	lwz r4, 0x14(r3)
/* 801B4090 001B0DD0  54 83 07 BC */	rlwinm r3, r4, 0, 30, 30
/* 801B4094 001B0DD4  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4098 001B0DD8  41 82 00 08 */	beq lbl_801B40A0
/* 801B409C 001B0DDC  64 00 00 08 */	oris r0, r0, 0x8
lbl_801B40A0:
/* 801B40A0 001B0DE0  54 83 07 38 */	rlwinm r3, r4, 0, 28, 28
/* 801B40A4 001B0DE4  28 03 00 00 */	cmplwi r3, 0x0
/* 801B40A8 001B0DE8  41 82 00 08 */	beq lbl_801B40B0
/* 801B40AC 001B0DEC  64 00 00 04 */	oris r0, r0, 0x4
lbl_801B40B0:
/* 801B40B0 001B0DF0  54 83 05 28 */	rlwinm r3, r4, 0, 20, 20
/* 801B40B4 001B0DF4  28 03 00 00 */	cmplwi r3, 0x0
/* 801B40B8 001B0DF8  41 82 00 08 */	beq lbl_801B40C0
/* 801B40BC 001B0DFC  64 00 00 02 */	oris r0, r0, 0x2
lbl_801B40C0:
/* 801B40C0 001B0E00  3C 60 CC 00 */	lis r3, 0xCC006800@ha
/* 801B40C4 001B0E04  38 63 68 00 */	addi r3, r3, 0xCC006800@l
/* 801B40C8 001B0E08  80 83 00 28 */	lwz r4, 0x28(r3)
/* 801B40CC 001B0E0C  54 83 07 BC */	rlwinm r3, r4, 0, 30, 30
/* 801B40D0 001B0E10  28 03 00 00 */	cmplwi r3, 0x0
/* 801B40D4 001B0E14  41 82 00 08 */	beq lbl_801B40DC
/* 801B40D8 001B0E18  64 00 00 01 */	oris r0, r0, 0x1
lbl_801B40DC:
/* 801B40DC 001B0E1C  54 83 07 38 */	rlwinm r3, r4, 0, 28, 28
/* 801B40E0 001B0E20  28 03 00 00 */	cmplwi r3, 0x0
/* 801B40E4 001B0E24  41 82 00 08 */	beq lbl_801B40EC
/* 801B40E8 001B0E28  60 00 80 00 */	ori r0, r0, 0x8000
lbl_801B40EC:
/* 801B40EC 001B0E2C  57 E3 04 A4 */	rlwinm r3, r31, 0, 18, 18
/* 801B40F0 001B0E30  28 03 00 00 */	cmplwi r3, 0x0
/* 801B40F4 001B0E34  41 82 00 08 */	beq lbl_801B40FC
/* 801B40F8 001B0E38  60 00 00 20 */	ori r0, r0, 0x20
lbl_801B40FC:
/* 801B40FC 001B0E3C  57 E3 04 E6 */	rlwinm r3, r31, 0, 19, 19
/* 801B4100 001B0E40  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4104 001B0E44  41 82 00 08 */	beq lbl_801B410C
/* 801B4108 001B0E48  60 00 00 40 */	ori r0, r0, 0x40
lbl_801B410C:
/* 801B410C 001B0E4C  57 E3 05 6A */	rlwinm r3, r31, 0, 21, 21
/* 801B4110 001B0E50  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4114 001B0E54  41 82 00 08 */	beq lbl_801B411C
/* 801B4118 001B0E58  60 00 10 00 */	ori r0, r0, 0x1000
lbl_801B411C:
/* 801B411C 001B0E5C  57 E3 05 AC */	rlwinm r3, r31, 0, 22, 22
/* 801B4120 001B0E60  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4124 001B0E64  41 82 00 08 */	beq lbl_801B412C
/* 801B4128 001B0E68  60 00 20 00 */	ori r0, r0, 0x2000
lbl_801B412C:
/* 801B412C 001B0E6C  57 E3 05 EE */	rlwinm r3, r31, 0, 23, 23
/* 801B4130 001B0E70  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4134 001B0E74  41 82 00 08 */	beq lbl_801B413C
/* 801B4138 001B0E78  60 00 00 80 */	ori r0, r0, 0x80
lbl_801B413C:
/* 801B413C 001B0E7C  57 E3 07 38 */	rlwinm r3, r31, 0, 28, 28
/* 801B4140 001B0E80  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4144 001B0E84  41 82 00 08 */	beq lbl_801B414C
/* 801B4148 001B0E88  60 00 08 00 */	ori r0, r0, 0x800
lbl_801B414C:
/* 801B414C 001B0E8C  57 E3 07 7A */	rlwinm r3, r31, 0, 29, 29
/* 801B4150 001B0E90  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4154 001B0E94  41 82 00 08 */	beq lbl_801B415C
/* 801B4158 001B0E98  60 00 04 00 */	ori r0, r0, 0x400
lbl_801B415C:
/* 801B415C 001B0E9C  57 E3 07 BC */	rlwinm r3, r31, 0, 30, 30
/* 801B4160 001B0EA0  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4164 001B0EA4  41 82 00 08 */	beq lbl_801B416C
/* 801B4168 001B0EA8  60 00 02 00 */	ori r0, r0, 0x200
lbl_801B416C:
/* 801B416C 001B0EAC  57 E3 05 28 */	rlwinm r3, r31, 0, 20, 20
/* 801B4170 001B0EB0  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4174 001B0EB4  41 82 00 08 */	beq lbl_801B417C
/* 801B4178 001B0EB8  60 00 40 00 */	ori r0, r0, 0x4000
lbl_801B417C:
/* 801B417C 001B0EBC  57 E3 07 FE */	clrlwi r3, r31, 31
/* 801B4180 001B0EC0  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4184 001B0EC4  41 82 00 08 */	beq lbl_801B418C
/* 801B4188 001B0EC8  60 00 01 00 */	ori r0, r0, 0x100
lbl_801B418C:
/* 801B418C 001B0ECC  3C 60 80 00 */	lis r3, 0x800000C4@ha
/* 801B4190 001B0ED0  80 83 00 C4 */	lwz r4, 0x800000C4@l(r3)
/* 801B4194 001B0ED4  80 63 00 C8 */	lwz r3, 0xc8(r3)
/* 801B4198 001B0ED8  7C 83 1B 78 */	or r3, r4, r3
/* 801B419C 001B0EDC  7C 04 18 78 */	andc r4, r0, r3
/* 801B41A0 001B0EE0  28 04 00 00 */	cmplwi r4, 0x0
/* 801B41A4 001B0EE4  41 82 00 98 */	beq lbl_801B423C
/* 801B41A8 001B0EE8  3C 60 80 2E */	lis r3, InterruptPrioTable@ha
/* 801B41AC 001B0EEC  38 03 09 D0 */	addi r0, r3, InterruptPrioTable@l
/* 801B41B0 001B0EF0  7C 03 03 78 */	mr r3, r0
/* 801B41B4 001B0EF4  48 00 00 04 */	b func_801B41B8

.global func_801B41B8
func_801B41B8:
/* 801B41B8 001B0EF8  48 00 00 04 */	b func_801B41BC

.global func_801B41BC
func_801B41BC:
/* 801B41BC 001B0EFC  80 03 00 00 */	lwz r0, 0x0(r3)
/* 801B41C0 001B0F00  7C 80 00 38 */	and r0, r4, r0
/* 801B41C4 001B0F04  28 00 00 00 */	cmplwi r0, 0x0
/* 801B41C8 001B0F08  41 82 00 10 */	beq lbl_801B41D8
/* 801B41CC 001B0F0C  7C 00 00 34 */	cntlzw r0, r0
/* 801B41D0 001B0F10  7C 1D 07 34 */	extsh r29, r0
/* 801B41D4 001B0F14  48 00 00 0C */	b func_801B41E0
lbl_801B41D8:
/* 801B41D8 001B0F18  38 63 00 04 */	addi r3, r3, 0x4
/* 801B41DC 001B0F1C  4B FF FF E0 */	b func_801B41BC

.global func_801B41E0
func_801B41E0:
/* 801B41E0 001B0F20  80 6D AC 60 */	lwz r3, InterruptHandlerTable@sda21(r13)
/* 801B41E4 001B0F24  57 A0 10 3A */	slwi r0, r29, 2
/* 801B41E8 001B0F28  7F E3 00 2E */	lwzx r31, r3, r0
/* 801B41EC 001B0F2C  28 1F 00 00 */	cmplwi r31, 0x0
/* 801B41F0 001B0F30  41 82 00 4C */	beq lbl_801B423C
/* 801B41F4 001B0F34  2C 1D 00 04 */	cmpwi r29, 0x4
/* 801B41F8 001B0F38  40 81 00 1C */	ble lbl_801B4214
/* 801B41FC 001B0F3C  B3 AD AC 68 */	sth r29, _OSLastInterrupt@sda21(r13)
/* 801B4200 001B0F40  48 00 39 F1 */	bl OSGetTime
/* 801B4204 001B0F44  90 8D AC 74 */	stw r4, lbl_80349634@sda21(r13)
/* 801B4208 001B0F48  90 6D AC 70 */	stw r3, _OSLastInterruptTime@sda21(r13)
/* 801B420C 001B0F4C  80 1E 01 98 */	lwz r0, 0x198(r30)
/* 801B4210 001B0F50  90 0D AC 64 */	stw r0, _OSLastInterruptSrr0@sda21(r13)
lbl_801B4214:
/* 801B4214 001B0F54  48 00 29 85 */	bl OSDisableScheduler
/* 801B4218 001B0F58  7F A3 EB 78 */	mr r3, r29
/* 801B421C 001B0F5C  7F C4 F3 78 */	mr r4, r30
/* 801B4220 001B0F60  7F EC FB 78 */	mr r12, r31
/* 801B4224 001B0F64  7D 88 03 A6 */	mtlr r12
/* 801B4228 001B0F68  4E 80 00 21 */	blrl
/* 801B422C 001B0F6C  48 00 29 AD */	bl OSEnableScheduler
/* 801B4230 001B0F70  48 00 2E 75 */	bl __OSReschedule
/* 801B4234 001B0F74  7F C3 F3 78 */	mr r3, r30
/* 801B4238 001B0F78  4B FF EB D5 */	bl OSLoadContext
lbl_801B423C:
/* 801B423C 001B0F7C  7F C3 F3 78 */	mr r3, r30
/* 801B4240 001B0F80  4B FF EB CD */	bl OSLoadContext
/* 801B4244 001B0F84  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801B4248 001B0F88  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801B424C 001B0F8C  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801B4250 001B0F90  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801B4254 001B0F94  38 21 00 28 */	addi r1, r1, 0x28
/* 801B4258 001B0F98  7C 08 03 A6 */	mtlr r0
/* 801B425C 001B0F9C  4E 80 00 20 */	blr
ExternalInterruptHandler:
/* 801B4260 001B0FA0  90 04 00 00 */	stw r0, 0x0(r4)
/* 801B4264 001B0FA4  90 24 00 04 */	stw r1, 0x4(r4)
/* 801B4268 001B0FA8  90 44 00 08 */	stw r2, 0x8(r4)
/* 801B426C 001B0FAC  BC C4 00 18 */	stmw r6, 0x18(r4)
/* 801B4270 001B0FB0  7C 11 E2 A6 */	mfspr r0, 913
/* 801B4274 001B0FB4  90 04 01 A8 */	stw r0, 0x1a8(r4)
/* 801B4278 001B0FB8  7C 12 E2 A6 */	mfspr r0, 914
/* 801B427C 001B0FBC  90 04 01 AC */	stw r0, 0x1ac(r4)
/* 801B4280 001B0FC0  7C 13 E2 A6 */	mfspr r0, 915
/* 801B4284 001B0FC4  90 04 01 B0 */	stw r0, 0x1b0(r4)
/* 801B4288 001B0FC8  7C 14 E2 A6 */	mfspr r0, 916
/* 801B428C 001B0FCC  90 04 01 B4 */	stw r0, 0x1b4(r4)
/* 801B4290 001B0FD0  7C 15 E2 A6 */	mfspr r0, 917
/* 801B4294 001B0FD4  90 04 01 B8 */	stw r0, 0x1b8(r4)
/* 801B4298 001B0FD8  7C 16 E2 A6 */	mfspr r0, 918
/* 801B429C 001B0FDC  90 04 01 BC */	stw r0, 0x1bc(r4)
/* 801B42A0 001B0FE0  7C 17 E2 A6 */	mfspr r0, 919
/* 801B42A4 001B0FE4  90 04 01 C0 */	stw r0, 0x1c0(r4)
/* 801B42A8 001B0FE8  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B42AC 001B0FEC  4B FF FC 70 */	b __OSDispatchInterrupt

.global func_801B42B0
func_801B42B0:
/* 801B42B0 001B0FF0  4E 80 00 20 */	blr

.global OSNotifyLink
OSNotifyLink:
/* 801B42B4 001B0FF4  4E 80 00 20 */	blr

.global OSSetStringTable
OSSetStringTable:
/* 801B42B8 001B0FF8  3C 80 80 00 */	lis r4, 0x800030D0@ha
/* 801B42BC 001B0FFC  90 64 30 D0 */	stw r3, 0x800030D0@l(r4)
/* 801B42C0 001B1000  4E 80 00 20 */	blr

.global Relocate
Relocate:
/* 801B42C4 001B1004  7C 08 02 A6 */	mflr r0
/* 801B42C8 001B1008  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B42CC 001B100C  94 21 FF C0 */	stwu r1, -0x40(r1)
/* 801B42D0 001B1010  BE E1 00 1C */	stmw r23, 0x1c(r1)
/* 801B42D4 001B1014  7C 7A 1B 79 */	mr. r26, r3
/* 801B42D8 001B1018  3B 64 00 00 */	addi r27, r4, 0x0
/* 801B42DC 001B101C  41 82 00 0C */	beq lbl_801B42E8
/* 801B42E0 001B1020  83 FA 00 00 */	lwz r31, 0x0(r26)
/* 801B42E4 001B1024  48 00 00 08 */	b func_801B42EC
lbl_801B42E8:
/* 801B42E8 001B1028  3B E0 00 00 */	li r31, 0x0

.global func_801B42EC
func_801B42EC:
/* 801B42EC 001B102C  80 7B 00 28 */	lwz r3, 0x28(r27)
/* 801B42F0 001B1030  80 1B 00 2C */	lwz r0, 0x2c(r27)
/* 801B42F4 001B1034  38 83 00 00 */	addi r4, r3, 0x0
/* 801B42F8 001B1038  7C 63 02 14 */	add r3, r3, r0
/* 801B42FC 001B103C  38 03 00 07 */	addi r0, r3, 0x7
/* 801B4300 001B1040  7C 04 00 50 */	subf r0, r4, r0
/* 801B4304 001B1044  54 00 E8 FE */	srwi r0, r0, 3
/* 801B4308 001B1048  7C 04 18 40 */	cmplw r4, r3
/* 801B430C 001B104C  7C 09 03 A6 */	mtctr r0
/* 801B4310 001B1050  40 80 00 18 */	bge lbl_801B4328
lbl_801B4314:
/* 801B4314 001B1054  80 04 00 00 */	lwz r0, 0x0(r4)
/* 801B4318 001B1058  7C 00 F8 40 */	cmplw r0, r31
/* 801B431C 001B105C  41 82 00 14 */	beq lbl_801B4330
/* 801B4320 001B1060  38 84 00 08 */	addi r4, r4, 0x8
/* 801B4324 001B1064  42 00 FF F0 */	bdnz lbl_801B4314
lbl_801B4328:
/* 801B4328 001B1068  38 60 00 00 */	li r3, 0x0
/* 801B432C 001B106C  48 00 02 40 */	b func_801B456C
lbl_801B4330:
/* 801B4330 001B1070  3C 60 80 2E */	lis r3, lbl_802E0A00@ha
/* 801B4334 001B1074  83 C4 00 04 */	lwz r30, 0x4(r4)
/* 801B4338 001B1078  3B 23 0A 00 */	addi r25, r3, lbl_802E0A00@l
/* 801B433C 001B107C  3B A0 00 00 */	li r29, 0x0
/* 801B4340 001B1080  48 00 01 F4 */	b func_801B4534
lbl_801B4344:
/* 801B4344 001B1084  A0 1E 00 00 */	lhz r0, 0x0(r30)
/* 801B4348 001B1088  28 1F 00 00 */	cmplwi r31, 0x0
/* 801B434C 001B108C  7F 9C 02 14 */	add r28, r28, r0
/* 801B4350 001B1090  41 82 00 1C */	beq lbl_801B436C
/* 801B4354 001B1094  88 1E 00 03 */	lbz r0, 0x3(r30)
/* 801B4358 001B1098  80 7A 00 10 */	lwz r3, 0x10(r26)
/* 801B435C 001B109C  54 00 18 38 */	slwi r0, r0, 3
/* 801B4360 001B10A0  7C 03 00 2E */	lwzx r0, r3, r0
/* 801B4364 001B10A4  54 05 00 3C */	rlwinm r5, r0, 0, 0, 30
/* 801B4368 001B10A8  48 00 00 08 */	b func_801B4370
lbl_801B436C:
/* 801B436C 001B10AC  38 A0 00 00 */	li r5, 0x0

.global func_801B4370
func_801B4370:
/* 801B4370 001B10B0  2C 04 00 06 */	cmpwi r4, 0x6
/* 801B4374 001B10B4  41 82 00 C4 */	beq lbl_801B4438
/* 801B4378 001B10B8  40 80 00 30 */	bge lbl_801B43A8
/* 801B437C 001B10BC  2C 04 00 02 */	cmpwi r4, 0x2
/* 801B4380 001B10C0  41 82 00 68 */	beq lbl_801B43E8
/* 801B4384 001B10C4  40 80 00 14 */	bge lbl_801B4398
/* 801B4388 001B10C8  2C 04 00 00 */	cmpwi r4, 0x0
/* 801B438C 001B10CC  41 82 01 A4 */	beq func_801B4530
/* 801B4390 001B10D0  40 80 00 48 */	bge lbl_801B43D8
/* 801B4394 001B10D4  48 00 01 90 */	b func_801B4524
lbl_801B4398:
/* 801B4398 001B10D8  2C 04 00 04 */	cmpwi r4, 0x4
/* 801B439C 001B10DC  41 82 00 78 */	beq lbl_801B4414
/* 801B43A0 001B10E0  40 80 00 84 */	bge lbl_801B4424
/* 801B43A4 001B10E4  48 00 00 60 */	b func_801B4404
lbl_801B43A8:
/* 801B43A8 001B10E8  2C 04 00 C9 */	cmpwi r4, 0xc9
/* 801B43AC 001B10EC  41 82 01 84 */	beq func_801B4530
/* 801B43B0 001B10F0  40 80 00 1C */	bge lbl_801B43CC
/* 801B43B4 001B10F4  2C 04 00 0A */	cmpwi r4, 0xa
/* 801B43B8 001B10F8  41 82 00 C8 */	beq lbl_801B4480
/* 801B43BC 001B10FC  41 80 00 A8 */	blt lbl_801B4464
/* 801B43C0 001B1100  2C 04 00 0E */	cmpwi r4, 0xe
/* 801B43C4 001B1104  40 80 01 60 */	bge func_801B4524
/* 801B43C8 001B1108  48 00 00 D8 */	b func_801B44A0
lbl_801B43CC:
/* 801B43CC 001B110C  2C 04 00 CB */	cmpwi r4, 0xcb
/* 801B43D0 001B1110  40 80 01 54 */	bge func_801B4524
/* 801B43D4 001B1114  48 00 00 EC */	b func_801B44C0
lbl_801B43D8:
/* 801B43D8 001B1118  80 1E 00 04 */	lwz r0, 0x4(r30)
/* 801B43DC 001B111C  7C 05 02 14 */	add r0, r5, r0
/* 801B43E0 001B1120  90 1C 00 00 */	stw r0, 0x0(r28)
/* 801B43E4 001B1124  48 00 01 4C */	b func_801B4530
lbl_801B43E8:
/* 801B43E8 001B1128  80 1E 00 04 */	lwz r0, 0x4(r30)
/* 801B43EC 001B112C  80 7C 00 00 */	lwz r3, 0x0(r28)
/* 801B43F0 001B1130  7C 05 02 14 */	add r0, r5, r0
/* 801B43F4 001B1134  54 63 07 8A */	rlwinm r3, r3, 0, 30, 5
/* 801B43F8 001B1138  50 03 01 BA */	rlwimi r3, r0, 0, 6, 29
/* 801B43FC 001B113C  90 7C 00 00 */	stw r3, 0x0(r28)
/* 801B4400 001B1140  48 00 01 30 */	b func_801B4530

.global func_801B4404
func_801B4404:
/* 801B4404 001B1144  80 1E 00 04 */	lwz r0, 0x4(r30)
/* 801B4408 001B1148  7C 05 02 14 */	add r0, r5, r0
/* 801B440C 001B114C  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 801B4410 001B1150  48 00 01 20 */	b func_801B4530
lbl_801B4414:
/* 801B4414 001B1154  80 1E 00 04 */	lwz r0, 0x4(r30)
/* 801B4418 001B1158  7C 05 02 14 */	add r0, r5, r0
/* 801B441C 001B115C  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 801B4420 001B1160  48 00 01 10 */	b func_801B4530
lbl_801B4424:
/* 801B4424 001B1164  80 1E 00 04 */	lwz r0, 0x4(r30)
/* 801B4428 001B1168  7C 05 02 14 */	add r0, r5, r0
/* 801B442C 001B116C  54 00 84 3E */	srwi r0, r0, 16
/* 801B4430 001B1170  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 801B4434 001B1174  48 00 00 FC */	b func_801B4530
lbl_801B4438:
/* 801B4438 001B1178  80 1E 00 04 */	lwz r0, 0x4(r30)
/* 801B443C 001B117C  7C 85 02 14 */	add r4, r5, r0
/* 801B4440 001B1180  54 80 04 21 */	rlwinm. r0, r4, 0, 16, 16
/* 801B4444 001B1184  41 82 00 0C */	beq lbl_801B4450
/* 801B4448 001B1188  38 60 00 01 */	li r3, 0x1
/* 801B444C 001B118C  48 00 00 08 */	b func_801B4454
lbl_801B4450:
/* 801B4450 001B1190  38 60 00 00 */	li r3, 0x0

.global func_801B4454
func_801B4454:
/* 801B4454 001B1194  54 80 84 3E */	srwi r0, r4, 16
/* 801B4458 001B1198  7C 00 1A 14 */	add r0, r0, r3
/* 801B445C 001B119C  B0 1C 00 00 */	sth r0, 0x0(r28)
/* 801B4460 001B11A0  48 00 00 D0 */	b func_801B4530
lbl_801B4464:
/* 801B4464 001B11A4  80 1E 00 04 */	lwz r0, 0x4(r30)
/* 801B4468 001B11A8  80 7C 00 00 */	lwz r3, 0x0(r28)
/* 801B446C 001B11AC  7C 05 02 14 */	add r0, r5, r0
/* 801B4470 001B11B0  54 63 07 9E */	rlwinm r3, r3, 0, 30, 15
/* 801B4474 001B11B4  50 03 04 3A */	rlwimi r3, r0, 0, 16, 29
/* 801B4478 001B11B8  90 7C 00 00 */	stw r3, 0x0(r28)
/* 801B447C 001B11BC  48 00 00 B4 */	b func_801B4530
lbl_801B4480:
/* 801B4480 001B11C0  80 1E 00 04 */	lwz r0, 0x4(r30)
/* 801B4484 001B11C4  80 7C 00 00 */	lwz r3, 0x0(r28)
/* 801B4488 001B11C8  7C 05 02 14 */	add r0, r5, r0
/* 801B448C 001B11CC  7C 1C 00 50 */	subf r0, r28, r0
/* 801B4490 001B11D0  54 63 07 8A */	rlwinm r3, r3, 0, 30, 5
/* 801B4494 001B11D4  50 03 01 BA */	rlwimi r3, r0, 0, 6, 29
/* 801B4498 001B11D8  90 7C 00 00 */	stw r3, 0x0(r28)
/* 801B449C 001B11DC  48 00 00 94 */	b func_801B4530

.global func_801B44A0
func_801B44A0:
/* 801B44A0 001B11E0  80 1E 00 04 */	lwz r0, 0x4(r30)
/* 801B44A4 001B11E4  80 7C 00 00 */	lwz r3, 0x0(r28)
/* 801B44A8 001B11E8  7C 05 02 14 */	add r0, r5, r0
/* 801B44AC 001B11EC  7C 1C 00 50 */	subf r0, r28, r0
/* 801B44B0 001B11F0  54 63 07 9E */	rlwinm r3, r3, 0, 30, 15
/* 801B44B4 001B11F4  50 03 04 3A */	rlwimi r3, r0, 0, 16, 29
/* 801B44B8 001B11F8  90 7C 00 00 */	stw r3, 0x0(r28)
/* 801B44BC 001B11FC  48 00 00 74 */	b func_801B4530

.global func_801B44C0
func_801B44C0:
/* 801B44C0 001B1200  88 1E 00 03 */	lbz r0, 0x3(r30)
/* 801B44C4 001B1204  28 1D 00 00 */	cmplwi r29, 0x0
/* 801B44C8 001B1208  80 7B 00 10 */	lwz r3, 0x10(r27)
/* 801B44CC 001B120C  54 00 18 38 */	slwi r0, r0, 3
/* 801B44D0 001B1210  7C 63 02 14 */	add r3, r3, r0
/* 801B44D4 001B1214  80 03 00 00 */	lwz r0, 0x0(r3)
/* 801B44D8 001B1218  3A E3 00 00 */	addi r23, r3, 0x0
/* 801B44DC 001B121C  54 1C 00 3C */	rlwinm r28, r0, 0, 0, 30
/* 801B44E0 001B1220  41 82 00 24 */	beq lbl_801B4504
/* 801B44E4 001B1224  80 1D 00 00 */	lwz r0, 0x0(r29)
/* 801B44E8 001B1228  80 9D 00 04 */	lwz r4, 0x4(r29)
/* 801B44EC 001B122C  54 18 00 3C */	rlwinm r24, r0, 0, 0, 30
/* 801B44F0 001B1230  38 78 00 00 */	addi r3, r24, 0x0
/* 801B44F4 001B1234  4B FF DE D5 */	bl DCFlushRange
/* 801B44F8 001B1238  7F 03 C3 78 */	mr r3, r24
/* 801B44FC 001B123C  80 9D 00 04 */	lwz r4, 0x4(r29)
/* 801B4500 001B1240  4B FF DF AD */	bl ICInvalidateRange
lbl_801B4504:
/* 801B4504 001B1244  80 17 00 00 */	lwz r0, 0x0(r23)
/* 801B4508 001B1248  54 00 07 FF */	clrlwi. r0, r0, 31
/* 801B450C 001B124C  41 82 00 0C */	beq lbl_801B4518
/* 801B4510 001B1250  7E E0 BB 78 */	mr r0, r23
/* 801B4514 001B1254  48 00 00 08 */	b func_801B451C
lbl_801B4518:
/* 801B4518 001B1258  38 00 00 00 */	li r0, 0x0

.global func_801B451C
func_801B451C:
/* 801B451C 001B125C  7C 1D 03 78 */	mr r29, r0
/* 801B4520 001B1260  48 00 00 10 */	b func_801B4530

.global func_801B4524
func_801B4524:
/* 801B4524 001B1264  38 79 00 00 */	addi r3, r25, 0x0
/* 801B4528 001B1268  4C C6 31 82 */	crclr 6
/* 801B452C 001B126C  4B FF EF 41 */	bl OSReport

.global func_801B4530
func_801B4530:
/* 801B4530 001B1270  3B DE 00 08 */	addi r30, r30, 0x8

.global func_801B4534
func_801B4534:
/* 801B4534 001B1274  88 9E 00 02 */	lbz r4, 0x2(r30)
/* 801B4538 001B1278  28 04 00 CB */	cmplwi r4, 0xcb
/* 801B453C 001B127C  40 82 FE 08 */	bne lbl_801B4344
/* 801B4540 001B1280  28 1D 00 00 */	cmplwi r29, 0x0
/* 801B4544 001B1284  41 82 00 24 */	beq lbl_801B4568
/* 801B4548 001B1288  80 1D 00 00 */	lwz r0, 0x0(r29)
/* 801B454C 001B128C  80 9D 00 04 */	lwz r4, 0x4(r29)
/* 801B4550 001B1290  54 19 00 3C */	rlwinm r25, r0, 0, 0, 30
/* 801B4554 001B1294  38 79 00 00 */	addi r3, r25, 0x0
/* 801B4558 001B1298  4B FF DE 71 */	bl DCFlushRange
/* 801B455C 001B129C  7F 23 CB 78 */	mr r3, r25
/* 801B4560 001B12A0  80 9D 00 04 */	lwz r4, 0x4(r29)
/* 801B4564 001B12A4  4B FF DF 49 */	bl ICInvalidateRange
lbl_801B4568:
/* 801B4568 001B12A8  38 60 00 01 */	li r3, 0x1

.global func_801B456C
func_801B456C:
/* 801B456C 001B12AC  BA E1 00 1C */	lmw r23, 0x1c(r1)
/* 801B4570 001B12B0  80 01 00 44 */	lwz r0, 0x44(r1)
/* 801B4574 001B12B4  38 21 00 40 */	addi r1, r1, 0x40
/* 801B4578 001B12B8  7C 08 03 A6 */	mtlr r0
/* 801B457C 001B12BC  4E 80 00 20 */	blr

.global Link
Link:
/* 801B4580 001B12C0  7C 08 02 A6 */	mflr r0
/* 801B4584 001B12C4  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B4588 001B12C8  38 00 00 00 */	li r0, 0x0
/* 801B458C 001B12CC  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801B4590 001B12D0  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801B4594 001B12D4  3B E3 00 00 */	addi r31, r3, 0x0
/* 801B4598 001B12D8  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801B459C 001B12DC  3B C5 00 00 */	addi r30, r5, 0x0
/* 801B45A0 001B12E0  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801B45A4 001B12E4  3B A4 00 00 */	addi r29, r4, 0x0
/* 801B45A8 001B12E8  93 81 00 18 */	stw r28, 0x18(r1)
/* 801B45AC 001B12EC  98 03 00 33 */	stb r0, 0x33(r3)
/* 801B45B0 001B12F0  80 03 00 1C */	lwz r0, 0x1c(r3)
/* 801B45B4 001B12F4  28 00 00 03 */	cmplwi r0, 0x3
/* 801B45B8 001B12F8  41 81 00 44 */	bgt lbl_801B45FC
/* 801B45BC 001B12FC  28 00 00 02 */	cmplwi r0, 0x2
/* 801B45C0 001B1300  41 80 00 44 */	blt lbl_801B4604
/* 801B45C4 001B1304  80 7F 00 40 */	lwz r3, 0x40(r31)
/* 801B45C8 001B1308  28 03 00 00 */	cmplwi r3, 0x0
/* 801B45CC 001B130C  41 82 00 14 */	beq lbl_801B45E0
/* 801B45D0 001B1310  7C 1F 1B 96 */	divwu r0, r31, r3
/* 801B45D4 001B1314  7C 00 19 D6 */	mullw r0, r0, r3
/* 801B45D8 001B1318  7C 00 F8 51 */	subf. r0, r0, r31
/* 801B45DC 001B131C  40 82 00 20 */	bne lbl_801B45FC
lbl_801B45E0:
/* 801B45E0 001B1320  80 7F 00 44 */	lwz r3, 0x44(r31)
/* 801B45E4 001B1324  28 03 00 00 */	cmplwi r3, 0x0
/* 801B45E8 001B1328  41 82 00 1C */	beq lbl_801B4604
/* 801B45EC 001B132C  7C 1D 1B 96 */	divwu r0, r29, r3
/* 801B45F0 001B1330  7C 00 19 D6 */	mullw r0, r0, r3
/* 801B45F4 001B1334  7C 00 E8 51 */	subf. r0, r0, r29
/* 801B45F8 001B1338  41 82 00 0C */	beq lbl_801B4604
lbl_801B45FC:
/* 801B45FC 001B133C  38 60 00 00 */	li r3, 0x0
/* 801B4600 001B1340  48 00 02 40 */	b func_801B4840
lbl_801B4604:
/* 801B4604 001B1344  3C 60 80 00 */	lis r3, 0x800030C8@ha
/* 801B4608 001B1348  38 83 30 C8 */	addi r4, r3, 0x800030C8@l
/* 801B460C 001B134C  84 A4 00 04 */	lwzu r5, 0x4(r4)
/* 801B4610 001B1350  28 05 00 00 */	cmplwi r5, 0x0
/* 801B4614 001B1354  40 82 00 0C */	bne lbl_801B4620
/* 801B4618 001B1358  93 E3 30 C8 */	stw r31, 0x30c8(r3)
/* 801B461C 001B135C  48 00 00 08 */	b func_801B4624
lbl_801B4620:
/* 801B4620 001B1360  93 E5 00 04 */	stw r31, 0x4(r5)

.global func_801B4624
func_801B4624:
/* 801B4624 001B1364  90 BF 00 08 */	stw r5, 0x8(r31)
/* 801B4628 001B1368  38 00 00 00 */	li r0, 0x0
/* 801B462C 001B136C  90 1F 00 04 */	stw r0, 0x4(r31)
/* 801B4630 001B1370  93 E4 00 00 */	stw r31, 0x0(r4)
/* 801B4634 001B1374  80 1F 00 10 */	lwz r0, 0x10(r31)
/* 801B4638 001B1378  7C 00 FA 14 */	add r0, r0, r31
/* 801B463C 001B137C  90 1F 00 10 */	stw r0, 0x10(r31)
/* 801B4640 001B1380  80 1F 00 24 */	lwz r0, 0x24(r31)
/* 801B4644 001B1384  7C 00 FA 14 */	add r0, r0, r31
/* 801B4648 001B1388  90 1F 00 24 */	stw r0, 0x24(r31)
/* 801B464C 001B138C  80 1F 00 28 */	lwz r0, 0x28(r31)
/* 801B4650 001B1390  7C 00 FA 14 */	add r0, r0, r31
/* 801B4654 001B1394  90 1F 00 28 */	stw r0, 0x28(r31)
/* 801B4658 001B1398  80 1F 00 1C */	lwz r0, 0x1c(r31)
/* 801B465C 001B139C  28 00 00 03 */	cmplwi r0, 0x3
/* 801B4660 001B13A0  41 80 00 10 */	blt lbl_801B4670
/* 801B4664 001B13A4  80 1F 00 48 */	lwz r0, 0x48(r31)
/* 801B4668 001B13A8  7C 00 FA 14 */	add r0, r0, r31
/* 801B466C 001B13AC  90 1F 00 48 */	stw r0, 0x48(r31)
lbl_801B4670:
/* 801B4670 001B13B0  38 A0 00 01 */	li r5, 0x1
/* 801B4674 001B13B4  38 60 00 08 */	li r3, 0x8
/* 801B4678 001B13B8  48 00 00 40 */	b func_801B46B8
lbl_801B467C:
/* 801B467C 001B13BC  80 1F 00 10 */	lwz r0, 0x10(r31)
/* 801B4680 001B13C0  7C 80 1A 14 */	add r4, r0, r3
/* 801B4684 001B13C4  80 04 00 00 */	lwz r0, 0x0(r4)
/* 801B4688 001B13C8  28 00 00 00 */	cmplwi r0, 0x0
/* 801B468C 001B13CC  41 82 00 10 */	beq lbl_801B469C
/* 801B4690 001B13D0  7C 00 FA 14 */	add r0, r0, r31
/* 801B4694 001B13D4  90 04 00 00 */	stw r0, 0x0(r4)
/* 801B4698 001B13D8  48 00 00 18 */	b func_801B46B0
lbl_801B469C:
/* 801B469C 001B13DC  80 04 00 04 */	lwz r0, 0x4(r4)
/* 801B46A0 001B13E0  28 00 00 00 */	cmplwi r0, 0x0
/* 801B46A4 001B13E4  41 82 00 0C */	beq func_801B46B0
/* 801B46A8 001B13E8  98 BF 00 33 */	stb r5, 0x33(r31)
/* 801B46AC 001B13EC  93 A4 00 00 */	stw r29, 0x0(r4)

.global func_801B46B0
func_801B46B0:
/* 801B46B0 001B13F0  38 63 00 08 */	addi r3, r3, 0x8
/* 801B46B4 001B13F4  38 A5 00 01 */	addi r5, r5, 0x1

.global func_801B46B8
func_801B46B8:
/* 801B46B8 001B13F8  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 801B46BC 001B13FC  7C 05 00 40 */	cmplw r5, r0
/* 801B46C0 001B1400  41 80 FF BC */	blt lbl_801B467C
/* 801B46C4 001B1404  80 9F 00 28 */	lwz r4, 0x28(r31)
/* 801B46C8 001B1408  48 00 00 14 */	b func_801B46DC
lbl_801B46CC:
/* 801B46CC 001B140C  80 04 00 04 */	lwz r0, 0x4(r4)
/* 801B46D0 001B1410  7C 00 FA 14 */	add r0, r0, r31
/* 801B46D4 001B1414  90 04 00 04 */	stw r0, 0x4(r4)
/* 801B46D8 001B1418  38 84 00 08 */	addi r4, r4, 0x8

.global func_801B46DC
func_801B46DC:
/* 801B46DC 001B141C  80 7F 00 28 */	lwz r3, 0x28(r31)
/* 801B46E0 001B1420  80 1F 00 2C */	lwz r0, 0x2c(r31)
/* 801B46E4 001B1424  7C 03 02 14 */	add r0, r3, r0
/* 801B46E8 001B1428  7C 04 00 40 */	cmplw r4, r0
/* 801B46EC 001B142C  41 80 FF E0 */	blt lbl_801B46CC
/* 801B46F0 001B1430  88 1F 00 30 */	lbz r0, 0x30(r31)
/* 801B46F4 001B1434  28 00 00 00 */	cmplwi r0, 0x0
/* 801B46F8 001B1438  41 82 00 20 */	beq lbl_801B4718
/* 801B46FC 001B143C  80 7F 00 10 */	lwz r3, 0x10(r31)
/* 801B4700 001B1440  54 00 18 38 */	slwi r0, r0, 3
/* 801B4704 001B1444  80 9F 00 34 */	lwz r4, 0x34(r31)
/* 801B4708 001B1448  7C 03 00 2E */	lwzx r0, r3, r0
/* 801B470C 001B144C  54 00 00 3C */	rlwinm r0, r0, 0, 0, 30
/* 801B4710 001B1450  7C 04 02 14 */	add r0, r4, r0
/* 801B4714 001B1454  90 1F 00 34 */	stw r0, 0x34(r31)
lbl_801B4718:
/* 801B4718 001B1458  88 1F 00 31 */	lbz r0, 0x31(r31)
/* 801B471C 001B145C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B4720 001B1460  41 82 00 20 */	beq lbl_801B4740
/* 801B4724 001B1464  80 7F 00 10 */	lwz r3, 0x10(r31)
/* 801B4728 001B1468  54 00 18 38 */	slwi r0, r0, 3
/* 801B472C 001B146C  80 9F 00 38 */	lwz r4, 0x38(r31)
/* 801B4730 001B1470  7C 03 00 2E */	lwzx r0, r3, r0
/* 801B4734 001B1474  54 00 00 3C */	rlwinm r0, r0, 0, 0, 30
/* 801B4738 001B1478  7C 04 02 14 */	add r0, r4, r0
/* 801B473C 001B147C  90 1F 00 38 */	stw r0, 0x38(r31)
lbl_801B4740:
/* 801B4740 001B1480  88 1F 00 32 */	lbz r0, 0x32(r31)
/* 801B4744 001B1484  28 00 00 00 */	cmplwi r0, 0x0
/* 801B4748 001B1488  41 82 00 20 */	beq lbl_801B4768
/* 801B474C 001B148C  80 7F 00 10 */	lwz r3, 0x10(r31)
/* 801B4750 001B1490  54 00 18 38 */	slwi r0, r0, 3
/* 801B4754 001B1494  80 9F 00 3C */	lwz r4, 0x3c(r31)
/* 801B4758 001B1498  7C 03 00 2E */	lwzx r0, r3, r0
/* 801B475C 001B149C  54 00 00 3C */	rlwinm r0, r0, 0, 0, 30
/* 801B4760 001B14A0  7C 04 02 14 */	add r0, r4, r0
/* 801B4764 001B14A4  90 1F 00 3C */	stw r0, 0x3c(r31)
lbl_801B4768:
/* 801B4768 001B14A8  3C 60 80 00 */	lis r3, 0x800030D0@ha
/* 801B476C 001B14AC  80 63 30 D0 */	lwz r3, 0x800030D0@l(r3)
/* 801B4770 001B14B0  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4774 001B14B4  41 82 00 10 */	beq lbl_801B4784
/* 801B4778 001B14B8  80 1F 00 14 */	lwz r0, 0x14(r31)
/* 801B477C 001B14BC  7C 00 1A 14 */	add r0, r0, r3
/* 801B4780 001B14C0  90 1F 00 14 */	stw r0, 0x14(r31)
lbl_801B4784:
/* 801B4784 001B14C4  38 60 00 00 */	li r3, 0x0
/* 801B4788 001B14C8  38 9F 00 00 */	addi r4, r31, 0x0
/* 801B478C 001B14CC  4B FF FB 39 */	bl Relocate
/* 801B4790 001B14D0  3C 60 80 00 */	lis r3, 0x800030C8@ha
/* 801B4794 001B14D4  83 83 30 C8 */	lwz r28, 0x800030C8@l(r3)
/* 801B4798 001B14D8  48 00 00 28 */	b func_801B47C0
lbl_801B479C:
/* 801B479C 001B14DC  38 7F 00 00 */	addi r3, r31, 0x0
/* 801B47A0 001B14E0  38 9C 00 00 */	addi r4, r28, 0x0
/* 801B47A4 001B14E4  4B FF FB 21 */	bl Relocate
/* 801B47A8 001B14E8  7C 1C F8 40 */	cmplw r28, r31
/* 801B47AC 001B14EC  41 82 00 10 */	beq lbl_801B47BC
/* 801B47B0 001B14F0  38 7C 00 00 */	addi r3, r28, 0x0
/* 801B47B4 001B14F4  38 9F 00 00 */	addi r4, r31, 0x0
/* 801B47B8 001B14F8  4B FF FB 0D */	bl Relocate
lbl_801B47BC:
/* 801B47BC 001B14FC  83 9C 00 04 */	lwz r28, 0x4(r28)

.global func_801B47C0
func_801B47C0:
/* 801B47C0 001B1500  28 1C 00 00 */	cmplwi r28, 0x0
/* 801B47C4 001B1504  40 82 FF D8 */	bne lbl_801B479C
/* 801B47C8 001B1508  2C 1E 00 00 */	cmpwi r30, 0x0
/* 801B47CC 001B150C  41 82 00 58 */	beq func_801B4824
/* 801B47D0 001B1510  80 9F 00 28 */	lwz r4, 0x28(r31)
/* 801B47D4 001B1514  80 1F 00 2C */	lwz r0, 0x2c(r31)
/* 801B47D8 001B1518  38 A4 00 00 */	addi r5, r4, 0x0
/* 801B47DC 001B151C  7C 64 02 14 */	add r3, r4, r0
/* 801B47E0 001B1520  38 03 00 07 */	addi r0, r3, 0x7
/* 801B47E4 001B1524  7C 05 00 50 */	subf r0, r5, r0
/* 801B47E8 001B1528  54 00 E8 FE */	srwi r0, r0, 3
/* 801B47EC 001B152C  7C 05 18 40 */	cmplw r5, r3
/* 801B47F0 001B1530  7C 09 03 A6 */	mtctr r0
/* 801B47F4 001B1534  40 80 00 30 */	bge func_801B4824
lbl_801B47F8:
/* 801B47F8 001B1538  80 65 00 00 */	lwz r3, 0x0(r5)
/* 801B47FC 001B153C  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4800 001B1540  41 82 00 10 */	beq lbl_801B4810
/* 801B4804 001B1544  80 1F 00 00 */	lwz r0, 0x0(r31)
/* 801B4808 001B1548  7C 03 00 40 */	cmplw r3, r0
/* 801B480C 001B154C  40 82 00 10 */	bne lbl_801B481C
lbl_801B4810:
/* 801B4810 001B1550  7C 04 28 50 */	subf r0, r4, r5
/* 801B4814 001B1554  90 1F 00 2C */	stw r0, 0x2c(r31)
/* 801B4818 001B1558  48 00 00 0C */	b func_801B4824
lbl_801B481C:
/* 801B481C 001B155C  38 A5 00 08 */	addi r5, r5, 0x8
/* 801B4820 001B1560  42 00 FF D8 */	bdnz lbl_801B47F8

.global func_801B4824
func_801B4824:
/* 801B4824 001B1564  80 BF 00 20 */	lwz r5, 0x20(r31)
/* 801B4828 001B1568  38 7D 00 00 */	addi r3, r29, 0x0
/* 801B482C 001B156C  38 80 00 00 */	li r4, 0x0
/* 801B4830 001B1570  4B E5 0C B5 */	bl memset
/* 801B4834 001B1574  7F E3 FB 78 */	mr r3, r31
/* 801B4838 001B1578  4B FF FA 79 */	bl func_801B42B0
/* 801B483C 001B157C  38 60 00 01 */	li r3, 0x1

.global func_801B4840
func_801B4840:
/* 801B4840 001B1580  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801B4844 001B1584  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801B4848 001B1588  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801B484C 001B158C  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801B4850 001B1590  83 81 00 18 */	lwz r28, 0x18(r1)
/* 801B4854 001B1594  38 21 00 28 */	addi r1, r1, 0x28
/* 801B4858 001B1598  7C 08 03 A6 */	mtlr r0
/* 801B485C 001B159C  4E 80 00 20 */	blr

.global OSLink
OSLink:
/* 801B4860 001B15A0  7C 08 02 A6 */	mflr r0
/* 801B4864 001B15A4  38 A0 00 00 */	li r5, 0x0
/* 801B4868 001B15A8  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B486C 001B15AC  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B4870 001B15B0  4B FF FD 11 */	bl Link
/* 801B4874 001B15B4  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B4878 001B15B8  38 21 00 08 */	addi r1, r1, 0x8
/* 801B487C 001B15BC  7C 08 03 A6 */	mtlr r0
/* 801B4880 001B15C0  4E 80 00 20 */	blr

.global Undo
Undo:
/* 801B4884 001B15C4  7C 08 02 A6 */	mflr r0
/* 801B4888 001B15C8  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B488C 001B15CC  94 21 FF C8 */	stwu r1, -0x38(r1)
/* 801B4890 001B15D0  BF 21 00 1C */	stmw r25, 0x1c(r1)
/* 801B4894 001B15D4  7C 9C 23 78 */	mr r28, r4
/* 801B4898 001B15D8  80 83 00 00 */	lwz r4, 0x0(r3)
/* 801B489C 001B15DC  80 7C 00 28 */	lwz r3, 0x28(r28)
/* 801B48A0 001B15E0  80 1C 00 2C */	lwz r0, 0x2c(r28)
/* 801B48A4 001B15E4  38 A3 00 00 */	addi r5, r3, 0x0
/* 801B48A8 001B15E8  7C 63 02 14 */	add r3, r3, r0
/* 801B48AC 001B15EC  38 03 00 07 */	addi r0, r3, 0x7
/* 801B48B0 001B15F0  7C 05 00 50 */	subf r0, r5, r0
/* 801B48B4 001B15F4  54 00 E8 FE */	srwi r0, r0, 3
/* 801B48B8 001B15F8  7C 05 18 40 */	cmplw r5, r3
/* 801B48BC 001B15FC  7C 09 03 A6 */	mtctr r0
/* 801B48C0 001B1600  40 80 00 18 */	bge lbl_801B48D8
lbl_801B48C4:
/* 801B48C4 001B1604  80 05 00 00 */	lwz r0, 0x0(r5)
/* 801B48C8 001B1608  7C 00 20 40 */	cmplw r0, r4
/* 801B48CC 001B160C  41 82 00 14 */	beq lbl_801B48E0
/* 801B48D0 001B1610  38 A5 00 08 */	addi r5, r5, 0x8
/* 801B48D4 001B1614  42 00 FF F0 */	bdnz lbl_801B48C4
lbl_801B48D8:
/* 801B48D8 001B1618  38 60 00 00 */	li r3, 0x0
/* 801B48DC 001B161C  48 00 01 CC */	b func_801B4AA8
lbl_801B48E0:
/* 801B48E0 001B1620  3C 60 80 2E */	lis r3, lbl_802E0A28@ha
/* 801B48E4 001B1624  83 E5 00 04 */	lwz r31, 0x4(r5)
/* 801B48E8 001B1628  3B 63 0A 28 */	addi r27, r3, lbl_802E0A28@l
/* 801B48EC 001B162C  3B C0 00 00 */	li r30, 0x0
/* 801B48F0 001B1630  48 00 01 80 */	b func_801B4A70
lbl_801B48F4:
/* 801B48F4 001B1634  A0 1F 00 00 */	lhz r0, 0x0(r31)
/* 801B48F8 001B1638  2C 04 00 06 */	cmpwi r4, 0x6
/* 801B48FC 001B163C  38 60 00 00 */	li r3, 0x0
/* 801B4900 001B1640  7F BD 02 14 */	add r29, r29, r0
/* 801B4904 001B1644  41 82 00 A4 */	beq lbl_801B49A8
/* 801B4908 001B1648  40 80 00 30 */	bge lbl_801B4938
/* 801B490C 001B164C  2C 04 00 02 */	cmpwi r4, 0x2
/* 801B4910 001B1650  41 82 00 64 */	beq lbl_801B4974
/* 801B4914 001B1654  40 80 00 14 */	bge lbl_801B4928
/* 801B4918 001B1658  2C 04 00 00 */	cmpwi r4, 0x0
/* 801B491C 001B165C  41 82 01 50 */	beq func_801B4A6C
/* 801B4920 001B1660  40 80 00 48 */	bge lbl_801B4968
/* 801B4924 001B1664  48 00 01 3C */	b func_801B4A60
lbl_801B4928:
/* 801B4928 001B1668  2C 04 00 04 */	cmpwi r4, 0x4
/* 801B492C 001B166C  41 82 00 64 */	beq lbl_801B4990
/* 801B4930 001B1670  40 80 00 6C */	bge lbl_801B499C
/* 801B4934 001B1674  48 00 00 50 */	b func_801B4984
lbl_801B4938:
/* 801B4938 001B1678  2C 04 00 C9 */	cmpwi r4, 0xc9
/* 801B493C 001B167C  41 82 01 30 */	beq func_801B4A6C
/* 801B4940 001B1680  40 80 00 1C */	bge lbl_801B495C
/* 801B4944 001B1684  2C 04 00 0A */	cmpwi r4, 0xa
/* 801B4948 001B1688  41 82 00 7C */	beq lbl_801B49C4
/* 801B494C 001B168C  41 80 00 68 */	blt lbl_801B49B4
/* 801B4950 001B1690  2C 04 00 0E */	cmpwi r4, 0xe
/* 801B4954 001B1694  40 80 01 0C */	bge func_801B4A60
/* 801B4958 001B1698  48 00 00 94 */	b func_801B49EC
lbl_801B495C:
/* 801B495C 001B169C  2C 04 00 CB */	cmpwi r4, 0xcb
/* 801B4960 001B16A0  40 80 01 00 */	bge func_801B4A60
/* 801B4964 001B16A4  48 00 00 98 */	b func_801B49FC
lbl_801B4968:
/* 801B4968 001B16A8  38 00 00 00 */	li r0, 0x0
/* 801B496C 001B16AC  90 1D 00 00 */	stw r0, 0x0(r29)
/* 801B4970 001B16B0  48 00 00 FC */	b func_801B4A6C
lbl_801B4974:
/* 801B4974 001B16B4  80 1D 00 00 */	lwz r0, 0x0(r29)
/* 801B4978 001B16B8  54 00 07 8A */	rlwinm r0, r0, 0, 30, 5
/* 801B497C 001B16BC  90 1D 00 00 */	stw r0, 0x0(r29)
/* 801B4980 001B16C0  48 00 00 EC */	b func_801B4A6C

.global func_801B4984
func_801B4984:
/* 801B4984 001B16C4  38 00 00 00 */	li r0, 0x0
/* 801B4988 001B16C8  B0 1D 00 00 */	sth r0, 0x0(r29)
/* 801B498C 001B16CC  48 00 00 E0 */	b func_801B4A6C
lbl_801B4990:
/* 801B4990 001B16D0  38 00 00 00 */	li r0, 0x0
/* 801B4994 001B16D4  B0 1D 00 00 */	sth r0, 0x0(r29)
/* 801B4998 001B16D8  48 00 00 D4 */	b func_801B4A6C
lbl_801B499C:
/* 801B499C 001B16DC  38 00 00 00 */	li r0, 0x0
/* 801B49A0 001B16E0  B0 1D 00 00 */	sth r0, 0x0(r29)
/* 801B49A4 001B16E4  48 00 00 C8 */	b func_801B4A6C
lbl_801B49A8:
/* 801B49A8 001B16E8  38 00 00 00 */	li r0, 0x0
/* 801B49AC 001B16EC  B0 1D 00 00 */	sth r0, 0x0(r29)
/* 801B49B0 001B16F0  48 00 00 BC */	b func_801B4A6C
lbl_801B49B4:
/* 801B49B4 001B16F4  80 1D 00 00 */	lwz r0, 0x0(r29)
/* 801B49B8 001B16F8  54 00 07 9E */	rlwinm r0, r0, 0, 30, 15
/* 801B49BC 001B16FC  90 1D 00 00 */	stw r0, 0x0(r29)
/* 801B49C0 001B1700  48 00 00 AC */	b func_801B4A6C
lbl_801B49C4:
/* 801B49C4 001B1704  88 1C 00 32 */	lbz r0, 0x32(r28)
/* 801B49C8 001B1708  28 00 00 00 */	cmplwi r0, 0x0
/* 801B49CC 001B170C  41 82 00 0C */	beq lbl_801B49D8
/* 801B49D0 001B1710  80 1C 00 3C */	lwz r0, 0x3c(r28)
/* 801B49D4 001B1714  7C 7D 00 50 */	subf r3, r29, r0
lbl_801B49D8:
/* 801B49D8 001B1718  80 1D 00 00 */	lwz r0, 0x0(r29)
/* 801B49DC 001B171C  54 00 07 8A */	rlwinm r0, r0, 0, 30, 5
/* 801B49E0 001B1720  50 60 01 BA */	rlwimi r0, r3, 0, 6, 29
/* 801B49E4 001B1724  90 1D 00 00 */	stw r0, 0x0(r29)
/* 801B49E8 001B1728  48 00 00 84 */	b func_801B4A6C

.global func_801B49EC
func_801B49EC:
/* 801B49EC 001B172C  80 1D 00 00 */	lwz r0, 0x0(r29)
/* 801B49F0 001B1730  54 00 07 9E */	rlwinm r0, r0, 0, 30, 15
/* 801B49F4 001B1734  90 1D 00 00 */	stw r0, 0x0(r29)
/* 801B49F8 001B1738  48 00 00 74 */	b func_801B4A6C

.global func_801B49FC
func_801B49FC:
/* 801B49FC 001B173C  88 1F 00 03 */	lbz r0, 0x3(r31)
/* 801B4A00 001B1740  28 1E 00 00 */	cmplwi r30, 0x0
/* 801B4A04 001B1744  80 7C 00 10 */	lwz r3, 0x10(r28)
/* 801B4A08 001B1748  54 00 18 38 */	slwi r0, r0, 3
/* 801B4A0C 001B174C  7C 63 02 14 */	add r3, r3, r0
/* 801B4A10 001B1750  80 03 00 00 */	lwz r0, 0x0(r3)
/* 801B4A14 001B1754  3B 43 00 00 */	addi r26, r3, 0x0
/* 801B4A18 001B1758  54 1D 00 3C */	rlwinm r29, r0, 0, 0, 30
/* 801B4A1C 001B175C  41 82 00 24 */	beq lbl_801B4A40
/* 801B4A20 001B1760  80 1E 00 00 */	lwz r0, 0x0(r30)
/* 801B4A24 001B1764  80 9E 00 04 */	lwz r4, 0x4(r30)
/* 801B4A28 001B1768  54 19 00 3C */	rlwinm r25, r0, 0, 0, 30
/* 801B4A2C 001B176C  38 79 00 00 */	addi r3, r25, 0x0
/* 801B4A30 001B1770  4B FF D9 99 */	bl DCFlushRange
/* 801B4A34 001B1774  7F 23 CB 78 */	mr r3, r25
/* 801B4A38 001B1778  80 9E 00 04 */	lwz r4, 0x4(r30)
/* 801B4A3C 001B177C  4B FF DA 71 */	bl ICInvalidateRange
lbl_801B4A40:
/* 801B4A40 001B1780  80 1A 00 00 */	lwz r0, 0x0(r26)
/* 801B4A44 001B1784  54 00 07 FF */	clrlwi. r0, r0, 31
/* 801B4A48 001B1788  41 82 00 0C */	beq lbl_801B4A54
/* 801B4A4C 001B178C  7F 40 D3 78 */	mr r0, r26
/* 801B4A50 001B1790  48 00 00 08 */	b func_801B4A58
lbl_801B4A54:
/* 801B4A54 001B1794  38 00 00 00 */	li r0, 0x0

.global func_801B4A58
func_801B4A58:
/* 801B4A58 001B1798  7C 1E 03 78 */	mr r30, r0
/* 801B4A5C 001B179C  48 00 00 10 */	b func_801B4A6C

.global func_801B4A60
func_801B4A60:
/* 801B4A60 001B17A0  38 7B 00 00 */	addi r3, r27, 0x0
/* 801B4A64 001B17A4  4C C6 31 82 */	crclr 6
/* 801B4A68 001B17A8  4B FF EA 05 */	bl OSReport

.global func_801B4A6C
func_801B4A6C:
/* 801B4A6C 001B17AC  3B FF 00 08 */	addi r31, r31, 0x8

.global func_801B4A70
func_801B4A70:
/* 801B4A70 001B17B0  88 9F 00 02 */	lbz r4, 0x2(r31)
/* 801B4A74 001B17B4  28 04 00 CB */	cmplwi r4, 0xcb
/* 801B4A78 001B17B8  40 82 FE 7C */	bne lbl_801B48F4
/* 801B4A7C 001B17BC  28 1E 00 00 */	cmplwi r30, 0x0
/* 801B4A80 001B17C0  41 82 00 24 */	beq lbl_801B4AA4
/* 801B4A84 001B17C4  80 1E 00 00 */	lwz r0, 0x0(r30)
/* 801B4A88 001B17C8  80 9E 00 04 */	lwz r4, 0x4(r30)
/* 801B4A8C 001B17CC  54 1B 00 3C */	rlwinm r27, r0, 0, 0, 30
/* 801B4A90 001B17D0  38 7B 00 00 */	addi r3, r27, 0x0
/* 801B4A94 001B17D4  4B FF D9 35 */	bl DCFlushRange
/* 801B4A98 001B17D8  7F 63 DB 78 */	mr r3, r27
/* 801B4A9C 001B17DC  80 9E 00 04 */	lwz r4, 0x4(r30)
/* 801B4AA0 001B17E0  4B FF DA 0D */	bl ICInvalidateRange
lbl_801B4AA4:
/* 801B4AA4 001B17E4  38 60 00 01 */	li r3, 0x1

.global func_801B4AA8
func_801B4AA8:
/* 801B4AA8 001B17E8  BB 21 00 1C */	lmw r25, 0x1c(r1)
/* 801B4AAC 001B17EC  80 01 00 3C */	lwz r0, 0x3c(r1)
/* 801B4AB0 001B17F0  38 21 00 38 */	addi r1, r1, 0x38
/* 801B4AB4 001B17F4  7C 08 03 A6 */	mtlr r0
/* 801B4AB8 001B17F8  4E 80 00 20 */	blr

.global OSUnlink
OSUnlink:
/* 801B4ABC 001B17FC  7C 08 02 A6 */	mflr r0
/* 801B4AC0 001B1800  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B4AC4 001B1804  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B4AC8 001B1808  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B4ACC 001B180C  7C 7F 1B 78 */	mr r31, r3
/* 801B4AD0 001B1810  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801B4AD4 001B1814  80 83 00 04 */	lwz r4, 0x4(r3)
/* 801B4AD8 001B1818  80 A3 00 08 */	lwz r5, 0x8(r3)
/* 801B4ADC 001B181C  28 04 00 00 */	cmplwi r4, 0x0
/* 801B4AE0 001B1820  40 82 00 10 */	bne lbl_801B4AF0
/* 801B4AE4 001B1824  3C 60 80 00 */	lis r3, 0x800030CC@ha
/* 801B4AE8 001B1828  90 A3 30 CC */	stw r5, 0x800030CC@l(r3)
/* 801B4AEC 001B182C  48 00 00 08 */	b func_801B4AF4
lbl_801B4AF0:
/* 801B4AF0 001B1830  90 A4 00 08 */	stw r5, 0x8(r4)

.global func_801B4AF4
func_801B4AF4:
/* 801B4AF4 001B1834  28 05 00 00 */	cmplwi r5, 0x0
/* 801B4AF8 001B1838  40 82 00 10 */	bne lbl_801B4B08
/* 801B4AFC 001B183C  3C 60 80 00 */	lis r3, 0x800030C8@ha
/* 801B4B00 001B1840  90 83 30 C8 */	stw r4, 0x800030C8@l(r3)
/* 801B4B04 001B1844  48 00 00 08 */	b func_801B4B0C
lbl_801B4B08:
/* 801B4B08 001B1848  90 85 00 04 */	stw r4, 0x4(r5)

.global func_801B4B0C
func_801B4B0C:
/* 801B4B0C 001B184C  3C 60 80 00 */	lis r3, 0x800030C8@ha
/* 801B4B10 001B1850  83 C3 30 C8 */	lwz r30, 0x800030C8@l(r3)
/* 801B4B14 001B1854  48 00 00 14 */	b func_801B4B28
lbl_801B4B18:
/* 801B4B18 001B1858  38 7F 00 00 */	addi r3, r31, 0x0
/* 801B4B1C 001B185C  38 9E 00 00 */	addi r4, r30, 0x0
/* 801B4B20 001B1860  4B FF FD 65 */	bl Undo
/* 801B4B24 001B1864  83 DE 00 04 */	lwz r30, 0x4(r30)

.global func_801B4B28
func_801B4B28:
/* 801B4B28 001B1868  28 1E 00 00 */	cmplwi r30, 0x0
/* 801B4B2C 001B186C  40 82 FF EC */	bne lbl_801B4B18
/* 801B4B30 001B1870  7F E3 FB 78 */	mr r3, r31
/* 801B4B34 001B1874  4B FF F7 81 */	bl OSNotifyLink
/* 801B4B38 001B1878  3C 60 80 00 */	lis r3, 0x800030D0@ha
/* 801B4B3C 001B187C  80 63 30 D0 */	lwz r3, 0x800030D0@l(r3)
/* 801B4B40 001B1880  28 03 00 00 */	cmplwi r3, 0x0
/* 801B4B44 001B1884  41 82 00 10 */	beq lbl_801B4B54
/* 801B4B48 001B1888  80 1F 00 14 */	lwz r0, 0x14(r31)
/* 801B4B4C 001B188C  7C 03 00 50 */	subf r0, r3, r0
/* 801B4B50 001B1890  90 1F 00 14 */	stw r0, 0x14(r31)
lbl_801B4B54:
/* 801B4B54 001B1894  88 1F 00 30 */	lbz r0, 0x30(r31)
/* 801B4B58 001B1898  28 00 00 00 */	cmplwi r0, 0x0
/* 801B4B5C 001B189C  41 82 00 20 */	beq lbl_801B4B7C
/* 801B4B60 001B18A0  80 9F 00 10 */	lwz r4, 0x10(r31)
/* 801B4B64 001B18A4  54 03 18 38 */	slwi r3, r0, 3
/* 801B4B68 001B18A8  80 1F 00 34 */	lwz r0, 0x34(r31)
/* 801B4B6C 001B18AC  7C 64 18 2E */	lwzx r3, r4, r3
/* 801B4B70 001B18B0  54 63 00 3C */	rlwinm r3, r3, 0, 0, 30
/* 801B4B74 001B18B4  7C 03 00 50 */	subf r0, r3, r0
/* 801B4B78 001B18B8  90 1F 00 34 */	stw r0, 0x34(r31)
lbl_801B4B7C:
/* 801B4B7C 001B18BC  88 1F 00 31 */	lbz r0, 0x31(r31)
/* 801B4B80 001B18C0  28 00 00 00 */	cmplwi r0, 0x0
/* 801B4B84 001B18C4  41 82 00 20 */	beq lbl_801B4BA4
/* 801B4B88 001B18C8  80 9F 00 10 */	lwz r4, 0x10(r31)
/* 801B4B8C 001B18CC  54 03 18 38 */	slwi r3, r0, 3
/* 801B4B90 001B18D0  80 1F 00 38 */	lwz r0, 0x38(r31)
/* 801B4B94 001B18D4  7C 64 18 2E */	lwzx r3, r4, r3
/* 801B4B98 001B18D8  54 63 00 3C */	rlwinm r3, r3, 0, 0, 30
/* 801B4B9C 001B18DC  7C 03 00 50 */	subf r0, r3, r0
/* 801B4BA0 001B18E0  90 1F 00 38 */	stw r0, 0x38(r31)
lbl_801B4BA4:
/* 801B4BA4 001B18E4  88 1F 00 32 */	lbz r0, 0x32(r31)
/* 801B4BA8 001B18E8  28 00 00 00 */	cmplwi r0, 0x0
/* 801B4BAC 001B18EC  41 82 00 20 */	beq lbl_801B4BCC
/* 801B4BB0 001B18F0  80 9F 00 10 */	lwz r4, 0x10(r31)
/* 801B4BB4 001B18F4  54 03 18 38 */	slwi r3, r0, 3
/* 801B4BB8 001B18F8  80 1F 00 3C */	lwz r0, 0x3c(r31)
/* 801B4BBC 001B18FC  7C 64 18 2E */	lwzx r3, r4, r3
/* 801B4BC0 001B1900  54 63 00 3C */	rlwinm r3, r3, 0, 0, 30
/* 801B4BC4 001B1904  7C 03 00 50 */	subf r0, r3, r0
/* 801B4BC8 001B1908  90 1F 00 3C */	stw r0, 0x3c(r31)
lbl_801B4BCC:
/* 801B4BCC 001B190C  80 9F 00 28 */	lwz r4, 0x28(r31)
/* 801B4BD0 001B1910  48 00 00 14 */	b func_801B4BE4
lbl_801B4BD4:
/* 801B4BD4 001B1914  80 04 00 04 */	lwz r0, 0x4(r4)
/* 801B4BD8 001B1918  7C 1F 00 50 */	subf r0, r31, r0
/* 801B4BDC 001B191C  90 04 00 04 */	stw r0, 0x4(r4)
/* 801B4BE0 001B1920  38 84 00 08 */	addi r4, r4, 0x8

.global func_801B4BE4
func_801B4BE4:
/* 801B4BE4 001B1924  80 7F 00 28 */	lwz r3, 0x28(r31)
/* 801B4BE8 001B1928  80 1F 00 2C */	lwz r0, 0x2c(r31)
/* 801B4BEC 001B192C  7C 03 02 14 */	add r0, r3, r0
/* 801B4BF0 001B1930  7C 04 00 40 */	cmplw r4, r0
/* 801B4BF4 001B1934  41 80 FF E0 */	blt lbl_801B4BD4
/* 801B4BF8 001B1938  38 C0 00 01 */	li r6, 0x1
/* 801B4BFC 001B193C  38 A0 00 08 */	li r5, 0x8
/* 801B4C00 001B1940  38 60 00 00 */	li r3, 0x0
/* 801B4C04 001B1944  48 00 00 40 */	b func_801B4C44
lbl_801B4C08:
/* 801B4C08 001B1948  88 1F 00 33 */	lbz r0, 0x33(r31)
/* 801B4C0C 001B194C  80 9F 00 10 */	lwz r4, 0x10(r31)
/* 801B4C10 001B1950  7C 06 00 40 */	cmplw r6, r0
/* 801B4C14 001B1954  7C 84 2A 14 */	add r4, r4, r5
/* 801B4C18 001B1958  40 82 00 10 */	bne lbl_801B4C28
/* 801B4C1C 001B195C  98 7F 00 33 */	stb r3, 0x33(r31)
/* 801B4C20 001B1960  90 64 00 00 */	stw r3, 0x0(r4)
/* 801B4C24 001B1964  48 00 00 18 */	b func_801B4C3C
lbl_801B4C28:
/* 801B4C28 001B1968  80 04 00 00 */	lwz r0, 0x0(r4)
/* 801B4C2C 001B196C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B4C30 001B1970  41 82 00 0C */	beq func_801B4C3C
/* 801B4C34 001B1974  7C 1F 00 50 */	subf r0, r31, r0
/* 801B4C38 001B1978  90 04 00 00 */	stw r0, 0x0(r4)

.global func_801B4C3C
func_801B4C3C:
/* 801B4C3C 001B197C  38 A5 00 08 */	addi r5, r5, 0x8
/* 801B4C40 001B1980  38 C6 00 01 */	addi r6, r6, 0x1

.global func_801B4C44
func_801B4C44:
/* 801B4C44 001B1984  80 1F 00 0C */	lwz r0, 0xc(r31)
/* 801B4C48 001B1988  7C 06 00 40 */	cmplw r6, r0
/* 801B4C4C 001B198C  41 80 FF BC */	blt lbl_801B4C08
/* 801B4C50 001B1990  80 1F 00 24 */	lwz r0, 0x24(r31)
/* 801B4C54 001B1994  38 60 00 01 */	li r3, 0x1
/* 801B4C58 001B1998  7C 1F 00 50 */	subf r0, r31, r0
/* 801B4C5C 001B199C  90 1F 00 24 */	stw r0, 0x24(r31)
/* 801B4C60 001B19A0  80 1F 00 28 */	lwz r0, 0x28(r31)
/* 801B4C64 001B19A4  7C 1F 00 50 */	subf r0, r31, r0
/* 801B4C68 001B19A8  90 1F 00 28 */	stw r0, 0x28(r31)
/* 801B4C6C 001B19AC  80 1F 00 10 */	lwz r0, 0x10(r31)
/* 801B4C70 001B19B0  7C 1F 00 50 */	subf r0, r31, r0
/* 801B4C74 001B19B4  90 1F 00 10 */	stw r0, 0x10(r31)
/* 801B4C78 001B19B8  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B4C7C 001B19BC  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B4C80 001B19C0  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801B4C84 001B19C4  38 21 00 18 */	addi r1, r1, 0x18
/* 801B4C88 001B19C8  7C 08 03 A6 */	mtlr r0
/* 801B4C8C 001B19CC  4E 80 00 20 */	blr

.global __OSModuleInit
__OSModuleInit:
/* 801B4C90 001B19D0  3C 80 80 00 */	lis r4, 0x800030CC@ha
/* 801B4C94 001B19D4  38 00 00 00 */	li r0, 0x0
/* 801B4C98 001B19D8  90 04 30 CC */	stw r0, 0x800030CC@l(r4)
/* 801B4C9C 001B19DC  90 04 30 C8 */	stw r0, 0x30c8(r4)
/* 801B4CA0 001B19E0  90 04 30 D0 */	stw r0, 0x30d0(r4)
/* 801B4CA4 001B19E4  4E 80 00 20 */	blr

.global OSInitMessageQueue
OSInitMessageQueue:
/* 801B4CA8 001B19E8  7C 08 02 A6 */	mflr r0
/* 801B4CAC 001B19EC  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B4CB0 001B19F0  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801B4CB4 001B19F4  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801B4CB8 001B19F8  3B E5 00 00 */	addi r31, r5, 0x0
/* 801B4CBC 001B19FC  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801B4CC0 001B1A00  3B C4 00 00 */	addi r30, r4, 0x0
/* 801B4CC4 001B1A04  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801B4CC8 001B1A08  3B A3 00 00 */	addi r29, r3, 0x0
/* 801B4CCC 001B1A0C  48 00 1E 7D */	bl OSInitThreadQueue
/* 801B4CD0 001B1A10  38 7D 00 08 */	addi r3, r29, 0x8
/* 801B4CD4 001B1A14  48 00 1E 75 */	bl OSInitThreadQueue
/* 801B4CD8 001B1A18  93 DD 00 10 */	stw r30, 0x10(r29)
/* 801B4CDC 001B1A1C  38 00 00 00 */	li r0, 0x0
/* 801B4CE0 001B1A20  93 FD 00 14 */	stw r31, 0x14(r29)
/* 801B4CE4 001B1A24  90 1D 00 18 */	stw r0, 0x18(r29)
/* 801B4CE8 001B1A28  90 1D 00 1C */	stw r0, 0x1c(r29)
/* 801B4CEC 001B1A2C  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801B4CF0 001B1A30  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801B4CF4 001B1A34  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801B4CF8 001B1A38  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801B4CFC 001B1A3C  38 21 00 28 */	addi r1, r1, 0x28
/* 801B4D00 001B1A40  7C 08 03 A6 */	mtlr r0
/* 801B4D04 001B1A44  4E 80 00 20 */	blr

.global OSSendMessage
OSSendMessage:
/* 801B4D08 001B1A48  7C 08 02 A6 */	mflr r0
/* 801B4D0C 001B1A4C  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B4D10 001B1A50  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801B4D14 001B1A54  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801B4D18 001B1A58  3B E5 00 00 */	addi r31, r5, 0x0
/* 801B4D1C 001B1A5C  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801B4D20 001B1A60  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801B4D24 001B1A64  3B A4 00 00 */	addi r29, r4, 0x0
/* 801B4D28 001B1A68  93 81 00 18 */	stw r28, 0x18(r1)
/* 801B4D2C 001B1A6C  3B 83 00 00 */	addi r28, r3, 0x0
/* 801B4D30 001B1A70  4B FF ED 15 */	bl OSDisableInterrupts
/* 801B4D34 001B1A74  3B C3 00 00 */	addi r30, r3, 0x0
/* 801B4D38 001B1A78  57 FF 07 FE */	clrlwi r31, r31, 31
/* 801B4D3C 001B1A7C  48 00 00 24 */	b func_801B4D60
lbl_801B4D40:
/* 801B4D40 001B1A80  2C 1F 00 00 */	cmpwi r31, 0x0
/* 801B4D44 001B1A84  40 82 00 14 */	bne lbl_801B4D58
/* 801B4D48 001B1A88  7F C3 F3 78 */	mr r3, r30
/* 801B4D4C 001B1A8C  4B FF ED 21 */	bl OSRestoreInterrupts
/* 801B4D50 001B1A90  38 60 00 00 */	li r3, 0x0
/* 801B4D54 001B1A94  48 00 00 5C */	b func_801B4DB0
lbl_801B4D58:
/* 801B4D58 001B1A98  7F 83 E3 78 */	mr r3, r28
/* 801B4D5C 001B1A9C  48 00 2B F9 */	bl OSSleepThread
func_801B4D60:
/* 801B4D60 001B1AA0  80 DC 00 14 */	lwz r6, 0x14(r28)
/* 801B4D64 001B1AA4  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 801B4D68 001B1AA8  7C 06 20 00 */	cmpw r6, r4
/* 801B4D6C 001B1AAC  40 81 FF D4 */	ble lbl_801B4D40
/* 801B4D70 001B1AB0  80 1C 00 18 */	lwz r0, 0x18(r28)
/* 801B4D74 001B1AB4  38 7C 00 08 */	addi r3, r28, 0x8
/* 801B4D78 001B1AB8  80 BC 00 10 */	lwz r5, 0x10(r28)
/* 801B4D7C 001B1ABC  7C 80 22 14 */	add r4, r0, r4
/* 801B4D80 001B1AC0  7C 04 33 D6 */	divw r0, r4, r6
/* 801B4D84 001B1AC4  7C 00 31 D6 */	mullw r0, r0, r6
/* 801B4D88 001B1AC8  7C 00 20 50 */	subf r0, r0, r4
/* 801B4D8C 001B1ACC  54 00 10 3A */	slwi r0, r0, 2
/* 801B4D90 001B1AD0  7F A5 01 2E */	stwx r29, r5, r0
/* 801B4D94 001B1AD4  80 9C 00 1C */	lwz r4, 0x1c(r28)
/* 801B4D98 001B1AD8  38 04 00 01 */	addi r0, r4, 0x1
/* 801B4D9C 001B1ADC  90 1C 00 1C */	stw r0, 0x1c(r28)
/* 801B4DA0 001B1AE0  48 00 2C A1 */	bl OSWakeupThread
/* 801B4DA4 001B1AE4  7F C3 F3 78 */	mr r3, r30
/* 801B4DA8 001B1AE8  4B FF EC C5 */	bl OSRestoreInterrupts
/* 801B4DAC 001B1AEC  38 60 00 01 */	li r3, 0x1
func_801B4DB0:
/* 801B4DB0 001B1AF0  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801B4DB4 001B1AF4  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801B4DB8 001B1AF8  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801B4DBC 001B1AFC  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801B4DC0 001B1B00  83 81 00 18 */	lwz r28, 0x18(r1)
/* 801B4DC4 001B1B04  38 21 00 28 */	addi r1, r1, 0x28
/* 801B4DC8 001B1B08  7C 08 03 A6 */	mtlr r0
/* 801B4DCC 001B1B0C  4E 80 00 20 */	blr

.global OSReceiveMessage
OSReceiveMessage:
/* 801B4DD0 001B1B10  7C 08 02 A6 */	mflr r0
/* 801B4DD4 001B1B14  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B4DD8 001B1B18  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801B4DDC 001B1B1C  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801B4DE0 001B1B20  3B E3 00 00 */	addi r31, r3, 0x0
/* 801B4DE4 001B1B24  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801B4DE8 001B1B28  3B C5 00 00 */	addi r30, r5, 0x0
/* 801B4DEC 001B1B2C  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801B4DF0 001B1B30  93 81 00 18 */	stw r28, 0x18(r1)
/* 801B4DF4 001B1B34  3B 84 00 00 */	addi r28, r4, 0x0
/* 801B4DF8 001B1B38  4B FF EC 4D */	bl OSDisableInterrupts
/* 801B4DFC 001B1B3C  3B A3 00 00 */	addi r29, r3, 0x0
/* 801B4E00 001B1B40  57 DE 07 FE */	clrlwi r30, r30, 31
/* 801B4E04 001B1B44  48 00 00 24 */	b func_801B4E28
lbl_801B4E08:
/* 801B4E08 001B1B48  2C 1E 00 00 */	cmpwi r30, 0x0
/* 801B4E0C 001B1B4C  40 82 00 14 */	bne lbl_801B4E20
/* 801B4E10 001B1B50  7F A3 EB 78 */	mr r3, r29
/* 801B4E14 001B1B54  4B FF EC 59 */	bl OSRestoreInterrupts
/* 801B4E18 001B1B58  38 60 00 00 */	li r3, 0x0
/* 801B4E1C 001B1B5C  48 00 00 70 */	b func_801B4E8C
lbl_801B4E20:
/* 801B4E20 001B1B60  38 7F 00 08 */	addi r3, r31, 0x8
/* 801B4E24 001B1B64  48 00 2B 31 */	bl OSSleepThread
func_801B4E28:
/* 801B4E28 001B1B68  80 1F 00 1C */	lwz r0, 0x1c(r31)
/* 801B4E2C 001B1B6C  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B4E30 001B1B70  41 82 FF D8 */	beq lbl_801B4E08
/* 801B4E34 001B1B74  28 1C 00 00 */	cmplwi r28, 0x0
/* 801B4E38 001B1B78  41 82 00 18 */	beq lbl_801B4E50
/* 801B4E3C 001B1B7C  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 801B4E40 001B1B80  80 7F 00 10 */	lwz r3, 0x10(r31)
/* 801B4E44 001B1B84  54 00 10 3A */	slwi r0, r0, 2
/* 801B4E48 001B1B88  7C 03 00 2E */	lwzx r0, r3, r0
/* 801B4E4C 001B1B8C  90 1C 00 00 */	stw r0, 0x0(r28)
lbl_801B4E50:
/* 801B4E50 001B1B90  80 BF 00 18 */	lwz r5, 0x18(r31)
/* 801B4E54 001B1B94  7F E3 FB 78 */	mr r3, r31
/* 801B4E58 001B1B98  80 9F 00 14 */	lwz r4, 0x14(r31)
/* 801B4E5C 001B1B9C  38 A5 00 01 */	addi r5, r5, 0x1
/* 801B4E60 001B1BA0  7C 05 23 D6 */	divw r0, r5, r4
/* 801B4E64 001B1BA4  7C 00 21 D6 */	mullw r0, r0, r4
/* 801B4E68 001B1BA8  7C 00 28 50 */	subf r0, r0, r5
/* 801B4E6C 001B1BAC  90 1F 00 18 */	stw r0, 0x18(r31)
/* 801B4E70 001B1BB0  80 9F 00 1C */	lwz r4, 0x1c(r31)
/* 801B4E74 001B1BB4  38 04 FF FF */	addi r0, r4, -0x1
/* 801B4E78 001B1BB8  90 1F 00 1C */	stw r0, 0x1c(r31)
/* 801B4E7C 001B1BBC  48 00 2B C5 */	bl OSWakeupThread
/* 801B4E80 001B1BC0  7F A3 EB 78 */	mr r3, r29
/* 801B4E84 001B1BC4  4B FF EB E9 */	bl OSRestoreInterrupts
/* 801B4E88 001B1BC8  38 60 00 01 */	li r3, 0x1
func_801B4E8C:
/* 801B4E8C 001B1BCC  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801B4E90 001B1BD0  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801B4E94 001B1BD4  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801B4E98 001B1BD8  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801B4E9C 001B1BDC  83 81 00 18 */	lwz r28, 0x18(r1)
/* 801B4EA0 001B1BE0  38 21 00 28 */	addi r1, r1, 0x28
/* 801B4EA4 001B1BE4  7C 08 03 A6 */	mtlr r0
/* 801B4EA8 001B1BE8  4E 80 00 20 */	blr

.global OnReset_1
OnReset_1:
/* 801B4EAC 001B1BEC  7C 08 02 A6 */	mflr r0
/* 801B4EB0 001B1BF0  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B4EB4 001B1BF4  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B4EB8 001B1BF8  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B4EBC 001B1BFC  41 82 00 18 */	beq lbl_801B4ED4
/* 801B4EC0 001B1C00  3C 60 CC 00 */	lis r3, 0xCC004010@ha
/* 801B4EC4 001B1C04  38 00 00 FF */	li r0, 0xff
/* 801B4EC8 001B1C08  B0 03 40 10 */	sth r0, 0xCC004010@l(r3)
/* 801B4ECC 001B1C0C  3C 60 F0 00 */	lis r3, 0xf000
/* 801B4ED0 001B1C10  4B FF EF 3D */	bl __OSMaskInterrupts
lbl_801B4ED4:
/* 801B4ED4 001B1C14  38 60 00 01 */	li r3, 0x1
/* 801B4ED8 001B1C18  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B4EDC 001B1C1C  38 21 00 08 */	addi r1, r1, 0x8
/* 801B4EE0 001B1C20  7C 08 03 A6 */	mtlr r0
/* 801B4EE4 001B1C24  4E 80 00 20 */	blr

.global MEMIntrruptHandler
MEMIntrruptHandler:
/* 801B4EE8 001B1C28  7C 08 02 A6 */	mflr r0
/* 801B4EEC 001B1C2C  3C 60 CC 00 */	lis r3, 0xCC004000@ha
/* 801B4EF0 001B1C30  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B4EF4 001B1C34  39 03 40 00 */	addi r8, r3, 0xCC004000@l
/* 801B4EF8 001B1C38  38 00 00 00 */	li r0, 0x0
/* 801B4EFC 001B1C3C  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B4F00 001B1C40  A0 E3 40 24 */	lhz r7, 0x4024(r3)
/* 801B4F04 001B1C44  3C 60 80 31 */	lis r3, __OSErrorTable@ha
/* 801B4F08 001B1C48  A0 C8 00 22 */	lhz r6, 0x22(r8)
/* 801B4F0C 001B1C4C  38 63 7A 90 */	addi r3, r3, __OSErrorTable@l
/* 801B4F10 001B1C50  A0 A8 00 1E */	lhz r5, 0x1e(r8)
/* 801B4F14 001B1C54  50 E6 81 9E */	rlwimi r6, r7, 16, 6, 15
/* 801B4F18 001B1C58  B0 08 00 20 */	sth r0, 0x20(r8)
/* 801B4F1C 001B1C5C  81 83 00 3C */	lwz r12, 0x3c(r3)
/* 801B4F20 001B1C60  28 0C 00 00 */	cmplwi r12, 0x0
/* 801B4F24 001B1C64  41 82 00 18 */	beq lbl_801B4F3C
/* 801B4F28 001B1C68  7D 88 03 A6 */	mtlr r12
/* 801B4F2C 001B1C6C  38 60 00 0F */	li r3, 0xf
/* 801B4F30 001B1C70  4C C6 31 82 */	crclr 6
/* 801B4F34 001B1C74  4E 80 00 21 */	blrl
/* 801B4F38 001B1C78  48 00 00 0C */	b func_801B4F44
lbl_801B4F3C:
/* 801B4F3C 001B1C7C  38 60 00 0F */	li r3, 0xf
/* 801B4F40 001B1C80  4B FF E7 C5 */	bl __OSUnhandledException
func_801B4F44:
/* 801B4F44 001B1C84  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B4F48 001B1C88  38 21 00 08 */	addi r1, r1, 0x8
/* 801B4F4C 001B1C8C  7C 08 03 A6 */	mtlr r0
/* 801B4F50 001B1C90  4E 80 00 20 */	blr

.global Config24MB
Config24MB:
/* 801B4F54 001B1C94  38 E0 00 00 */	li r7, 0x0
/* 801B4F58 001B1C98  3C 80 00 00 */	lis r4, 0x0
/* 801B4F5C 001B1C9C  38 84 00 02 */	addi r4, r4, 0x2
/* 801B4F60 001B1CA0  3C 60 80 00 */	lis r3, 0x800001FF@ha
/* 801B4F64 001B1CA4  38 63 01 FF */	addi r3, r3, 0x800001FF@l
/* 801B4F68 001B1CA8  3C C0 01 00 */	lis r6, 0x100
/* 801B4F6C 001B1CAC  38 C6 00 02 */	addi r6, r6, 0x2
/* 801B4F70 001B1CB0  3C A0 81 00 */	lis r5, 0x810000FF@ha
/* 801B4F74 001B1CB4  38 A5 00 FF */	addi r5, r5, 0x810000FF@l
/* 801B4F78 001B1CB8  4C 00 01 2C */	isync
/* 801B4F7C 001B1CBC  7C F8 83 A6 */	mtspr 536, r7
/* 801B4F80 001B1CC0  7C 99 83 A6 */	mtspr 537, r4
/* 801B4F84 001B1CC4  7C 78 83 A6 */	mtspr 536, r3
/* 801B4F88 001B1CC8  4C 00 01 2C */	isync
/* 801B4F8C 001B1CCC  7C F0 83 A6 */	mtspr 528, r7
/* 801B4F90 001B1CD0  7C 91 83 A6 */	mtspr 529, r4
/* 801B4F94 001B1CD4  7C 70 83 A6 */	mtspr 528, r3
/* 801B4F98 001B1CD8  4C 00 01 2C */	isync
/* 801B4F9C 001B1CDC  7C FC 83 A6 */	mtspr 540, r7
/* 801B4FA0 001B1CE0  7C DD 83 A6 */	mtspr 541, r6
/* 801B4FA4 001B1CE4  7C BC 83 A6 */	mtspr 540, r5
/* 801B4FA8 001B1CE8  4C 00 01 2C */	isync
/* 801B4FAC 001B1CEC  7C F4 83 A6 */	mtspr 532, r7
/* 801B4FB0 001B1CF0  7C D5 83 A6 */	mtspr 533, r6
/* 801B4FB4 001B1CF4  7C B4 83 A6 */	mtspr 532, r5
/* 801B4FB8 001B1CF8  4C 00 01 2C */	isync
/* 801B4FBC 001B1CFC  7C 60 00 A6 */	mfmsr r3
/* 801B4FC0 001B1D00  60 63 00 30 */	ori r3, r3, 0x30
/* 801B4FC4 001B1D04  7C 7B 03 A6 */	mtspr 27, r3
/* 801B4FC8 001B1D08  7C 68 02 A6 */	mflr r3
/* 801B4FCC 001B1D0C  7C 7A 03 A6 */	mtspr 26, r3
/* 801B4FD0 001B1D10  4C 00 00 64 */	rfi

.global Config48MB
Config48MB:
/* 801B4FD4 001B1D14  38 E0 00 00 */	li r7, 0x0
/* 801B4FD8 001B1D18  3C 80 00 00 */	lis r4, 0x0
/* 801B4FDC 001B1D1C  38 84 00 02 */	addi r4, r4, 0x2
/* 801B4FE0 001B1D20  3C 60 80 00 */	lis r3, 0x800003FF@ha
/* 801B4FE4 001B1D24  38 63 03 FF */	addi r3, r3, 0x800003FF@l
/* 801B4FE8 001B1D28  3C C0 02 00 */	lis r6, 0x200
/* 801B4FEC 001B1D2C  38 C6 00 02 */	addi r6, r6, 0x2
/* 801B4FF0 001B1D30  3C A0 82 00 */	lis r5, 0x820001FF@ha
/* 801B4FF4 001B1D34  38 A5 01 FF */	addi r5, r5, 0x820001FF@l
/* 801B4FF8 001B1D38  4C 00 01 2C */	isync
/* 801B4FFC 001B1D3C  7C F8 83 A6 */	mtspr 536, r7
/* 801B5000 001B1D40  7C 99 83 A6 */	mtspr 537, r4
/* 801B5004 001B1D44  7C 78 83 A6 */	mtspr 536, r3
/* 801B5008 001B1D48  4C 00 01 2C */	isync
/* 801B500C 001B1D4C  7C F0 83 A6 */	mtspr 528, r7
/* 801B5010 001B1D50  7C 91 83 A6 */	mtspr 529, r4
/* 801B5014 001B1D54  7C 70 83 A6 */	mtspr 528, r3
/* 801B5018 001B1D58  4C 00 01 2C */	isync
/* 801B501C 001B1D5C  7C FC 83 A6 */	mtspr 540, r7
/* 801B5020 001B1D60  7C DD 83 A6 */	mtspr 541, r6
/* 801B5024 001B1D64  7C BC 83 A6 */	mtspr 540, r5
/* 801B5028 001B1D68  4C 00 01 2C */	isync
/* 801B502C 001B1D6C  7C F4 83 A6 */	mtspr 532, r7
/* 801B5030 001B1D70  7C D5 83 A6 */	mtspr 533, r6
/* 801B5034 001B1D74  7C B4 83 A6 */	mtspr 532, r5
/* 801B5038 001B1D78  4C 00 01 2C */	isync
/* 801B503C 001B1D7C  7C 60 00 A6 */	mfmsr r3
/* 801B5040 001B1D80  60 63 00 30 */	ori r3, r3, 0x30
/* 801B5044 001B1D84  7C 7B 03 A6 */	mtspr 27, r3
/* 801B5048 001B1D88  7C 68 02 A6 */	mflr r3
/* 801B504C 001B1D8C  7C 7A 03 A6 */	mtspr 26, r3
/* 801B5050 001B1D90  4C 00 00 64 */	rfi

.global RealMode
RealMode:
/* 801B5054 001B1D94  54 63 00 BE */	clrlwi r3, r3, 2
/* 801B5058 001B1D98  7C 7A 03 A6 */	mtspr 26, r3
/* 801B505C 001B1D9C  7C 60 00 A6 */	mfmsr r3
/* 801B5060 001B1DA0  54 63 07 32 */	rlwinm r3, r3, 0, 28, 25
/* 801B5064 001B1DA4  7C 7B 03 A6 */	mtspr 27, r3
/* 801B5068 001B1DA8  4C 00 00 64 */	rfi

.global __OSInitMemoryProtection
__OSInitMemoryProtection:
/* 801B506C 001B1DAC  7C 08 02 A6 */	mflr r0
/* 801B5070 001B1DB0  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B5074 001B1DB4  94 21 FF B0 */	stwu r1, -0x50(r1)
/* 801B5078 001B1DB8  BF 61 00 3C */	stmw r27, 0x3c(r1)
/* 801B507C 001B1DBC  3F 60 80 00 */	lis r27, 0x800000F0@ha
/* 801B5080 001B1DC0  83 FB 00 F0 */	lwz r31, 0x800000F0@l(r27)
/* 801B5084 001B1DC4  4B FF E9 C1 */	bl OSDisableInterrupts
/* 801B5088 001B1DC8  3C 80 CC 00 */	lis r4, 0xCC004000@ha
/* 801B508C 001B1DCC  3B 84 40 00 */	addi r28, r4, 0xCC004000@l
/* 801B5090 001B1DD0  38 00 00 00 */	li r0, 0x0
/* 801B5094 001B1DD4  B0 1C 00 20 */	sth r0, 0x20(r28)
/* 801B5098 001B1DD8  38 00 00 FF */	li r0, 0xff
/* 801B509C 001B1DDC  7C 7E 1B 78 */	mr r30, r3
/* 801B50A0 001B1DE0  B0 1C 00 10 */	sth r0, 0x10(r28)
/* 801B50A4 001B1DE4  3C 60 F0 00 */	lis r3, 0xf000
/* 801B50A8 001B1DE8  4B FF ED 65 */	bl __OSMaskInterrupts
/* 801B50AC 001B1DEC  3C 60 80 1B */	lis r3, MEMIntrruptHandler@ha
/* 801B50B0 001B1DF0  3B A3 4E E8 */	addi r29, r3, MEMIntrruptHandler@l
/* 801B50B4 001B1DF4  7F A4 EB 78 */	mr r4, r29
/* 801B50B8 001B1DF8  38 60 00 00 */	li r3, 0x0
/* 801B50BC 001B1DFC  4B FF E9 D5 */	bl __OSSetInterruptHandler
/* 801B50C0 001B1E00  7F A4 EB 78 */	mr r4, r29
/* 801B50C4 001B1E04  38 60 00 01 */	li r3, 0x1
/* 801B50C8 001B1E08  4B FF E9 C9 */	bl __OSSetInterruptHandler
/* 801B50CC 001B1E0C  7F A4 EB 78 */	mr r4, r29
/* 801B50D0 001B1E10  38 60 00 02 */	li r3, 0x2
/* 801B50D4 001B1E14  4B FF E9 BD */	bl __OSSetInterruptHandler
/* 801B50D8 001B1E18  7F A4 EB 78 */	mr r4, r29
/* 801B50DC 001B1E1C  38 60 00 03 */	li r3, 0x3
/* 801B50E0 001B1E20  4B FF E9 B1 */	bl __OSSetInterruptHandler
/* 801B50E4 001B1E24  7F A4 EB 78 */	mr r4, r29
/* 801B50E8 001B1E28  38 60 00 04 */	li r3, 0x4
/* 801B50EC 001B1E2C  4B FF E9 A5 */	bl __OSSetInterruptHandler
/* 801B50F0 001B1E30  3C 60 80 2E */	lis r3, lbl_802E0A50@ha
/* 801B50F4 001B1E34  38 63 0A 50 */	addi r3, r3, lbl_802E0A50@l
/* 801B50F8 001B1E38  48 00 04 59 */	bl OSRegisterResetFunction
/* 801B50FC 001B1E3C  80 7B 00 F0 */	lwz r3, 0xf0(r27)
/* 801B5100 001B1E40  80 1B 00 28 */	lwz r0, 0x28(r27)
/* 801B5104 001B1E44  7C 03 00 40 */	cmplw r3, r0
/* 801B5108 001B1E48  40 80 00 24 */	bge lbl_801B512C
/* 801B510C 001B1E4C  3C 03 FE 80 */	addis r0, r3, 0xfe80
/* 801B5110 001B1E50  28 00 00 00 */	cmplwi r0, 0x0
/* 801B5114 001B1E54  40 82 00 18 */	bne lbl_801B512C
/* 801B5118 001B1E58  3C 60 81 80 */	lis r3, 0x8180
/* 801B511C 001B1E5C  3C 80 01 80 */	lis r4, 0x180
/* 801B5120 001B1E60  4B FF D2 7D */	bl DCInvalidateRange
/* 801B5124 001B1E64  38 00 00 02 */	li r0, 0x2
/* 801B5128 001B1E68  B0 1C 00 28 */	sth r0, 0x28(r28)
lbl_801B512C:
/* 801B512C 001B1E6C  3C 00 01 80 */	lis r0, 0x180
/* 801B5130 001B1E70  7C 1F 00 40 */	cmplw r31, r0
/* 801B5134 001B1E74  41 81 00 14 */	bgt lbl_801B5148
/* 801B5138 001B1E78  3C 60 80 1B */	lis r3, Config24MB@ha
/* 801B513C 001B1E7C  38 63 4F 54 */	addi r3, r3, Config24MB@l
/* 801B5140 001B1E80  4B FF FF 15 */	bl RealMode
/* 801B5144 001B1E84  48 00 00 1C */	b func_801B5160
lbl_801B5148:
/* 801B5148 001B1E88  3C 00 03 00 */	lis r0, 0x300
/* 801B514C 001B1E8C  7C 1F 00 40 */	cmplw r31, r0
/* 801B5150 001B1E90  41 81 00 10 */	bgt func_801B5160
/* 801B5154 001B1E94  3C 60 80 1B */	lis r3, Config48MB@ha
/* 801B5158 001B1E98  38 63 4F D4 */	addi r3, r3, Config48MB@l
/* 801B515C 001B1E9C  4B FF FE F9 */	bl RealMode
func_801B5160:
/* 801B5160 001B1EA0  3C 60 08 00 */	lis r3, 0x800
/* 801B5164 001B1EA4  4B FF ED 31 */	bl __OSUnmaskInterrupts
/* 801B5168 001B1EA8  7F C3 F3 78 */	mr r3, r30
/* 801B516C 001B1EAC  4B FF E9 01 */	bl OSRestoreInterrupts
/* 801B5170 001B1EB0  BB 61 00 3C */	lmw r27, 0x3c(r1)
/* 801B5174 001B1EB4  80 01 00 54 */	lwz r0, 0x54(r1)
/* 801B5178 001B1EB8  38 21 00 50 */	addi r1, r1, 0x50
/* 801B517C 001B1EBC  7C 08 03 A6 */	mtlr r0
/* 801B5180 001B1EC0  4E 80 00 20 */	blr

.global __OSUnlockAllMutex
__OSUnlockAllMutex:
/* 801B5184 001B1EC4  7C 08 02 A6 */	mflr r0
/* 801B5188 001B1EC8  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B518C 001B1ECC  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B5190 001B1ED0  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B5194 001B1ED4  3B E0 00 00 */	li r31, 0x0
/* 801B5198 001B1ED8  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801B519C 001B1EDC  3B C3 00 00 */	addi r30, r3, 0x0
/* 801B51A0 001B1EE0  48 00 00 30 */	b func_801B51D0
lbl_801B51A4:
/* 801B51A4 001B1EE4  80 A4 00 10 */	lwz r5, 0x10(r4)
/* 801B51A8 001B1EE8  38 64 00 00 */	addi r3, r4, 0x0
/* 801B51AC 001B1EEC  28 05 00 00 */	cmplwi r5, 0x0
/* 801B51B0 001B1EF0  40 82 00 0C */	bne lbl_801B51BC
/* 801B51B4 001B1EF4  93 FE 02 F8 */	stw r31, 0x2f8(r30)
/* 801B51B8 001B1EF8  48 00 00 08 */	b func_801B51C0
lbl_801B51BC:
/* 801B51BC 001B1EFC  93 E5 00 14 */	stw r31, 0x14(r5)
func_801B51C0:
/* 801B51C0 001B1F00  90 BE 02 F4 */	stw r5, 0x2f4(r30)
/* 801B51C4 001B1F04  93 E4 00 0C */	stw r31, 0xc(r4)
/* 801B51C8 001B1F08  93 E4 00 08 */	stw r31, 0x8(r4)
/* 801B51CC 001B1F0C  48 00 28 75 */	bl OSWakeupThread
func_801B51D0:
/* 801B51D0 001B1F10  80 9E 02 F4 */	lwz r4, 0x2f4(r30)
/* 801B51D4 001B1F14  28 04 00 00 */	cmplwi r4, 0x0
/* 801B51D8 001B1F18  40 82 FF CC */	bne lbl_801B51A4
/* 801B51DC 001B1F1C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B51E0 001B1F20  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B51E4 001B1F24  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801B51E8 001B1F28  38 21 00 18 */	addi r1, r1, 0x18
/* 801B51EC 001B1F2C  7C 08 03 A6 */	mtlr r0
/* 801B51F0 001B1F30  4E 80 00 20 */	blr

.global Run
Run:
/* 801B51F4 001B1F34  7C 00 04 AC */	sync
/* 801B51F8 001B1F38  4C 00 01 2C */	isync
/* 801B51FC 001B1F3C  7C 68 03 A6 */	mtlr r3
/* 801B5200 001B1F40  4E 80 00 20 */	blr

.global Callback_0
Callback_0:
/* 801B5204 001B1F44  38 00 00 01 */	li r0, 0x1
/* 801B5208 001B1F48  90 0D AC 80 */	stw r0, Prepared@sda21(r13)
/* 801B520C 001B1F4C  4E 80 00 20 */	blr

.global __OSReboot
__OSReboot:
/* 801B5210 001B1F50  7C 08 02 A6 */	mflr r0
/* 801B5214 001B1F54  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B5218 001B1F58  94 21 FC 80 */	stwu r1, -0x380(r1)
/* 801B521C 001B1F5C  BF 41 03 68 */	stmw r26, 0x368(r1)
/* 801B5220 001B1F60  3C 60 80 31 */	lis r3, lbl_80317AE0@ha
/* 801B5224 001B1F64  3B C3 7A E0 */	addi r30, r3, lbl_80317AE0@l
/* 801B5228 001B1F68  4B FF E8 1D */	bl OSDisableInterrupts
/* 801B522C 001B1F6C  80 AD AC 78 */	lwz r5, SaveStart@sda21(r13)
/* 801B5230 001B1F70  3C 80 81 30 */	lis r4, 0x812FDFF0@ha
/* 801B5234 001B1F74  80 0D AC 7C */	lwz r0, SaveEnd@sda21(r13)
/* 801B5238 001B1F78  3B 60 00 00 */	li r27, 0x0
/* 801B523C 001B1F7C  3F E0 81 80 */	lis r31, 0x817FFFFC@ha
/* 801B5240 001B1F80  38 C0 00 01 */	li r6, 0x1
/* 801B5244 001B1F84  93 7F FF FC */	stw r27, 0x817FFFFC@l(r31)
/* 801B5248 001B1F88  3F 40 80 00 */	lis r26, 0x800030E2@ha
/* 801B524C 001B1F8C  93 7F FF F8 */	stw r27, -0x8(r31)
/* 801B5250 001B1F90  38 61 00 A0 */	addi r3, r1, 0xa0
/* 801B5254 001B1F94  98 DA 30 E2 */	stb r6, 0x800030E2@l(r26)
/* 801B5258 001B1F98  90 A4 DF F0 */	stw r5, 0x812FDFF0@l(r4)
/* 801B525C 001B1F9C  90 04 DF EC */	stw r0, -0x2014(r4)
/* 801B5260 001B1FA0  4B FF DC 8D */	bl OSClearContext
/* 801B5264 001B1FA4  38 61 00 A0 */	addi r3, r1, 0xa0
/* 801B5268 001B1FA8  4B FF DA BD */	bl OSSetCurrentContext
/* 801B526C 001B1FAC  48 00 5B 85 */	bl DVDInit
/* 801B5270 001B1FB0  38 60 00 01 */	li r3, 0x1
/* 801B5274 001B1FB4  48 00 7E F9 */	bl func_801BD16C
/* 801B5278 001B1FB8  48 00 7F 05 */	bl func_801BD17C
/* 801B527C 001B1FBC  3C 60 80 1B */	lis r3, Callback_0@ha
/* 801B5280 001B1FC0  93 6D AC 80 */	stw r27, Prepared@sda21(r13)
/* 801B5284 001B1FC4  38 63 52 04 */	addi r3, r3, Callback_0@l
/* 801B5288 001B1FC8  48 00 83 91 */	bl func_801BD618
/* 801B528C 001B1FCC  38 60 FF E0 */	li r3, -0x20
/* 801B5290 001B1FD0  4B FF EB 7D */	bl __OSMaskInterrupts
/* 801B5294 001B1FD4  38 60 04 00 */	li r3, 0x400
/* 801B5298 001B1FD8  4B FF EB FD */	bl __OSUnmaskInterrupts
/* 801B529C 001B1FDC  4B FF E7 BD */	bl OSEnableInterrupts
/* 801B52A0 001B1FE0  48 00 29 51 */	bl OSGetTime
/* 801B52A4 001B1FE4  7C 9D 23 78 */	mr r29, r4
/* 801B52A8 001B1FE8  7C 7C 1B 78 */	mr r28, r3
/* 801B52AC 001B1FEC  48 00 00 04 */	b func_801B52B0
func_801B52B0:
/* 801B52B0 001B1FF0  80 1A 00 F8 */	lwz r0, 0xf8(r26)
/* 801B52B4 001B1FF4  6F 7A 80 00 */	xoris r26, r27, 0x8000
/* 801B52B8 001B1FF8  54 1B F0 BE */	srwi r27, r0, 2
/* 801B52BC 001B1FFC  48 00 00 04 */	b func_801B52C0
func_801B52C0:
/* 801B52C0 001B2000  48 00 00 40 */	b func_801B5300
lbl_801B52C4:
/* 801B52C4 001B2004  48 00 82 5D */	bl func_801BD520
/* 801B52C8 001B2008  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B52CC 001B200C  41 82 00 2C */	beq lbl_801B52F8
/* 801B52D0 001B2010  48 00 29 21 */	bl OSGetTime
/* 801B52D4 001B2014  7C 9D 20 10 */	subfc r4, r29, r4
/* 801B52D8 001B2018  7C 1C 19 10 */	subfe r0, r28, r3
/* 801B52DC 001B201C  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801B52E0 001B2020  7C 04 D8 10 */	subfc r0, r4, r27
/* 801B52E4 001B2024  7C 63 D1 10 */	subfe r3, r3, r26
/* 801B52E8 001B2028  7C 7A D1 10 */	subfe r3, r26, r26
/* 801B52EC 001B202C  7C 63 00 D0 */	neg r3, r3
/* 801B52F0 001B2030  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B52F4 001B2034  41 82 00 0C */	beq func_801B5300
lbl_801B52F8:
/* 801B52F8 001B2038  80 7F FF FC */	lwz r3, -0x4(r31)
/* 801B52FC 001B203C  48 00 03 49 */	bl __OSDoHotReset
func_801B5300:
/* 801B5300 001B2040  80 0D AC 80 */	lwz r0, Prepared@sda21(r13)
/* 801B5304 001B2044  2C 00 00 01 */	cmpwi r0, 0x1
/* 801B5308 001B2048  40 82 FF BC */	bne lbl_801B52C4
/* 801B530C 001B204C  80 0D AC 0C */	lwz r0, __OSIsGcam@sda21(r13)
/* 801B5310 001B2050  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B5314 001B2054  40 82 00 C8 */	bne lbl_801B53DC
/* 801B5318 001B2058  48 00 82 01 */	bl func_801BD518
/* 801B531C 001B205C  88 03 00 08 */	lbz r0, 0x8(r3)
/* 801B5320 001B2060  28 00 00 00 */	cmplwi r0, 0x0
/* 801B5324 001B2064  41 82 00 0C */	beq lbl_801B5330
/* 801B5328 001B2068  38 00 00 01 */	li r0, 0x1
/* 801B532C 001B206C  48 00 00 08 */	b func_801B5334
lbl_801B5330:
/* 801B5330 001B2070  38 00 00 00 */	li r0, 0x0
func_801B5334:
/* 801B5334 001B2074  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B5338 001B2078  41 82 00 A4 */	beq lbl_801B53DC
/* 801B533C 001B207C  38 60 00 00 */	li r3, 0x0
/* 801B5340 001B2080  48 00 C6 41 */	bl func_801C1980
/* 801B5344 001B2084  38 60 00 00 */	li r3, 0x0
/* 801B5348 001B2088  48 00 C6 65 */	bl func_801C19AC
/* 801B534C 001B208C  38 61 00 70 */	addi r3, r1, 0x70
/* 801B5350 001B2090  38 80 00 00 */	li r4, 0x0
/* 801B5354 001B2094  48 00 7A 95 */	bl func_801BCDE8
/* 801B5358 001B2098  48 00 28 99 */	bl OSGetTime
/* 801B535C 001B209C  7C 9F 23 78 */	mr r31, r4
/* 801B5360 001B20A0  7C 7D 1B 78 */	mr r29, r3
/* 801B5364 001B20A4  48 00 00 04 */	b func_801B5368
func_801B5368:
/* 801B5368 001B20A8  3C 60 80 00 */	lis r3, 0x800000F8@ha
/* 801B536C 001B20AC  80 63 00 F8 */	lwz r3, 0x800000F8@l(r3)
/* 801B5370 001B20B0  38 00 00 00 */	li r0, 0x0
/* 801B5374 001B20B4  6C 1B 80 00 */	xoris r27, r0, 0x8000
/* 801B5378 001B20B8  54 7C F0 BE */	srwi r28, r3, 2
/* 801B537C 001B20BC  3F 40 81 80 */	lis r26, 0x817FFFFC@ha
/* 801B5380 001B20C0  48 00 00 04 */	b func_801B5384
func_801B5384:
/* 801B5384 001B20C4  48 00 00 40 */	b func_801B53C4
lbl_801B5388:
/* 801B5388 001B20C8  48 00 81 99 */	bl func_801BD520
/* 801B538C 001B20CC  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B5390 001B20D0  41 82 00 2C */	beq lbl_801B53BC
/* 801B5394 001B20D4  48 00 28 5D */	bl OSGetTime
/* 801B5398 001B20D8  7C 9F 20 10 */	subfc r4, r31, r4
/* 801B539C 001B20DC  7C 1D 19 10 */	subfe r0, r29, r3
/* 801B53A0 001B20E0  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801B53A4 001B20E4  7C 04 E0 10 */	subfc r0, r4, r28
/* 801B53A8 001B20E8  7C 63 D9 10 */	subfe r3, r3, r27
/* 801B53AC 001B20EC  7C 7B D9 10 */	subfe r3, r27, r27
/* 801B53B0 001B20F0  7C 63 00 D0 */	neg r3, r3
/* 801B53B4 001B20F4  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B53B8 001B20F8  41 82 00 0C */	beq func_801B53C4
lbl_801B53BC:
/* 801B53BC 001B20FC  80 7A FF FC */	lwz r3, 0x817FFFFC@l(r26)
/* 801B53C0 001B2100  48 00 02 85 */	bl __OSDoHotReset
func_801B53C4:
/* 801B53C4 001B2104  38 61 00 70 */	addi r3, r1, 0x70
/* 801B53C8 001B2108  48 00 7C AD */	bl DVDGetCommandBlockStatus
/* 801B53CC 001B210C  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B53D0 001B2110  40 82 FF B8 */	bne lbl_801B5388
/* 801B53D4 001B2114  38 60 00 00 */	li r3, 0x0
/* 801B53D8 001B2118  48 00 C2 C1 */	bl func_801C1698
lbl_801B53DC:
/* 801B53DC 001B211C  7F C4 F3 78 */	mr r4, r30
/* 801B53E0 001B2120  38 61 00 40 */	addi r3, r1, 0x40
/* 801B53E4 001B2124  38 A0 00 20 */	li r5, 0x20
/* 801B53E8 001B2128  38 C0 24 40 */	li r6, 0x2440
/* 801B53EC 001B212C  38 E0 00 00 */	li r7, 0x0
/* 801B53F0 001B2130  39 00 00 00 */	li r8, 0x0
/* 801B53F4 001B2134  48 00 75 E5 */	bl func_801BC9D8
/* 801B53F8 001B2138  48 00 27 F9 */	bl OSGetTime
/* 801B53FC 001B213C  7C 9A 23 78 */	mr r26, r4
/* 801B5400 001B2140  7C 7F 1B 78 */	mr r31, r3
/* 801B5404 001B2144  48 00 00 04 */	b func_801B5408
func_801B5408:
/* 801B5408 001B2148  3C 60 80 00 */	lis r3, 0x800000F8@ha
/* 801B540C 001B214C  80 63 00 F8 */	lwz r3, 0x800000F8@l(r3)
/* 801B5410 001B2150  38 00 00 00 */	li r0, 0x0
/* 801B5414 001B2154  6C 1C 80 00 */	xoris r28, r0, 0x8000
/* 801B5418 001B2158  54 7D F0 BE */	srwi r29, r3, 2
/* 801B541C 001B215C  3F 60 81 80 */	lis r27, 0x817FFFFC@ha
/* 801B5420 001B2160  48 00 00 04 */	b func_801B5424
func_801B5424:
/* 801B5424 001B2164  48 00 00 40 */	b func_801B5464
lbl_801B5428:
/* 801B5428 001B2168  48 00 80 F9 */	bl func_801BD520
/* 801B542C 001B216C  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B5430 001B2170  41 82 00 2C */	beq lbl_801B545C
/* 801B5434 001B2174  48 00 27 BD */	bl OSGetTime
/* 801B5438 001B2178  7C 9A 20 10 */	subfc r4, r26, r4
/* 801B543C 001B217C  7C 1F 19 10 */	subfe r0, r31, r3
/* 801B5440 001B2180  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801B5444 001B2184  7C 04 E8 10 */	subfc r0, r4, r29
/* 801B5448 001B2188  7C 63 E1 10 */	subfe r3, r3, r28
/* 801B544C 001B218C  7C 7C E1 10 */	subfe r3, r28, r28
/* 801B5450 001B2190  7C 63 00 D0 */	neg r3, r3
/* 801B5454 001B2194  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B5458 001B2198  41 82 00 0C */	beq func_801B5464
lbl_801B545C:
/* 801B545C 001B219C  80 7B FF FC */	lwz r3, 0x817FFFFC@l(r27)
/* 801B5460 001B21A0  48 00 01 E5 */	bl __OSDoHotReset
func_801B5464:
/* 801B5464 001B21A4  38 61 00 40 */	addi r3, r1, 0x40
/* 801B5468 001B21A8  48 00 7C 0D */	bl DVDGetCommandBlockStatus
/* 801B546C 001B21AC  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B5470 001B21B0  40 82 FF B8 */	bne lbl_801B5428
/* 801B5474 001B21B4  80 BE 00 18 */	lwz r5, 0x18(r30)
/* 801B5478 001B21B8  38 61 00 10 */	addi r3, r1, 0x10
/* 801B547C 001B21BC  80 DE 00 14 */	lwz r6, 0x14(r30)
/* 801B5480 001B21C0  3C 80 81 30 */	lis r4, 0x8130
/* 801B5484 001B21C4  38 05 00 1F */	addi r0, r5, 0x1f
/* 801B5488 001B21C8  38 C6 00 20 */	addi r6, r6, 0x20
/* 801B548C 001B21CC  54 1A 00 34 */	rlwinm r26, r0, 0, 0, 26
/* 801B5490 001B21D0  7F 45 D3 78 */	mr r5, r26
/* 801B5494 001B21D4  38 C6 24 40 */	addi r6, r6, 0x2440
/* 801B5498 001B21D8  38 E0 00 00 */	li r7, 0x0
/* 801B549C 001B21DC  39 00 00 00 */	li r8, 0x0
/* 801B54A0 001B21E0  48 00 75 39 */	bl func_801BC9D8
/* 801B54A4 001B21E4  48 00 27 4D */	bl OSGetTime
/* 801B54A8 001B21E8  7C 9B 23 78 */	mr r27, r4
/* 801B54AC 001B21EC  7C 7C 1B 78 */	mr r28, r3
/* 801B54B0 001B21F0  48 00 00 04 */	b func_801B54B4
func_801B54B4:
/* 801B54B4 001B21F4  3C 60 80 00 */	lis r3, 0x800000F8@ha
/* 801B54B8 001B21F8  80 63 00 F8 */	lwz r3, 0x800000F8@l(r3)
/* 801B54BC 001B21FC  38 00 00 00 */	li r0, 0x0
/* 801B54C0 001B2200  6C 1F 80 00 */	xoris r31, r0, 0x8000
/* 801B54C4 001B2204  54 7D F0 BE */	srwi r29, r3, 2
/* 801B54C8 001B2208  3F C0 81 80 */	lis r30, 0x817FFFFC@ha
/* 801B54CC 001B220C  48 00 00 04 */	b func_801B54D0
func_801B54D0:
/* 801B54D0 001B2210  48 00 00 40 */	b func_801B5510
lbl_801B54D4:
/* 801B54D4 001B2214  48 00 80 4D */	bl func_801BD520
/* 801B54D8 001B2218  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B54DC 001B221C  41 82 00 2C */	beq lbl_801B5508
/* 801B54E0 001B2220  48 00 27 11 */	bl OSGetTime
/* 801B54E4 001B2224  7C 9B 20 10 */	subfc r4, r27, r4
/* 801B54E8 001B2228  7C 1C 19 10 */	subfe r0, r28, r3
/* 801B54EC 001B222C  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801B54F0 001B2230  7C 04 E8 10 */	subfc r0, r4, r29
/* 801B54F4 001B2234  7C 63 F9 10 */	subfe r3, r3, r31
/* 801B54F8 001B2238  7C 7F F9 10 */	subfe r3, r31, r31
/* 801B54FC 001B223C  7C 63 00 D0 */	neg r3, r3
/* 801B5500 001B2240  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B5504 001B2244  41 82 00 0C */	beq func_801B5510
lbl_801B5508:
/* 801B5508 001B2248  80 7E FF FC */	lwz r3, 0x817FFFFC@l(r30)
/* 801B550C 001B224C  48 00 01 39 */	bl __OSDoHotReset
func_801B5510:
/* 801B5510 001B2250  38 61 00 10 */	addi r3, r1, 0x10
/* 801B5514 001B2254  48 00 7B 61 */	bl DVDGetCommandBlockStatus
/* 801B5518 001B2258  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B551C 001B225C  40 82 FF B8 */	bne lbl_801B54D4
/* 801B5520 001B2260  3C 60 81 30 */	lis r3, 0x8130
/* 801B5524 001B2264  7F 44 D3 78 */	mr r4, r26
/* 801B5528 001B2268  4B FF CF 85 */	bl ICInvalidateRange
/* 801B552C 001B226C  4B FF E5 19 */	bl OSDisableInterrupts
/* 801B5530 001B2270  4B FF CF B1 */	bl ICFlashInvalidate
/* 801B5534 001B2274  3C 60 81 30 */	lis r3, 0x81300004@ha
/* 801B5538 001B2278  4B FF FC BD */	bl Run
/* 801B553C 001B227C  BB 41 03 68 */	lmw r26, 0x368(r1)
/* 801B5540 001B2280  80 01 03 84 */	lwz r0, 0x384(r1)
/* 801B5544 001B2284  38 21 03 80 */	addi r1, r1, 0x380
/* 801B5548 001B2288  7C 08 03 A6 */	mtlr r0
/* 801B554C 001B228C  4E 80 00 20 */	blr

.global OSRegisterResetFunction
OSRegisterResetFunction:
/* 801B5550 001B2290  80 AD AC 88 */	lwz r5, ResetFunctionQueue@sda21(r13)
/* 801B5554 001B2294  48 00 00 08 */	b func_801B555C
lbl_801B5558:
/* 801B5558 001B2298  80 A5 00 08 */	lwz r5, 0x8(r5)

.global func_801B555C
func_801B555C:
/* 801B555C 001B229C  28 05 00 00 */	cmplwi r5, 0x0
/* 801B5560 001B22A0  41 82 00 14 */	beq lbl_801B5574
/* 801B5564 001B22A4  80 85 00 04 */	lwz r4, 0x4(r5)
/* 801B5568 001B22A8  80 03 00 04 */	lwz r0, 0x81300004@l(r3)
/* 801B556C 001B22AC  7C 04 00 40 */	cmplw r4, r0
/* 801B5570 001B22B0  40 81 FF E8 */	ble lbl_801B5558
lbl_801B5574:
/* 801B5574 001B22B4  28 05 00 00 */	cmplwi r5, 0x0
/* 801B5578 001B22B8  40 82 00 34 */	bne lbl_801B55AC
/* 801B557C 001B22BC  38 AD AC 88 */	addi r5, r13, ResetFunctionQueue@sda21
/* 801B5580 001B22C0  84 85 00 04 */	lwzu r4, 0x4(r5)
/* 801B5584 001B22C4  28 04 00 00 */	cmplwi r4, 0x0
/* 801B5588 001B22C8  40 82 00 0C */	bne lbl_801B5594
/* 801B558C 001B22CC  90 6D AC 88 */	stw r3, ResetFunctionQueue@sda21(r13)
/* 801B5590 001B22D0  48 00 00 08 */	b func_801B5598
lbl_801B5594:
/* 801B5594 001B22D4  90 64 00 08 */	stw r3, 0x8(r4)

.global func_801B5598
func_801B5598:
/* 801B5598 001B22D8  90 83 00 0C */	stw r4, 0xc(r3)
/* 801B559C 001B22DC  38 00 00 00 */	li r0, 0x0
/* 801B55A0 001B22E0  90 03 00 08 */	stw r0, 0x8(r3)
/* 801B55A4 001B22E4  90 65 00 00 */	stw r3, 0x0(r5)
/* 801B55A8 001B22E8  4E 80 00 20 */	blr
lbl_801B55AC:
/* 801B55AC 001B22EC  90 A3 00 08 */	stw r5, 0x8(r3)
/* 801B55B0 001B22F0  80 85 00 0C */	lwz r4, 0xc(r5)
/* 801B55B4 001B22F4  90 65 00 0C */	stw r3, 0xc(r5)
/* 801B55B8 001B22F8  28 04 00 00 */	cmplwi r4, 0x0
/* 801B55BC 001B22FC  90 83 00 0C */	stw r4, 0xc(r3)
/* 801B55C0 001B2300  40 82 00 0C */	bne lbl_801B55CC
/* 801B55C4 001B2304  90 6D AC 88 */	stw r3, ResetFunctionQueue@sda21(r13)
/* 801B55C8 001B2308  4E 80 00 20 */	blr
lbl_801B55CC:
/* 801B55CC 001B230C  90 64 00 08 */	stw r3, 0x8(r4)
/* 801B55D0 001B2310  4E 80 00 20 */	blr

.global Reset
Reset:
/* 801B55D4 001B2314  48 00 00 20 */	b func_801B55F4

.global func_801B55D8
func_801B55D8:
/* 801B55D8 001B2318  7D 10 FA A6 */	mfspr r8, 1008
/* 801B55DC 001B231C  61 08 00 08 */	ori r8, r8, 0x8
/* 801B55E0 001B2320  7D 10 FB A6 */	mtspr 1008, r8
/* 801B55E4 001B2324  4C 00 01 2C */	isync
/* 801B55E8 001B2328  7C 00 04 AC */	sync
/* 801B55EC 001B232C  60 00 00 00 */	nop
/* 801B55F0 001B2330  48 00 00 08 */	b func_801B55F8

.global func_801B55F4
func_801B55F4:
/* 801B55F4 001B2334  48 00 00 20 */	b func_801B5614

.global func_801B55F8
func_801B55F8:
/* 801B55F8 001B2338  7C AC 42 E6 */	mftb r5, 268
lbl_801B55FC:
/* 801B55FC 001B233C  7C CC 42 E6 */	mftb r6, 268
/* 801B5600 001B2340  7C E5 30 50 */	subf r7, r5, r6
/* 801B5604 001B2344  28 07 11 24 */	cmplwi r7, 0x1124
/* 801B5608 001B2348  41 80 FF F4 */	blt lbl_801B55FC
/* 801B560C 001B234C  60 00 00 00 */	nop
/* 801B5610 001B2350  48 00 00 08 */	b func_801B5618

.global func_801B5614
func_801B5614:
/* 801B5614 001B2354  48 00 00 20 */	b func_801B5634

.global func_801B5618
func_801B5618:
/* 801B5618 001B2358  3D 00 CC 00 */	lis r8, 0xCC003000@h
/* 801B561C 001B235C  61 08 30 00 */	ori r8, r8, 0xCC003000@l
/* 801B5620 001B2360  38 80 00 03 */	li r4, 0x3
/* 801B5624 001B2364  90 88 00 24 */	stw r4, 0x24(r8)
/* 801B5628 001B2368  90 68 00 24 */	stw r3, 0x24(r8)
/* 801B562C 001B236C  60 00 00 00 */	nop
/* 801B5630 001B2370  48 00 00 08 */	b func_801B5638

.global func_801B5634
func_801B5634:
/* 801B5634 001B2374  48 00 00 0C */	b func_801B5640

.global func_801B5638
func_801B5638:
/* 801B5638 001B2378  60 00 00 00 */	nop
/* 801B563C 001B237C  4B FF FF FC */	b func_801B5638

.global func_801B5640
func_801B5640:
/* 801B5640 001B2380  4B FF FF 98 */	b func_801B55D8

.global __OSDoHotReset
__OSDoHotReset:
/* 801B5644 001B2384  7C 08 02 A6 */	mflr r0
/* 801B5648 001B2388  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B564C 001B238C  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B5650 001B2390  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B5654 001B2394  7C 7F 1B 78 */	mr r31, r3
/* 801B5658 001B2398  4B FF E3 ED */	bl OSDisableInterrupts
/* 801B565C 001B239C  3C 60 CC 00 */	lis r3, 0xCC002000@ha
/* 801B5660 001B23A0  38 63 20 00 */	addi r3, r3, 0xCC002000@l
/* 801B5664 001B23A4  38 00 00 00 */	li r0, 0x0
/* 801B5668 001B23A8  B0 03 00 02 */	sth r0, 0x2(r3)
/* 801B566C 001B23AC  4B FF CE 75 */	bl ICFlashInvalidate
/* 801B5670 001B23B0  57 E3 18 38 */	slwi r3, r31, 3
/* 801B5674 001B23B4  4B FF FF 61 */	bl Reset
/* 801B5678 001B23B8  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B567C 001B23BC  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B5680 001B23C0  38 21 00 18 */	addi r1, r1, 0x18
/* 801B5684 001B23C4  7C 08 03 A6 */	mtlr r0
/* 801B5688 001B23C8  4E 80 00 20 */	blr

.global OSResetSystem
OSResetSystem:
/* 801B568C 001B23CC  7C 08 02 A6 */	mflr r0
/* 801B5690 001B23D0  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B5694 001B23D4  94 21 FF C0 */	stwu r1, -0x40(r1)
/* 801B5698 001B23D8  BF 41 00 28 */	stmw r26, 0x28(r1)
/* 801B569C 001B23DC  7C 7C 1B 78 */	mr r28, r3
/* 801B56A0 001B23E0  7C 9D 23 78 */	mr r29, r4
/* 801B56A4 001B23E4  7C BE 2B 78 */	mr r30, r5
/* 801B56A8 001B23E8  48 00 14 F1 */	bl OSDisableScheduler
/* 801B56AC 001B23EC  4B FF CC 05 */	bl __OSStopAudioSystem
/* 801B56B0 001B23F0  2C 1C 00 02 */	cmpwi r28, 0x2
/* 801B56B4 001B23F4  41 82 00 18 */	beq lbl_801B56CC
/* 801B56B8 001B23F8  2C 1C 00 00 */	cmpwi r28, 0x0
/* 801B56BC 001B23FC  40 82 00 1C */	bne lbl_801B56D8
/* 801B56C0 001B2400  80 0D AC 90 */	lwz r0, lbl_80349650@sda21(r13)
/* 801B56C4 001B2404  28 00 00 00 */	cmplwi r0, 0x0
/* 801B56C8 001B2408  41 82 00 10 */	beq lbl_801B56D8
lbl_801B56CC:
/* 801B56CC 001B240C  38 60 00 01 */	li r3, 0x1
/* 801B56D0 001B2410  48 00 BE 35 */	bl __PADDisableRecalibration
/* 801B56D4 001B2414  7C 7F 1B 78 */	mr r31, r3
lbl_801B56D8:
/* 801B56D8 001B2418  48 00 00 04 */	b func_801B56DC

.global func_801B56DC
func_801B56DC:
/* 801B56DC 001B241C  48 00 00 04 */	b func_801B56E0

.global func_801B56E0
func_801B56E0:
/* 801B56E0 001B2420  83 4D AC 88 */	lwz r26, ResetFunctionQueue@sda21(r13)
/* 801B56E4 001B2424  3B 60 00 00 */	li r27, 0x0
/* 801B56E8 001B2428  48 00 00 04 */	b func_801B56EC

.global func_801B56EC
func_801B56EC:
/* 801B56EC 001B242C  48 00 00 04 */	b func_801B56F0

.global func_801B56F0
func_801B56F0:
/* 801B56F0 001B2430  48 00 00 24 */	b func_801B5714
lbl_801B56F4:
/* 801B56F4 001B2434  38 60 00 00 */	li r3, 0x0
/* 801B56F8 001B2438  81 9A 00 00 */	lwz r12, 0x0(r26)
/* 801B56FC 001B243C  7D 88 03 A6 */	mtlr r12
/* 801B5700 001B2440  4E 80 00 21 */	blrl
/* 801B5704 001B2444  7C 60 00 34 */	cntlzw r0, r3
/* 801B5708 001B2448  83 5A 00 08 */	lwz r26, 0x8(r26)
/* 801B570C 001B244C  54 00 D9 7E */	srwi r0, r0, 5
/* 801B5710 001B2450  7F 7B 03 78 */	or r27, r27, r0

.global func_801B5714
func_801B5714:
/* 801B5714 001B2454  28 1A 00 00 */	cmplwi r26, 0x0
/* 801B5718 001B2458  41 82 00 0C */	beq lbl_801B5724
/* 801B571C 001B245C  2C 1B 00 00 */	cmpwi r27, 0x0
/* 801B5720 001B2460  41 82 FF D4 */	beq lbl_801B56F4
lbl_801B5724:
/* 801B5724 001B2464  48 00 0C ED */	bl __OSSyncSram
/* 801B5728 001B2468  7C 60 00 34 */	cntlzw r0, r3
/* 801B572C 001B246C  54 00 D9 7E */	srwi r0, r0, 5
/* 801B5730 001B2470  7F 7B 03 78 */	or r27, r27, r0
/* 801B5734 001B2474  2C 1B 00 00 */	cmpwi r27, 0x0
/* 801B5738 001B2478  41 82 00 0C */	beq lbl_801B5744
/* 801B573C 001B247C  38 00 00 00 */	li r0, 0x0
/* 801B5740 001B2480  48 00 00 08 */	b func_801B5748
lbl_801B5744:
/* 801B5744 001B2484  38 00 00 01 */	li r0, 0x1

.global func_801B5748
func_801B5748:
/* 801B5748 001B2488  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B574C 001B248C  41 82 FF 94 */	beq func_801B56E0
/* 801B5750 001B2490  2C 1C 00 01 */	cmpwi r28, 0x1
/* 801B5754 001B2494  40 82 00 38 */	bne lbl_801B578C
/* 801B5758 001B2498  2C 1E 00 00 */	cmpwi r30, 0x0
/* 801B575C 001B249C  41 82 00 30 */	beq lbl_801B578C
/* 801B5760 001B24A0  48 00 08 75 */	bl __OSLockSram
/* 801B5764 001B24A4  88 03 00 13 */	lbz r0, 0x13(r3)
/* 801B5768 001B24A8  60 00 00 40 */	ori r0, r0, 0x40
/* 801B576C 001B24AC  98 03 00 13 */	stb r0, 0x13(r3)
/* 801B5770 001B24B0  38 60 00 01 */	li r3, 0x1
/* 801B5774 001B24B4  48 00 0C 55 */	bl __OSUnlockSram
/* 801B5778 001B24B8  48 00 00 04 */	b func_801B577C

.global func_801B577C
func_801B577C:
/* 801B577C 001B24BC  48 00 00 04 */	b func_801B5780

.global func_801B5780
func_801B5780:
/* 801B5780 001B24C0  48 00 0C 91 */	bl __OSSyncSram
/* 801B5784 001B24C4  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B5788 001B24C8  41 82 FF F8 */	beq func_801B5780
lbl_801B578C:
/* 801B578C 001B24CC  4B FF E2 B9 */	bl OSDisableInterrupts
/* 801B5790 001B24D0  83 6D AC 88 */	lwz r27, ResetFunctionQueue@sda21(r13)
/* 801B5794 001B24D4  3B 40 00 00 */	li r26, 0x0
/* 801B5798 001B24D8  48 00 00 04 */	b func_801B579C

.global func_801B579C
func_801B579C:
/* 801B579C 001B24DC  48 00 00 04 */	b func_801B57A0

.global func_801B57A0
func_801B57A0:
/* 801B57A0 001B24E0  48 00 00 24 */	b func_801B57C4
lbl_801B57A4:
/* 801B57A4 001B24E4  38 60 00 01 */	li r3, 0x1
/* 801B57A8 001B24E8  81 9B 00 00 */	lwz r12, 0x0(r27)
/* 801B57AC 001B24EC  7D 88 03 A6 */	mtlr r12
/* 801B57B0 001B24F0  4E 80 00 21 */	blrl
/* 801B57B4 001B24F4  7C 60 00 34 */	cntlzw r0, r3
/* 801B57B8 001B24F8  83 7B 00 08 */	lwz r27, 0x8(r27)
/* 801B57BC 001B24FC  54 00 D9 7E */	srwi r0, r0, 5
/* 801B57C0 001B2500  7F 5A 03 78 */	or r26, r26, r0

.global func_801B57C4
func_801B57C4:
/* 801B57C4 001B2504  28 1B 00 00 */	cmplwi r27, 0x0
/* 801B57C8 001B2508  41 82 00 0C */	beq lbl_801B57D4
/* 801B57CC 001B250C  2C 1A 00 00 */	cmpwi r26, 0x0
/* 801B57D0 001B2510  41 82 FF D4 */	beq lbl_801B57A4
lbl_801B57D4:
/* 801B57D4 001B2514  48 00 0C 3D */	bl __OSSyncSram
/* 801B57D8 001B2518  4B FF CE 31 */	bl LCDisable
/* 801B57DC 001B251C  2C 1C 00 01 */	cmpwi r28, 0x1
/* 801B57E0 001B2520  40 82 00 28 */	bne lbl_801B5808
/* 801B57E4 001B2524  4B FF E2 61 */	bl OSDisableInterrupts
/* 801B57E8 001B2528  3C 60 CC 00 */	lis r3, 0xCC002000@ha
/* 801B57EC 001B252C  38 63 20 00 */	addi r3, r3, 0xCC002000@l
/* 801B57F0 001B2530  38 00 00 00 */	li r0, 0x0
/* 801B57F4 001B2534  B0 03 00 02 */	sth r0, 0x2(r3)
/* 801B57F8 001B2538  4B FF CC E9 */	bl ICFlashInvalidate
/* 801B57FC 001B253C  57 A3 18 38 */	slwi r3, r29, 3
/* 801B5800 001B2540  4B FF FD D5 */	bl Reset
/* 801B5804 001B2544  48 00 00 7C */	b func_801B5880
lbl_801B5808:
/* 801B5808 001B2548  2C 1C 00 00 */	cmpwi r28, 0x0
/* 801B580C 001B254C  40 82 00 74 */	bne func_801B5880
/* 801B5810 001B2550  80 0D AC 90 */	lwz r0, lbl_80349650@sda21(r13)
/* 801B5814 001B2554  3C 60 80 00 */	lis r3, 0x800030EC@ha
/* 801B5818 001B2558  28 00 00 00 */	cmplwi r0, 0x0
/* 801B581C 001B255C  90 03 30 EC */	stw r0, 0x800030EC@l(r3)
/* 801B5820 001B2560  41 82 00 0C */	beq lbl_801B582C
/* 801B5824 001B2564  7F E3 FB 78 */	mr r3, r31
/* 801B5828 001B2568  48 00 BC DD */	bl __PADDisableRecalibration
lbl_801B582C:
/* 801B582C 001B256C  3C 60 80 00 */	lis r3, 0x800000DC@ha
/* 801B5830 001B2570  80 63 00 DC */	lwz r3, 0x800000DC@l(r3)
/* 801B5834 001B2574  48 00 00 04 */	b func_801B5838

.global func_801B5838
func_801B5838:
/* 801B5838 001B2578  48 00 00 04 */	b func_801B583C

.global func_801B583C
func_801B583C:
/* 801B583C 001B257C  48 00 00 2C */	b func_801B5868
lbl_801B5840:
/* 801B5840 001B2580  A0 03 02 C8 */	lhz r0, 0x2c8(r3)
/* 801B5844 001B2584  83 43 02 FC */	lwz r26, 0x2fc(r3)
/* 801B5848 001B2588  2C 00 00 04 */	cmpwi r0, 0x4
/* 801B584C 001B258C  41 82 00 14 */	beq lbl_801B5860
/* 801B5850 001B2590  40 80 00 14 */	bge func_801B5864
/* 801B5854 001B2594  2C 00 00 01 */	cmpwi r0, 0x1
/* 801B5858 001B2598  41 82 00 08 */	beq lbl_801B5860
/* 801B585C 001B259C  48 00 00 08 */	b func_801B5864
lbl_801B5860:
/* 801B5860 001B25A0  48 00 1B 41 */	bl OSCancelThread

.global func_801B5864
func_801B5864:
/* 801B5864 001B25A4  7F 43 D3 78 */	mr r3, r26

.global func_801B5868
func_801B5868:
/* 801B5868 001B25A8  28 03 00 00 */	cmplwi r3, 0x0
/* 801B586C 001B25AC  40 82 FF D4 */	bne lbl_801B5840
/* 801B5870 001B25B0  48 00 13 69 */	bl OSEnableScheduler
/* 801B5874 001B25B4  7F A3 EB 78 */	mr r3, r29
/* 801B5878 001B25B8  7F C4 F3 78 */	mr r4, r30
/* 801B587C 001B25BC  4B FF F9 95 */	bl __OSReboot

.global func_801B5880
func_801B5880:
/* 801B5880 001B25C0  3C 60 80 00 */	lis r3, 0x800000DC@ha
/* 801B5884 001B25C4  80 63 00 DC */	lwz r3, 0x800000DC@l(r3)
/* 801B5888 001B25C8  48 00 00 04 */	b func_801B588C

.global func_801B588C
func_801B588C:
/* 801B588C 001B25CC  48 00 00 04 */	b func_801B5890

.global func_801B5890
func_801B5890:
/* 801B5890 001B25D0  48 00 00 2C */	b func_801B58BC
lbl_801B5894:
/* 801B5894 001B25D4  A0 03 02 C8 */	lhz r0, 0x2c8(r3)
/* 801B5898 001B25D8  83 43 02 FC */	lwz r26, 0x2fc(r3)
/* 801B589C 001B25DC  2C 00 00 04 */	cmpwi r0, 0x4
/* 801B58A0 001B25E0  41 82 00 14 */	beq lbl_801B58B4
/* 801B58A4 001B25E4  40 80 00 14 */	bge func_801B58B8
/* 801B58A8 001B25E8  2C 00 00 01 */	cmpwi r0, 0x1
/* 801B58AC 001B25EC  41 82 00 08 */	beq lbl_801B58B4
/* 801B58B0 001B25F0  48 00 00 08 */	b func_801B58B8
lbl_801B58B4:
/* 801B58B4 001B25F4  48 00 1A ED */	bl OSCancelThread

.global func_801B58B8
func_801B58B8:
/* 801B58B8 001B25F8  7F 43 D3 78 */	mr r3, r26

.global func_801B58BC
func_801B58BC:
/* 801B58BC 001B25FC  28 03 00 00 */	cmplwi r3, 0x0
/* 801B58C0 001B2600  40 82 FF D4 */	bne lbl_801B5894
/* 801B58C4 001B2604  3F 80 80 00 */	lis r28, 0x80000040@ha
/* 801B58C8 001B2608  38 7C 00 40 */	addi r3, r28, 0x80000040@l
/* 801B58CC 001B260C  38 80 00 00 */	li r4, 0x0
/* 801B58D0 001B2610  38 A0 00 8C */	li r5, 0x8c
/* 801B58D4 001B2614  4B E4 FC 11 */	bl memset
/* 801B58D8 001B2618  38 7C 00 D4 */	addi r3, r28, 0xd4
/* 801B58DC 001B261C  38 80 00 00 */	li r4, 0x0
/* 801B58E0 001B2620  38 A0 00 14 */	li r5, 0x14
/* 801B58E4 001B2624  4B E4 FC 01 */	bl memset
/* 801B58E8 001B2628  38 7C 00 F4 */	addi r3, r28, 0xf4
/* 801B58EC 001B262C  38 80 00 00 */	li r4, 0x0
/* 801B58F0 001B2630  38 A0 00 04 */	li r5, 0x4
/* 801B58F4 001B2634  4B E4 FB F1 */	bl memset
/* 801B58F8 001B2638  38 7C 30 00 */	addi r3, r28, 0x3000
/* 801B58FC 001B263C  38 80 00 00 */	li r4, 0x0
/* 801B5900 001B2640  38 A0 00 C0 */	li r5, 0xc0
/* 801B5904 001B2644  4B E4 FB E1 */	bl memset
/* 801B5908 001B2648  38 7C 30 C8 */	addi r3, r28, 0x30c8
/* 801B590C 001B264C  38 80 00 00 */	li r4, 0x0
/* 801B5910 001B2650  38 A0 00 0C */	li r5, 0xc
/* 801B5914 001B2654  4B E4 FB D1 */	bl memset
/* 801B5918 001B2658  38 7C 30 E2 */	addi r3, r28, 0x30e2
/* 801B591C 001B265C  38 80 00 00 */	li r4, 0x0
/* 801B5920 001B2660  38 A0 00 01 */	li r5, 0x1
/* 801B5924 001B2664  4B E4 FB C1 */	bl memset
/* 801B5928 001B2668  7F E3 FB 78 */	mr r3, r31
/* 801B592C 001B266C  48 00 BB D9 */	bl __PADDisableRecalibration
/* 801B5930 001B2670  BB 41 00 28 */	lmw r26, 0x28(r1)
/* 801B5934 001B2674  80 01 00 44 */	lwz r0, 0x44(r1)
/* 801B5938 001B2678  38 21 00 40 */	addi r1, r1, 0x40
/* 801B593C 001B267C  7C 08 03 A6 */	mtlr r0
/* 801B5940 001B2680  4E 80 00 20 */	blr

.global OSGetResetCode
OSGetResetCode:
/* 801B5944 001B2684  3C 60 80 00 */	lis r3, 0x800030E2@ha
/* 801B5948 001B2688  88 03 30 E2 */	lbz r0, 0x800030E2@l(r3)
/* 801B594C 001B268C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B5950 001B2690  41 82 00 0C */	beq lbl_801B595C
/* 801B5954 001B2694  3C 60 80 00 */	lis r3, 0x8000
/* 801B5958 001B2698  48 00 00 18 */	b func_801B5970
lbl_801B595C:
/* 801B595C 001B269C  3C 60 CC 00 */	lis r3, 0xCC003000@ha
/* 801B5960 001B26A0  38 63 30 00 */	addi r3, r3, 0xCC003000@l
/* 801B5964 001B26A4  80 03 00 24 */	lwz r0, 0x24(r3)
/* 801B5968 001B26A8  54 00 00 38 */	rlwinm r0, r0, 0, 0, 28
/* 801B596C 001B26AC  54 03 E8 FE */	srwi r3, r0, 3

.global func_801B5970
func_801B5970:
/* 801B5970 001B26B0  4E 80 00 20 */	blr
__OSResetSWInterruptHandler:
/* 801B5974 001B26B4  7C 08 02 A6 */	mflr r0
/* 801B5978 001B26B8  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B597C 001B26BC  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801B5980 001B26C0  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801B5984 001B26C4  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801B5988 001B26C8  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801B598C 001B26CC  48 00 22 85 */	bl __OSGetSystemTime
/* 801B5990 001B26D0  3C A0 80 00 */	lis r5, 0x800000F8@ha
/* 801B5994 001B26D4  90 8D AC B4 */	stw r4, lbl_80349674@sda21(r13)
/* 801B5998 001B26D8  80 05 00 F8 */	lwz r0, 0x800000F8@l(r5)
/* 801B599C 001B26DC  3C 80 43 1C */	lis r4, 0x431c
/* 801B59A0 001B26E0  38 84 DE 83 */	addi r4, r4, -0x217d
/* 801B59A4 001B26E4  90 6D AC B0 */	stw r3, HoldDown@sda21(r13)
/* 801B59A8 001B26E8  54 00 F0 BE */	srwi r0, r0, 2
/* 801B59AC 001B26EC  7C 04 00 16 */	mulhwu r0, r4, r0
/* 801B59B0 001B26F0  54 00 8B FE */	srwi r0, r0, 15
/* 801B59B4 001B26F4  1C 00 00 64 */	mulli r0, r0, 0x64
/* 801B59B8 001B26F8  54 1D E8 FE */	srwi r29, r0, 3
/* 801B59BC 001B26FC  3B C0 00 00 */	li r30, 0x0
/* 801B59C0 001B2700  3F E0 CC 00 */	lis r31, 0xCC003000@ha
lbl_801B59C4:
/* 801B59C4 001B2704  48 00 22 4D */	bl __OSGetSystemTime
/* 801B59C8 001B2708  80 CD AC B4 */	lwz r6, lbl_80349674@sda21(r13)
/* 801B59CC 001B270C  6F C5 80 00 */	xoris r5, r30, 0x8000
/* 801B59D0 001B2710  80 0D AC B0 */	lwz r0, HoldDown@sda21(r13)
/* 801B59D4 001B2714  7C 86 20 10 */	subfc r4, r6, r4
/* 801B59D8 001B2718  7C 00 19 10 */	subfe r0, r0, r3
/* 801B59DC 001B271C  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801B59E0 001B2720  7C 1D 20 10 */	subfc r0, r29, r4
/* 801B59E4 001B2724  7C A5 19 10 */	subfe r5, r5, r3
/* 801B59E8 001B2728  7C A3 19 10 */	subfe r5, r3, r3
/* 801B59EC 001B272C  7C A5 00 D1 */	neg. r5, r5
/* 801B59F0 001B2730  41 82 00 10 */	beq lbl_801B5A00
/* 801B59F4 001B2734  80 1F 30 00 */	lwz r0, 0xCC003000@l(r31)
/* 801B59F8 001B2738  54 00 03 DF */	rlwinm. r0, r0, 0, 15, 15
/* 801B59FC 001B273C  41 82 FF C8 */	beq lbl_801B59C4
lbl_801B5A00:
/* 801B5A00 001B2740  3C 60 CC 00 */	lis r3, 0xCC003000@ha
/* 801B5A04 001B2744  80 03 30 00 */	lwz r0, 0xCC003000@l(r3)
/* 801B5A08 001B2748  54 00 03 DF */	rlwinm. r0, r0, 0, 15, 15
/* 801B5A0C 001B274C  40 82 00 34 */	bne lbl_801B5A40
/* 801B5A10 001B2750  38 00 00 01 */	li r0, 0x1
/* 801B5A14 001B2754  90 0D AC 9C */	stw r0, Down@sda21(r13)
/* 801B5A18 001B2758  38 60 02 00 */	li r3, 0x200
/* 801B5A1C 001B275C  90 0D AC A0 */	stw r0, LastState@sda21(r13)
/* 801B5A20 001B2760  4B FF E3 ED */	bl __OSMaskInterrupts
/* 801B5A24 001B2764  81 8D AC 98 */	lwz r12, lbl_80349658@sda21(r13)
/* 801B5A28 001B2768  28 0C 00 00 */	cmplwi r12, 0x0
/* 801B5A2C 001B276C  41 82 00 14 */	beq lbl_801B5A40
/* 801B5A30 001B2770  38 00 00 00 */	li r0, 0x0
/* 801B5A34 001B2774  7D 88 03 A6 */	mtlr r12
/* 801B5A38 001B2778  90 0D AC 98 */	stw r0, lbl_80349658@sda21(r13)
/* 801B5A3C 001B277C  4E 80 00 21 */	blrl
lbl_801B5A40:
/* 801B5A40 001B2780  38 00 00 02 */	li r0, 0x2
/* 801B5A44 001B2784  3C 60 CC 00 */	lis r3, 0xCC003000@ha
/* 801B5A48 001B2788  90 03 30 00 */	stw r0, 0xCC003000@l(r3)
/* 801B5A4C 001B278C  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801B5A50 001B2790  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801B5A54 001B2794  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801B5A58 001B2798  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801B5A5C 001B279C  38 21 00 28 */	addi r1, r1, 0x28
/* 801B5A60 001B27A0  7C 08 03 A6 */	mtlr r0
/* 801B5A64 001B27A4  4E 80 00 20 */	blr

.global OSGetResetButtonState
OSGetResetButtonState:
/* 801B5A68 001B27A8  7C 08 02 A6 */	mflr r0
/* 801B5A6C 001B27AC  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B5A70 001B27B0  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B5A74 001B27B4  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B5A78 001B27B8  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801B5A7C 001B27BC  93 A1 00 0C */	stw r29, 0xc(r1)
/* 801B5A80 001B27C0  4B FF DF C5 */	bl OSDisableInterrupts
/* 801B5A84 001B27C4  7C 7E 1B 78 */	mr r30, r3
/* 801B5A88 001B27C8  48 00 21 89 */	bl __OSGetSystemTime
/* 801B5A8C 001B27CC  3C A0 CC 00 */	lis r5, 0xCC003000@ha
/* 801B5A90 001B27D0  80 05 30 00 */	lwz r0, 0xCC003000@l(r5)
/* 801B5A94 001B27D4  54 00 03 DF */	rlwinm. r0, r0, 0, 15, 15
/* 801B5A98 001B27D8  40 82 00 DC */	bne lbl_801B5B74
/* 801B5A9C 001B27DC  80 0D AC 9C */	lwz r0, Down@sda21(r13)
/* 801B5AA0 001B27E0  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B5AA4 001B27E4  40 82 00 40 */	bne lbl_801B5AE4
/* 801B5AA8 001B27E8  80 0D AC A8 */	lwz r0, HoldUp@sda21(r13)
/* 801B5AAC 001B27EC  38 C0 00 00 */	li r6, 0x0
/* 801B5AB0 001B27F0  80 AD AC AC */	lwz r5, lbl_8034966C@sda21(r13)
/* 801B5AB4 001B27F4  38 E0 00 01 */	li r7, 0x1
/* 801B5AB8 001B27F8  7C 00 32 78 */	xor r0, r0, r6
/* 801B5ABC 001B27FC  7C A5 32 78 */	xor r5, r5, r6
/* 801B5AC0 001B2800  90 ED AC 9C */	stw r7, Down@sda21(r13)
/* 801B5AC4 001B2804  7C A0 03 79 */	or. r0, r5, r0
/* 801B5AC8 001B2808  41 82 00 08 */	beq lbl_801B5AD0
/* 801B5ACC 001B280C  48 00 00 08 */	b func_801B5AD4
lbl_801B5AD0:
/* 801B5AD0 001B2810  7C C7 33 78 */	mr r7, r6

.global func_801B5AD4
func_801B5AD4:
/* 801B5AD4 001B2814  90 8D AC B4 */	stw r4, lbl_80349674@sda21(r13)
/* 801B5AD8 001B2818  7C FD 3B 78 */	mr r29, r7
/* 801B5ADC 001B281C  90 6D AC B0 */	stw r3, HoldDown@sda21(r13)
/* 801B5AE0 001B2820  48 00 01 48 */	b func_801B5C28
lbl_801B5AE4:
/* 801B5AE4 001B2824  80 0D AC A8 */	lwz r0, HoldUp@sda21(r13)
/* 801B5AE8 001B2828  39 20 00 00 */	li r9, 0x0
/* 801B5AEC 001B282C  80 AD AC AC */	lwz r5, lbl_8034966C@sda21(r13)
/* 801B5AF0 001B2830  39 40 00 01 */	li r10, 0x1
/* 801B5AF4 001B2834  7C 00 4A 78 */	xor r0, r0, r9
/* 801B5AF8 001B2838  7C A5 4A 78 */	xor r5, r5, r9
/* 801B5AFC 001B283C  7C A0 03 79 */	or. r0, r5, r0
/* 801B5B00 001B2840  40 82 00 58 */	bne lbl_801B5B58
/* 801B5B04 001B2844  3C C0 80 00 */	lis r6, 0x800000F8@ha
/* 801B5B08 001B2848  80 AD AC B4 */	lwz r5, lbl_80349674@sda21(r13)
/* 801B5B0C 001B284C  80 E6 00 F8 */	lwz r7, 0x800000F8@l(r6)
/* 801B5B10 001B2850  3C C0 43 1C */	lis r6, 0x431c
/* 801B5B14 001B2854  39 06 DE 83 */	addi r8, r6, -0x217d
/* 801B5B18 001B2858  80 0D AC B0 */	lwz r0, HoldDown@sda21(r13)
/* 801B5B1C 001B285C  54 E6 F0 BE */	srwi r6, r7, 2
/* 801B5B20 001B2860  7C C8 30 16 */	mulhwu r6, r8, r6
/* 801B5B24 001B2864  54 C6 8B FE */	srwi r6, r6, 15
/* 801B5B28 001B2868  1C C6 00 64 */	mulli r6, r6, 0x64
/* 801B5B2C 001B286C  7C E5 20 10 */	subfc r7, r5, r4
/* 801B5B30 001B2870  7C 00 19 10 */	subfe r0, r0, r3
/* 801B5B34 001B2874  54 C8 E8 FE */	srwi r8, r6, 3
/* 801B5B38 001B2878  6C 05 80 00 */	xoris r5, r0, 0x8000
/* 801B5B3C 001B287C  6D 26 80 00 */	xoris r6, r9, 0x8000
/* 801B5B40 001B2880  7C 07 40 10 */	subfc r0, r7, r8
/* 801B5B44 001B2884  7C A5 31 10 */	subfe r5, r5, r6
/* 801B5B48 001B2888  7C A6 31 10 */	subfe r5, r6, r6
/* 801B5B4C 001B288C  7C A5 00 D1 */	neg. r5, r5
/* 801B5B50 001B2890  40 82 00 08 */	bne lbl_801B5B58
/* 801B5B54 001B2894  7D 2A 4B 78 */	mr r10, r9
lbl_801B5B58:
/* 801B5B58 001B2898  2C 0A 00 00 */	cmpwi r10, 0x0
/* 801B5B5C 001B289C  41 82 00 0C */	beq lbl_801B5B68
/* 801B5B60 001B28A0  38 00 00 01 */	li r0, 0x1
/* 801B5B64 001B28A4  48 00 00 08 */	b func_801B5B6C
lbl_801B5B68:
/* 801B5B68 001B28A8  38 00 00 00 */	li r0, 0x0

.global func_801B5B6C
func_801B5B6C:
/* 801B5B6C 001B28AC  7C 1D 03 78 */	mr r29, r0
/* 801B5B70 001B28B0  48 00 00 B8 */	b func_801B5C28
lbl_801B5B74:
/* 801B5B74 001B28B4  80 0D AC 9C */	lwz r0, Down@sda21(r13)
/* 801B5B78 001B28B8  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B5B7C 001B28BC  41 82 00 34 */	beq lbl_801B5BB0
/* 801B5B80 001B28C0  80 AD AC A0 */	lwz r5, LastState@sda21(r13)
/* 801B5B84 001B28C4  38 00 00 00 */	li r0, 0x0
/* 801B5B88 001B28C8  90 0D AC 9C */	stw r0, Down@sda21(r13)
/* 801B5B8C 001B28CC  2C 05 00 00 */	cmpwi r5, 0x0
/* 801B5B90 001B28D0  3B A5 00 00 */	addi r29, r5, 0x0
/* 801B5B94 001B28D4  41 82 00 10 */	beq lbl_801B5BA4
/* 801B5B98 001B28D8  90 8D AC AC */	stw r4, lbl_8034966C@sda21(r13)
/* 801B5B9C 001B28DC  90 6D AC A8 */	stw r3, HoldUp@sda21(r13)
/* 801B5BA0 001B28E0  48 00 00 88 */	b func_801B5C28
lbl_801B5BA4:
/* 801B5BA4 001B28E4  90 0D AC AC */	stw r0, lbl_8034966C@sda21(r13)
/* 801B5BA8 001B28E8  90 0D AC A8 */	stw r0, HoldUp@sda21(r13)
/* 801B5BAC 001B28EC  48 00 00 7C */	b func_801B5C28
lbl_801B5BB0:
/* 801B5BB0 001B28F0  80 CD AC A8 */	lwz r6, HoldUp@sda21(r13)
/* 801B5BB4 001B28F4  39 00 00 00 */	li r8, 0x0
/* 801B5BB8 001B28F8  80 ED AC AC */	lwz r7, lbl_8034966C@sda21(r13)
/* 801B5BBC 001B28FC  7C C0 42 78 */	xor r0, r6, r8
/* 801B5BC0 001B2900  7C E5 42 78 */	xor r5, r7, r8
/* 801B5BC4 001B2904  7C A0 03 79 */	or. r0, r5, r0
/* 801B5BC8 001B2908  41 82 00 50 */	beq lbl_801B5C18
/* 801B5BCC 001B290C  3C A0 80 00 */	lis r5, 0x800000F8@ha
/* 801B5BD0 001B2910  80 05 00 F8 */	lwz r0, 0x800000F8@l(r5)
/* 801B5BD4 001B2914  3C A0 10 62 */	lis r5, 0x1062
/* 801B5BD8 001B2918  38 A5 4D D3 */	addi r5, r5, 0x4dd3
/* 801B5BDC 001B291C  54 00 F0 BE */	srwi r0, r0, 2
/* 801B5BE0 001B2920  7C 05 00 16 */	mulhwu r0, r5, r0
/* 801B5BE4 001B2924  54 00 D1 BE */	srwi r0, r0, 6
/* 801B5BE8 001B2928  1C 00 00 28 */	mulli r0, r0, 0x28
/* 801B5BEC 001B292C  7C E7 20 10 */	subfc r7, r7, r4
/* 801B5BF0 001B2930  7C A6 19 10 */	subfe r5, r6, r3
/* 801B5BF4 001B2934  6C A6 80 00 */	xoris r6, r5, 0x8000
/* 801B5BF8 001B2938  6D 05 80 00 */	xoris r5, r8, 0x8000
/* 801B5BFC 001B293C  7C 00 38 10 */	subfc r0, r0, r7
/* 801B5C00 001B2940  7C A5 31 10 */	subfe r5, r5, r6
/* 801B5C04 001B2944  7C A6 31 10 */	subfe r5, r6, r6
/* 801B5C08 001B2948  7C A5 00 D1 */	neg. r5, r5
/* 801B5C0C 001B294C  41 82 00 0C */	beq lbl_801B5C18
/* 801B5C10 001B2950  3B A0 00 01 */	li r29, 0x1
/* 801B5C14 001B2954  48 00 00 14 */	b func_801B5C28
lbl_801B5C18:
/* 801B5C18 001B2958  38 00 00 00 */	li r0, 0x0
/* 801B5C1C 001B295C  90 0D AC AC */	stw r0, lbl_8034966C@sda21(r13)
/* 801B5C20 001B2960  3B A0 00 00 */	li r29, 0x0
/* 801B5C24 001B2964  90 0D AC A8 */	stw r0, HoldUp@sda21(r13)

.global func_801B5C28
func_801B5C28:
/* 801B5C28 001B2968  3C A0 80 00 */	lis r5, 0x800030E3@ha
/* 801B5C2C 001B296C  93 AD AC A0 */	stw r29, LastState@sda21(r13)
/* 801B5C30 001B2970  88 05 30 E3 */	lbz r0, 0x800030E3@l(r5)
/* 801B5C34 001B2974  54 00 06 FF */	clrlwi. r0, r0, 27
/* 801B5C38 001B2978  41 82 00 A0 */	beq func_801B5CD8
/* 801B5C3C 001B297C  1D 40 00 3C */	mulli r10, r0, 0x3c
/* 801B5C40 001B2980  80 05 00 F8 */	lwz r0, 0xf8(r5)
/* 801B5C44 001B2984  81 2D AC 3C */	lwz r9, lbl_803495FC@sda21(r13)
/* 801B5C48 001B2988  81 0D AC 38 */	lwz r8, __OSStartTime@sda21(r13)
/* 801B5C4C 001B298C  54 06 F0 BE */	srwi r6, r0, 2
/* 801B5C50 001B2990  7D 40 FE 70 */	srawi r0, r10, 31
/* 801B5C54 001B2994  7C E0 31 D6 */	mullw r7, r0, r6
/* 801B5C58 001B2998  7C 0A 30 16 */	mulhwu r0, r10, r6
/* 801B5C5C 001B299C  7C AA 31 D6 */	mullw r5, r10, r6
/* 801B5C60 001B29A0  7D 29 28 14 */	addc r9, r9, r5
/* 801B5C64 001B29A4  3B E0 00 00 */	li r31, 0x0
/* 801B5C68 001B29A8  7C E7 02 14 */	add r7, r7, r0
/* 801B5C6C 001B29AC  7C 0A F9 D6 */	mullw r0, r10, r31
/* 801B5C70 001B29B0  7C 07 02 14 */	add r0, r7, r0
/* 801B5C74 001B29B4  7D 08 01 14 */	adde r8, r8, r0
/* 801B5C78 001B29B8  6D 07 80 00 */	xoris r7, r8, 0x8000
/* 801B5C7C 001B29BC  6C 65 80 00 */	xoris r5, r3, 0x8000
/* 801B5C80 001B29C0  7C 04 48 10 */	subfc r0, r4, r9
/* 801B5C84 001B29C4  7C A5 39 10 */	subfe r5, r5, r7
/* 801B5C88 001B29C8  7C A7 39 10 */	subfe r5, r7, r7
/* 801B5C8C 001B29CC  7C A5 00 D1 */	neg. r5, r5
/* 801B5C90 001B29D0  41 82 00 48 */	beq func_801B5CD8
/* 801B5C94 001B29D4  7C 89 20 10 */	subfc r4, r9, r4
/* 801B5C98 001B29D8  7C 68 19 10 */	subfe r3, r8, r3
/* 801B5C9C 001B29DC  38 A0 00 00 */	li r5, 0x0
/* 801B5CA0 001B29E0  48 08 03 7D */	bl __div2i
/* 801B5CA4 001B29E4  38 A0 00 00 */	li r5, 0x0
/* 801B5CA8 001B29E8  38 C0 00 02 */	li r6, 0x2
/* 801B5CAC 001B29EC  48 08 03 71 */	bl __div2i
/* 801B5CB0 001B29F0  38 00 00 01 */	li r0, 0x1
/* 801B5CB4 001B29F4  7C 84 00 38 */	and r4, r4, r0
/* 801B5CB8 001B29F8  7C 60 F8 38 */	and r0, r3, r31
/* 801B5CBC 001B29FC  7C 83 FA 78 */	xor r3, r4, r31
/* 801B5CC0 001B2A00  7C 00 FA 78 */	xor r0, r0, r31
/* 801B5CC4 001B2A04  7C 60 03 79 */	or. r0, r3, r0
/* 801B5CC8 001B2A08  40 82 00 0C */	bne lbl_801B5CD4
/* 801B5CCC 001B2A0C  3B A0 00 01 */	li r29, 0x1
/* 801B5CD0 001B2A10  48 00 00 08 */	b func_801B5CD8
lbl_801B5CD4:
/* 801B5CD4 001B2A14  3B A0 00 00 */	li r29, 0x0

.global func_801B5CD8
func_801B5CD8:
/* 801B5CD8 001B2A18  7F C3 F3 78 */	mr r3, r30
/* 801B5CDC 001B2A1C  4B FF DD 91 */	bl OSRestoreInterrupts
/* 801B5CE0 001B2A20  7F A3 EB 78 */	mr r3, r29
/* 801B5CE4 001B2A24  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B5CE8 001B2A28  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B5CEC 001B2A2C  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801B5CF0 001B2A30  83 A1 00 0C */	lwz r29, 0xc(r1)
/* 801B5CF4 001B2A34  38 21 00 18 */	addi r1, r1, 0x18
/* 801B5CF8 001B2A38  7C 08 03 A6 */	mtlr r0
/* 801B5CFC 001B2A3C  4E 80 00 20 */	blr

.global OSGetResetSwitchState
OSGetResetSwitchState:
/* 801B5D00 001B2A40  7C 08 02 A6 */	mflr r0
/* 801B5D04 001B2A44  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B5D08 001B2A48  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B5D0C 001B2A4C  4B FF FD 5D */	bl OSGetResetButtonState
/* 801B5D10 001B2A50  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B5D14 001B2A54  38 21 00 08 */	addi r1, r1, 0x8
/* 801B5D18 001B2A58  7C 08 03 A6 */	mtlr r0
/* 801B5D1C 001B2A5C  4E 80 00 20 */	blr
WriteSramCallback:
/* 801B5D20 001B2A60  7C 08 02 A6 */	mflr r0
/* 801B5D24 001B2A64  3C 60 80 31 */	lis r3, Scb@ha
/* 801B5D28 001B2A68  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B5D2C 001B2A6C  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B5D30 001B2A70  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B5D34 001B2A74  3B E3 7B 00 */	addi r31, r3, Scb@l
/* 801B5D38 001B2A78  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801B5D3C 001B2A7C  3B DF 00 40 */	addi r30, r31, 0x40
/* 801B5D40 001B2A80  80 9F 00 40 */	lwz r4, 0x40(r31)
/* 801B5D44 001B2A84  7C 7F 22 14 */	add r3, r31, r4
/* 801B5D48 001B2A88  20 A4 00 40 */	subfic r5, r4, 0x40
/* 801B5D4C 001B2A8C  48 00 00 35 */	bl WriteSram
/* 801B5D50 001B2A90  90 7F 00 4C */	stw r3, 0x4c(r31)
/* 801B5D54 001B2A94  80 1F 00 4C */	lwz r0, 0x4c(r31)
/* 801B5D58 001B2A98  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B5D5C 001B2A9C  41 82 00 0C */	beq lbl_801B5D68
/* 801B5D60 001B2AA0  38 00 00 40 */	li r0, 0x40
/* 801B5D64 001B2AA4  90 1E 00 00 */	stw r0, 0x0(r30)
lbl_801B5D68:
/* 801B5D68 001B2AA8  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B5D6C 001B2AAC  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B5D70 001B2AB0  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801B5D74 001B2AB4  38 21 00 18 */	addi r1, r1, 0x18
/* 801B5D78 001B2AB8  7C 08 03 A6 */	mtlr r0
/* 801B5D7C 001B2ABC  4E 80 00 20 */	blr

.global WriteSram
WriteSram:
/* 801B5D80 001B2AC0  7C 08 02 A6 */	mflr r0
/* 801B5D84 001B2AC4  3C C0 80 1B */	lis r6, WriteSramCallback@ha
/* 801B5D88 001B2AC8  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B5D8C 001B2ACC  38 06 5D 20 */	addi r0, r6, WriteSramCallback@l
/* 801B5D90 001B2AD0  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801B5D94 001B2AD4  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801B5D98 001B2AD8  3B E4 00 00 */	addi r31, r4, 0x0
/* 801B5D9C 001B2ADC  38 80 00 01 */	li r4, 0x1
/* 801B5DA0 001B2AE0  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801B5DA4 001B2AE4  3B C5 00 00 */	addi r30, r5, 0x0
/* 801B5DA8 001B2AE8  7C 05 03 78 */	mr r5, r0
/* 801B5DAC 001B2AEC  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801B5DB0 001B2AF0  3B A3 00 00 */	addi r29, r3, 0x0
/* 801B5DB4 001B2AF4  38 60 00 00 */	li r3, 0x0
/* 801B5DB8 001B2AF8  48 04 18 5D */	bl EXILock
/* 801B5DBC 001B2AFC  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B5DC0 001B2B00  40 82 00 0C */	bne lbl_801B5DCC
/* 801B5DC4 001B2B04  38 60 00 00 */	li r3, 0x0
/* 801B5DC8 001B2B08  48 00 00 B4 */	b func_801B5E7C
lbl_801B5DCC:
/* 801B5DCC 001B2B0C  38 60 00 00 */	li r3, 0x0
/* 801B5DD0 001B2B10  38 80 00 01 */	li r4, 0x1
/* 801B5DD4 001B2B14  38 A0 00 03 */	li r5, 0x3
/* 801B5DD8 001B2B18  48 04 10 7D */	bl EXISelect
/* 801B5DDC 001B2B1C  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B5DE0 001B2B20  40 82 00 14 */	bne lbl_801B5DF4
/* 801B5DE4 001B2B24  38 60 00 00 */	li r3, 0x0
/* 801B5DE8 001B2B28  48 04 19 21 */	bl EXIUnlock
/* 801B5DEC 001B2B2C  38 60 00 00 */	li r3, 0x0
/* 801B5DF0 001B2B30  48 00 00 8C */	b func_801B5E7C
lbl_801B5DF4:
/* 801B5DF4 001B2B34  57 FF 30 32 */	slwi r31, r31, 6
/* 801B5DF8 001B2B38  38 1F 01 00 */	addi r0, r31, 0x100
/* 801B5DFC 001B2B3C  64 00 A0 00 */	oris r0, r0, 0xa000
/* 801B5E00 001B2B40  90 01 00 14 */	stw r0, 0x14(r1)
/* 801B5E04 001B2B44  38 81 00 14 */	addi r4, r1, 0x14
/* 801B5E08 001B2B48  38 60 00 00 */	li r3, 0x0
/* 801B5E0C 001B2B4C  38 A0 00 04 */	li r5, 0x4
/* 801B5E10 001B2B50  38 C0 00 01 */	li r6, 0x1
/* 801B5E14 001B2B54  38 E0 00 00 */	li r7, 0x0
/* 801B5E18 001B2B58  48 04 04 D5 */	bl EXIImm
/* 801B5E1C 001B2B5C  7C 60 00 34 */	cntlzw r0, r3
/* 801B5E20 001B2B60  54 1F D9 7E */	srwi r31, r0, 5
/* 801B5E24 001B2B64  38 60 00 00 */	li r3, 0x0
/* 801B5E28 001B2B68  48 04 08 AD */	bl EXISync
/* 801B5E2C 001B2B6C  7C 60 00 34 */	cntlzw r0, r3
/* 801B5E30 001B2B70  54 00 D9 7E */	srwi r0, r0, 5
/* 801B5E34 001B2B74  38 9D 00 00 */	addi r4, r29, 0x0
/* 801B5E38 001B2B78  38 BE 00 00 */	addi r5, r30, 0x0
/* 801B5E3C 001B2B7C  7F FF 03 78 */	or r31, r31, r0
/* 801B5E40 001B2B80  38 60 00 00 */	li r3, 0x0
/* 801B5E44 001B2B84  38 C0 00 01 */	li r6, 0x1
/* 801B5E48 001B2B88  48 04 07 01 */	bl EXIImmEx
/* 801B5E4C 001B2B8C  7C 60 00 34 */	cntlzw r0, r3
/* 801B5E50 001B2B90  54 00 D9 7E */	srwi r0, r0, 5
/* 801B5E54 001B2B94  7F FF 03 78 */	or r31, r31, r0
/* 801B5E58 001B2B98  38 60 00 00 */	li r3, 0x0
/* 801B5E5C 001B2B9C  48 04 11 25 */	bl EXIDeselect
/* 801B5E60 001B2BA0  7C 60 00 34 */	cntlzw r0, r3
/* 801B5E64 001B2BA4  54 00 D9 7E */	srwi r0, r0, 5
/* 801B5E68 001B2BA8  7F FF 03 78 */	or r31, r31, r0
/* 801B5E6C 001B2BAC  38 60 00 00 */	li r3, 0x0
/* 801B5E70 001B2BB0  48 04 18 99 */	bl EXIUnlock
/* 801B5E74 001B2BB4  7F E0 00 34 */	cntlzw r0, r31
/* 801B5E78 001B2BB8  54 03 D9 7E */	srwi r3, r0, 5
func_801B5E7C:
/* 801B5E7C 001B2BBC  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801B5E80 001B2BC0  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801B5E84 001B2BC4  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801B5E88 001B2BC8  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801B5E8C 001B2BCC  38 21 00 28 */	addi r1, r1, 0x28
/* 801B5E90 001B2BD0  7C 08 03 A6 */	mtlr r0
/* 801B5E94 001B2BD4  4E 80 00 20 */	blr

.global __OSInitSram
__OSInitSram:
/* 801B5E98 001B2BD8  7C 08 02 A6 */	mflr r0
/* 801B5E9C 001B2BDC  3C 60 80 31 */	lis r3, Scb@ha
/* 801B5EA0 001B2BE0  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B5EA4 001B2BE4  38 80 00 40 */	li r4, 0x40
/* 801B5EA8 001B2BE8  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B5EAC 001B2BEC  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B5EB0 001B2BF0  3B E0 00 00 */	li r31, 0x0
/* 801B5EB4 001B2BF4  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801B5EB8 001B2BF8  3B C3 7B 00 */	addi r30, r3, Scb@l
/* 801B5EBC 001B2BFC  38 7E 00 00 */	addi r3, r30, 0x0
/* 801B5EC0 001B2C00  93 FE 00 44 */	stw r31, 0x44(r30)
/* 801B5EC4 001B2C04  93 FE 00 48 */	stw r31, 0x48(r30)
/* 801B5EC8 001B2C08  4B FF C4 D5 */	bl DCInvalidateRange
/* 801B5ECC 001B2C0C  38 60 00 00 */	li r3, 0x0
/* 801B5ED0 001B2C10  38 80 00 01 */	li r4, 0x1
/* 801B5ED4 001B2C14  38 A0 00 00 */	li r5, 0x0
/* 801B5ED8 001B2C18  48 04 17 3D */	bl EXILock
/* 801B5EDC 001B2C1C  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B5EE0 001B2C20  40 82 00 08 */	bne lbl_801B5EE8
/* 801B5EE4 001B2C24  48 00 00 C4 */	b func_801B5FA8
lbl_801B5EE8:
/* 801B5EE8 001B2C28  38 60 00 00 */	li r3, 0x0
/* 801B5EEC 001B2C2C  38 80 00 01 */	li r4, 0x1
/* 801B5EF0 001B2C30  38 A0 00 03 */	li r5, 0x3
/* 801B5EF4 001B2C34  48 04 0F 61 */	bl EXISelect
/* 801B5EF8 001B2C38  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B5EFC 001B2C3C  40 82 00 10 */	bne lbl_801B5F0C
/* 801B5F00 001B2C40  38 60 00 00 */	li r3, 0x0
/* 801B5F04 001B2C44  48 04 18 05 */	bl EXIUnlock
/* 801B5F08 001B2C48  48 00 00 A0 */	b func_801B5FA8
lbl_801B5F0C:
/* 801B5F0C 001B2C4C  3C 60 20 00 */	lis r3, 0x2000
/* 801B5F10 001B2C50  38 03 01 00 */	addi r0, r3, 0x100
/* 801B5F14 001B2C54  90 01 00 08 */	stw r0, 0x8(r1)
/* 801B5F18 001B2C58  38 81 00 08 */	addi r4, r1, 0x8
/* 801B5F1C 001B2C5C  38 60 00 00 */	li r3, 0x0
/* 801B5F20 001B2C60  38 A0 00 04 */	li r5, 0x4
/* 801B5F24 001B2C64  38 C0 00 01 */	li r6, 0x1
/* 801B5F28 001B2C68  38 E0 00 00 */	li r7, 0x0
/* 801B5F2C 001B2C6C  48 04 03 C1 */	bl EXIImm
/* 801B5F30 001B2C70  7C 60 00 34 */	cntlzw r0, r3
/* 801B5F34 001B2C74  54 1F D9 7E */	srwi r31, r0, 5
/* 801B5F38 001B2C78  38 60 00 00 */	li r3, 0x0
/* 801B5F3C 001B2C7C  48 04 07 99 */	bl EXISync
/* 801B5F40 001B2C80  7C 60 00 34 */	cntlzw r0, r3
/* 801B5F44 001B2C84  54 00 D9 7E */	srwi r0, r0, 5
/* 801B5F48 001B2C88  38 9E 00 00 */	addi r4, r30, 0x0
/* 801B5F4C 001B2C8C  7F FF 03 78 */	or r31, r31, r0
/* 801B5F50 001B2C90  38 60 00 00 */	li r3, 0x0
/* 801B5F54 001B2C94  38 A0 00 40 */	li r5, 0x40
/* 801B5F58 001B2C98  38 C0 00 00 */	li r6, 0x0
/* 801B5F5C 001B2C9C  38 E0 00 00 */	li r7, 0x0
/* 801B5F60 001B2CA0  48 04 06 89 */	bl func_801F65E8
/* 801B5F64 001B2CA4  7C 60 00 34 */	cntlzw r0, r3
/* 801B5F68 001B2CA8  54 00 D9 7E */	srwi r0, r0, 5
/* 801B5F6C 001B2CAC  7F FF 03 78 */	or r31, r31, r0
/* 801B5F70 001B2CB0  38 60 00 00 */	li r3, 0x0
/* 801B5F74 001B2CB4  48 04 07 61 */	bl EXISync
/* 801B5F78 001B2CB8  7C 60 00 34 */	cntlzw r0, r3
/* 801B5F7C 001B2CBC  54 00 D9 7E */	srwi r0, r0, 5
/* 801B5F80 001B2CC0  7F FF 03 78 */	or r31, r31, r0
/* 801B5F84 001B2CC4  38 60 00 00 */	li r3, 0x0
/* 801B5F88 001B2CC8  48 04 0F F9 */	bl EXIDeselect
/* 801B5F8C 001B2CCC  7C 60 00 34 */	cntlzw r0, r3
/* 801B5F90 001B2CD0  54 00 D9 7E */	srwi r0, r0, 5
/* 801B5F94 001B2CD4  7F FF 03 78 */	or r31, r31, r0
/* 801B5F98 001B2CD8  38 60 00 00 */	li r3, 0x0
/* 801B5F9C 001B2CDC  48 04 17 6D */	bl EXIUnlock
/* 801B5FA0 001B2CE0  7F E0 00 34 */	cntlzw r0, r31
/* 801B5FA4 001B2CE4  54 1F D9 7E */	srwi r31, r0, 5

.global func_801B5FA8
func_801B5FA8:
/* 801B5FA8 001B2CE8  93 FE 00 4C */	stw r31, 0x4c(r30)
/* 801B5FAC 001B2CEC  38 00 00 40 */	li r0, 0x40
/* 801B5FB0 001B2CF0  90 1E 00 40 */	stw r0, 0x40(r30)
/* 801B5FB4 001B2CF4  48 00 06 C1 */	bl func_801B6674
/* 801B5FB8 001B2CF8  48 00 07 2D */	bl func_801B66E4
/* 801B5FBC 001B2CFC  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B5FC0 001B2D00  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B5FC4 001B2D04  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801B5FC8 001B2D08  38 21 00 18 */	addi r1, r1, 0x18
/* 801B5FCC 001B2D0C  7C 08 03 A6 */	mtlr r0
/* 801B5FD0 001B2D10  4E 80 00 20 */	blr

.global __OSLockSram
__OSLockSram:
/* 801B5FD4 001B2D14  7C 08 02 A6 */	mflr r0
/* 801B5FD8 001B2D18  3C 60 80 31 */	lis r3, Scb@ha
/* 801B5FDC 001B2D1C  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B5FE0 001B2D20  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801B5FE4 001B2D24  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801B5FE8 001B2D28  3B E3 7B 00 */	addi r31, r3, Scb@l
/* 801B5FEC 001B2D2C  4B FF DA 59 */	bl OSDisableInterrupts
/* 801B5FF0 001B2D30  80 1F 00 48 */	lwz r0, 0x48(r31)
/* 801B5FF4 001B2D34  38 9F 00 48 */	addi r4, r31, 0x48
/* 801B5FF8 001B2D38  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B5FFC 001B2D3C  41 82 00 10 */	beq lbl_801B600C
/* 801B6000 001B2D40  4B FF DA 6D */	bl OSRestoreInterrupts
/* 801B6004 001B2D44  3B E0 00 00 */	li r31, 0x0
/* 801B6008 001B2D48  48 00 00 10 */	b func_801B6018
lbl_801B600C:
/* 801B600C 001B2D4C  90 7F 00 44 */	stw r3, 0x44(r31)
/* 801B6010 001B2D50  38 00 00 01 */	li r0, 0x1
/* 801B6014 001B2D54  90 04 00 00 */	stw r0, 0x0(r4)
func_801B6018:
/* 801B6018 001B2D58  7F E3 FB 78 */	mr r3, r31
/* 801B601C 001B2D5C  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801B6020 001B2D60  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801B6024 001B2D64  38 21 00 10 */	addi r1, r1, 0x10
/* 801B6028 001B2D68  7C 08 03 A6 */	mtlr r0
/* 801B602C 001B2D6C  4E 80 00 20 */	blr

.global __OSLockSramEx
__OSLockSramEx:
/* 801B6030 001B2D70  7C 08 02 A6 */	mflr r0
/* 801B6034 001B2D74  3C 60 80 31 */	lis r3, Scb@ha
/* 801B6038 001B2D78  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B603C 001B2D7C  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801B6040 001B2D80  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801B6044 001B2D84  3B E3 7B 00 */	addi r31, r3, Scb@l
/* 801B6048 001B2D88  4B FF D9 FD */	bl OSDisableInterrupts
/* 801B604C 001B2D8C  80 1F 00 48 */	lwz r0, 0x48(r31)
/* 801B6050 001B2D90  38 9F 00 48 */	addi r4, r31, 0x48
/* 801B6054 001B2D94  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B6058 001B2D98  41 82 00 10 */	beq lbl_801B6068
/* 801B605C 001B2D9C  4B FF DA 11 */	bl OSRestoreInterrupts
/* 801B6060 001B2DA0  38 60 00 00 */	li r3, 0x0
/* 801B6064 001B2DA4  48 00 00 14 */	b func_801B6078
lbl_801B6068:
/* 801B6068 001B2DA8  90 7F 00 44 */	stw r3, 0x44(r31)
/* 801B606C 001B2DAC  38 00 00 01 */	li r0, 0x1
/* 801B6070 001B2DB0  38 7F 00 14 */	addi r3, r31, 0x14
/* 801B6074 001B2DB4  90 04 00 00 */	stw r0, 0x0(r4)
func_801B6078:
/* 801B6078 001B2DB8  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801B607C 001B2DBC  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801B6080 001B2DC0  38 21 00 10 */	addi r1, r1, 0x10
/* 801B6084 001B2DC4  7C 08 03 A6 */	mtlr r0
/* 801B6088 001B2DC8  4E 80 00 20 */	blr

.global UnlockSram
UnlockSram:
/* 801B608C 001B2DCC  7C 08 02 A6 */	mflr r0
/* 801B6090 001B2DD0  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B6094 001B2DD4  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B6098 001B2DD8  3C 60 80 31 */	lis r3, Scb@ha
/* 801B609C 001B2DDC  94 21 FF D0 */	stwu r1, -0x30(r1)
/* 801B60A0 001B2DE0  BF 61 00 1C */	stmw r27, 0x1c(r1)
/* 801B60A4 001B2DE4  3B E3 7B 00 */	addi r31, r3, Scb@l
/* 801B60A8 001B2DE8  41 82 02 F8 */	beq lbl_801B63A0
/* 801B60AC 001B2DEC  28 04 00 00 */	cmplwi r4, 0x0
/* 801B60B0 001B2DF0  40 82 01 B0 */	bne lbl_801B6260
/* 801B60B4 001B2DF4  88 7F 00 13 */	lbz r3, 0x13(r31)
/* 801B60B8 001B2DF8  54 60 07 BE */	clrlwi r0, r3, 30
/* 801B60BC 001B2DFC  28 00 00 02 */	cmplwi r0, 0x2
/* 801B60C0 001B2E00  40 81 00 0C */	ble lbl_801B60CC
/* 801B60C4 001B2E04  54 60 00 3A */	rlwinm r0, r3, 0, 0, 29
/* 801B60C8 001B2E08  98 1F 00 13 */	stb r0, 0x13(r31)
lbl_801B60CC:
/* 801B60CC 001B2E0C  38 00 00 00 */	li r0, 0x0
/* 801B60D0 001B2E10  B0 1F 00 02 */	sth r0, 0x2(r31)
/* 801B60D4 001B2E14  38 BF 00 14 */	addi r5, r31, 0x14
/* 801B60D8 001B2E18  38 DF 00 0C */	addi r6, r31, 0xc
/* 801B60DC 001B2E1C  38 65 00 01 */	addi r3, r5, 0x1
/* 801B60E0 001B2E20  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B60E4 001B2E24  7C 66 18 50 */	subf r3, r6, r3
/* 801B60E8 001B2E28  7C 06 28 40 */	cmplw r6, r5
/* 801B60EC 001B2E2C  54 63 F8 7E */	srwi r3, r3, 1
/* 801B60F0 001B2E30  40 80 01 70 */	bge lbl_801B6260
/* 801B60F4 001B2E34  54 60 E8 FF */	srwi. r0, r3, 3
/* 801B60F8 001B2E38  7C 09 03 A6 */	mtctr r0
/* 801B60FC 001B2E3C  41 82 01 34 */	beq lbl_801B6230
lbl_801B6100:
/* 801B6100 001B2E40  A0 BF 00 00 */	lhz r5, 0x0(r31)
/* 801B6104 001B2E44  A0 06 00 00 */	lhz r0, 0x0(r6)
/* 801B6108 001B2E48  7C 05 02 14 */	add r0, r5, r0
/* 801B610C 001B2E4C  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B6110 001B2E50  A0 06 00 00 */	lhz r0, 0x0(r6)
/* 801B6114 001B2E54  A0 BF 00 02 */	lhz r5, 0x2(r31)
/* 801B6118 001B2E58  7C 00 00 F8 */	nor r0, r0, r0
/* 801B611C 001B2E5C  7C 05 02 14 */	add r0, r5, r0
/* 801B6120 001B2E60  B0 1F 00 02 */	sth r0, 0x2(r31)
/* 801B6124 001B2E64  A0 BF 00 00 */	lhz r5, 0x0(r31)
/* 801B6128 001B2E68  A0 06 00 02 */	lhz r0, 0x2(r6)
/* 801B612C 001B2E6C  7C 05 02 14 */	add r0, r5, r0
/* 801B6130 001B2E70  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B6134 001B2E74  A0 06 00 02 */	lhz r0, 0x2(r6)
/* 801B6138 001B2E78  A0 BF 00 02 */	lhz r5, 0x2(r31)
/* 801B613C 001B2E7C  7C 00 00 F8 */	nor r0, r0, r0
/* 801B6140 001B2E80  7C 05 02 14 */	add r0, r5, r0
/* 801B6144 001B2E84  B0 1F 00 02 */	sth r0, 0x2(r31)
/* 801B6148 001B2E88  A0 BF 00 00 */	lhz r5, 0x0(r31)
/* 801B614C 001B2E8C  A0 06 00 04 */	lhz r0, 0x4(r6)
/* 801B6150 001B2E90  7C 05 02 14 */	add r0, r5, r0
/* 801B6154 001B2E94  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B6158 001B2E98  A0 06 00 04 */	lhz r0, 0x4(r6)
/* 801B615C 001B2E9C  A0 BF 00 02 */	lhz r5, 0x2(r31)
/* 801B6160 001B2EA0  7C 00 00 F8 */	nor r0, r0, r0
/* 801B6164 001B2EA4  7C 05 02 14 */	add r0, r5, r0
/* 801B6168 001B2EA8  B0 1F 00 02 */	sth r0, 0x2(r31)
/* 801B616C 001B2EAC  A0 BF 00 00 */	lhz r5, 0x0(r31)
/* 801B6170 001B2EB0  A0 06 00 06 */	lhz r0, 0x6(r6)
/* 801B6174 001B2EB4  7C 05 02 14 */	add r0, r5, r0
/* 801B6178 001B2EB8  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B617C 001B2EBC  A0 06 00 06 */	lhz r0, 0x6(r6)
/* 801B6180 001B2EC0  A0 BF 00 02 */	lhz r5, 0x2(r31)
/* 801B6184 001B2EC4  7C 00 00 F8 */	nor r0, r0, r0
/* 801B6188 001B2EC8  7C 05 02 14 */	add r0, r5, r0
/* 801B618C 001B2ECC  B0 1F 00 02 */	sth r0, 0x2(r31)
/* 801B6190 001B2ED0  A0 BF 00 00 */	lhz r5, 0x0(r31)
/* 801B6194 001B2ED4  A0 06 00 08 */	lhz r0, 0x8(r6)
/* 801B6198 001B2ED8  7C 05 02 14 */	add r0, r5, r0
/* 801B619C 001B2EDC  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B61A0 001B2EE0  A0 06 00 08 */	lhz r0, 0x8(r6)
/* 801B61A4 001B2EE4  A0 BF 00 02 */	lhz r5, 0x2(r31)
/* 801B61A8 001B2EE8  7C 00 00 F8 */	nor r0, r0, r0
/* 801B61AC 001B2EEC  7C 05 02 14 */	add r0, r5, r0
/* 801B61B0 001B2EF0  B0 1F 00 02 */	sth r0, 0x2(r31)
/* 801B61B4 001B2EF4  A0 BF 00 00 */	lhz r5, 0x0(r31)
/* 801B61B8 001B2EF8  A0 06 00 0A */	lhz r0, 0xa(r6)
/* 801B61BC 001B2EFC  7C 05 02 14 */	add r0, r5, r0
/* 801B61C0 001B2F00  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B61C4 001B2F04  A0 06 00 0A */	lhz r0, 0xa(r6)
/* 801B61C8 001B2F08  A0 BF 00 02 */	lhz r5, 0x2(r31)
/* 801B61CC 001B2F0C  7C 00 00 F8 */	nor r0, r0, r0
/* 801B61D0 001B2F10  7C 05 02 14 */	add r0, r5, r0
/* 801B61D4 001B2F14  B0 1F 00 02 */	sth r0, 0x2(r31)
/* 801B61D8 001B2F18  A0 BF 00 00 */	lhz r5, 0x0(r31)
/* 801B61DC 001B2F1C  A0 06 00 0C */	lhz r0, 0xc(r6)
/* 801B61E0 001B2F20  7C 05 02 14 */	add r0, r5, r0
/* 801B61E4 001B2F24  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B61E8 001B2F28  A0 06 00 0C */	lhz r0, 0xc(r6)
/* 801B61EC 001B2F2C  A0 BF 00 02 */	lhz r5, 0x2(r31)
/* 801B61F0 001B2F30  7C 00 00 F8 */	nor r0, r0, r0
/* 801B61F4 001B2F34  7C 05 02 14 */	add r0, r5, r0
/* 801B61F8 001B2F38  B0 1F 00 02 */	sth r0, 0x2(r31)
/* 801B61FC 001B2F3C  A0 BF 00 00 */	lhz r5, 0x0(r31)
/* 801B6200 001B2F40  A0 06 00 0E */	lhz r0, 0xe(r6)
/* 801B6204 001B2F44  7C 05 02 14 */	add r0, r5, r0
/* 801B6208 001B2F48  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B620C 001B2F4C  A0 06 00 0E */	lhz r0, 0xe(r6)
/* 801B6210 001B2F50  38 C6 00 10 */	addi r6, r6, 0x10
/* 801B6214 001B2F54  A0 BF 00 02 */	lhz r5, 0x2(r31)
/* 801B6218 001B2F58  7C 00 00 F8 */	nor r0, r0, r0
/* 801B621C 001B2F5C  7C 05 02 14 */	add r0, r5, r0
/* 801B6220 001B2F60  B0 1F 00 02 */	sth r0, 0x2(r31)
/* 801B6224 001B2F64  42 00 FE DC */	bdnz lbl_801B6100
/* 801B6228 001B2F68  70 63 00 07 */	andi. r3, r3, 0x7
/* 801B622C 001B2F6C  41 82 00 34 */	beq lbl_801B6260
lbl_801B6230:
/* 801B6230 001B2F70  7C 69 03 A6 */	mtctr r3
lbl_801B6234:
/* 801B6234 001B2F74  A0 BF 00 00 */	lhz r5, 0x0(r31)
/* 801B6238 001B2F78  A0 06 00 00 */	lhz r0, 0x0(r6)
/* 801B623C 001B2F7C  7C 05 02 14 */	add r0, r5, r0
/* 801B6240 001B2F80  B0 1F 00 00 */	sth r0, 0x0(r31)
/* 801B6244 001B2F84  A0 06 00 00 */	lhz r0, 0x0(r6)
/* 801B6248 001B2F88  38 C6 00 02 */	addi r6, r6, 0x2
/* 801B624C 001B2F8C  A0 BF 00 02 */	lhz r5, 0x2(r31)
/* 801B6250 001B2F90  7C 00 00 F8 */	nor r0, r0, r0
/* 801B6254 001B2F94  7C 05 02 14 */	add r0, r5, r0
/* 801B6258 001B2F98  B0 1F 00 02 */	sth r0, 0x2(r31)
/* 801B625C 001B2F9C  42 00 FF D8 */	bdnz lbl_801B6234
lbl_801B6260:
/* 801B6260 001B2FA0  3B DF 00 40 */	addi r30, r31, 0x40
/* 801B6264 001B2FA4  80 1F 00 40 */	lwz r0, 0x40(r31)
/* 801B6268 001B2FA8  7C 04 00 40 */	cmplw r4, r0
/* 801B626C 001B2FAC  40 80 00 08 */	bge lbl_801B6274
/* 801B6270 001B2FB0  90 9E 00 00 */	stw r4, 0x0(r30)
lbl_801B6274:
/* 801B6274 001B2FB4  80 1E 00 00 */	lwz r0, 0x0(r30)
/* 801B6278 001B2FB8  28 00 00 14 */	cmplwi r0, 0x14
/* 801B627C 001B2FBC  41 81 00 2C */	bgt lbl_801B62A8
/* 801B6280 001B2FC0  38 9F 00 14 */	addi r4, r31, 0x14
/* 801B6284 001B2FC4  A0 7F 00 3C */	lhz r3, 0x3c(r31)
/* 801B6288 001B2FC8  54 60 04 6A */	rlwinm r0, r3, 0, 17, 21
/* 801B628C 001B2FCC  28 00 50 00 */	cmplwi r0, 0x5000
/* 801B6290 001B2FD0  41 82 00 10 */	beq lbl_801B62A0
/* 801B6294 001B2FD4  54 60 06 32 */	rlwinm r0, r3, 0, 24, 25
/* 801B6298 001B2FD8  28 00 00 C0 */	cmplwi r0, 0xc0
/* 801B629C 001B2FDC  40 82 00 0C */	bne lbl_801B62A8
lbl_801B62A0:
/* 801B62A0 001B2FE0  38 00 00 00 */	li r0, 0x0
/* 801B62A4 001B2FE4  B0 04 00 28 */	sth r0, 0x28(r4)
lbl_801B62A8:
/* 801B62A8 001B2FE8  83 BE 00 00 */	lwz r29, 0x0(r30)
/* 801B62AC 001B2FEC  3C 60 80 1B */	lis r3, WriteSramCallback@ha
/* 801B62B0 001B2FF0  38 A3 5D 20 */	addi r5, r3, WriteSramCallback@l
/* 801B62B4 001B2FF4  23 7D 00 40 */	subfic r27, r29, 0x40
/* 801B62B8 001B2FF8  7F 9F EA 14 */	add r28, r31, r29
/* 801B62BC 001B2FFC  38 60 00 00 */	li r3, 0x0
/* 801B62C0 001B3000  38 80 00 01 */	li r4, 0x1
/* 801B62C4 001B3004  48 04 13 51 */	bl EXILock
/* 801B62C8 001B3008  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B62CC 001B300C  40 82 00 0C */	bne lbl_801B62D8
/* 801B62D0 001B3010  38 00 00 00 */	li r0, 0x0
/* 801B62D4 001B3014  48 00 00 B4 */	b func_801B6388
lbl_801B62D8:
/* 801B62D8 001B3018  38 60 00 00 */	li r3, 0x0
/* 801B62DC 001B301C  38 80 00 01 */	li r4, 0x1
/* 801B62E0 001B3020  38 A0 00 03 */	li r5, 0x3
/* 801B62E4 001B3024  48 04 0B 71 */	bl EXISelect
/* 801B62E8 001B3028  2C 03 00 00 */	cmpwi r3, 0x0
/* 801B62EC 001B302C  40 82 00 14 */	bne lbl_801B6300
/* 801B62F0 001B3030  38 60 00 00 */	li r3, 0x0
/* 801B62F4 001B3034  48 04 14 15 */	bl EXIUnlock
/* 801B62F8 001B3038  38 00 00 00 */	li r0, 0x0
/* 801B62FC 001B303C  48 00 00 8C */	b func_801B6388
lbl_801B6300:
/* 801B6300 001B3040  57 A3 30 32 */	slwi r3, r29, 6
/* 801B6304 001B3044  38 03 01 00 */	addi r0, r3, 0x100
/* 801B6308 001B3048  64 00 A0 00 */	oris r0, r0, 0xa000
/* 801B630C 001B304C  90 01 00 10 */	stw r0, 0x10(r1)
/* 801B6310 001B3050  38 81 00 10 */	addi r4, r1, 0x10
/* 801B6314 001B3054  38 60 00 00 */	li r3, 0x0
/* 801B6318 001B3058  38 A0 00 04 */	li r5, 0x4
/* 801B631C 001B305C  38 C0 00 01 */	li r6, 0x1
/* 801B6320 001B3060  38 E0 00 00 */	li r7, 0x0
/* 801B6324 001B3064  48 03 FF C9 */	bl EXIImm
/* 801B6328 001B3068  7C 60 00 34 */	cntlzw r0, r3
/* 801B632C 001B306C  54 1D D9 7E */	srwi r29, r0, 5
/* 801B6330 001B3070  38 60 00 00 */	li r3, 0x0
/* 801B6334 001B3074  48 04 03 A1 */	bl EXISync
/* 801B6338 001B3078  7C 60 00 34 */	cntlzw r0, r3
/* 801B633C 001B307C  54 00 D9 7E */	srwi r0, r0, 5
/* 801B6340 001B3080  38 9C 00 00 */	addi r4, r28, 0x0
/* 801B6344 001B3084  38 BB 00 00 */	addi r5, r27, 0x0
/* 801B6348 001B3088  7F BD 03 78 */	or r29, r29, r0
/* 801B634C 001B308C  38 60 00 00 */	li r3, 0x0
/* 801B6350 001B3090  38 C0 00 01 */	li r6, 0x1
/* 801B6354 001B3094  48 04 01 F5 */	bl EXIImmEx
/* 801B6358 001B3098  7C 60 00 34 */	cntlzw r0, r3
/* 801B635C 001B309C  54 00 D9 7E */	srwi r0, r0, 5
/* 801B6360 001B30A0  7F BD 03 78 */	or r29, r29, r0
/* 801B6364 001B30A4  38 60 00 00 */	li r3, 0x0
/* 801B6368 001B30A8  48 04 0C 19 */	bl EXIDeselect
/* 801B636C 001B30AC  7C 60 00 34 */	cntlzw r0, r3
/* 801B6370 001B30B0  54 00 D9 7E */	srwi r0, r0, 5
/* 801B6374 001B30B4  7F BD 03 78 */	or r29, r29, r0
/* 801B6378 001B30B8  38 60 00 00 */	li r3, 0x0
/* 801B637C 001B30BC  48 04 13 8D */	bl EXIUnlock
/* 801B6380 001B30C0  7F A0 00 34 */	cntlzw r0, r29
/* 801B6384 001B30C4  54 00 D9 7E */	srwi r0, r0, 5
func_801B6388:
/* 801B6388 001B30C8  90 1F 00 4C */	stw r0, 0x4c(r31)
/* 801B638C 001B30CC  80 1F 00 4C */	lwz r0, 0x4c(r31)
/* 801B6390 001B30D0  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B6394 001B30D4  41 82 00 0C */	beq lbl_801B63A0
/* 801B6398 001B30D8  38 00 00 40 */	li r0, 0x40
/* 801B639C 001B30DC  90 1E 00 00 */	stw r0, 0x0(r30)
lbl_801B63A0:
/* 801B63A0 001B30E0  38 00 00 00 */	li r0, 0x0
/* 801B63A4 001B30E4  90 1F 00 48 */	stw r0, 0x48(r31)
/* 801B63A8 001B30E8  80 7F 00 44 */	lwz r3, 0x44(r31)
/* 801B63AC 001B30EC  4B FF D6 C1 */	bl OSRestoreInterrupts
/* 801B63B0 001B30F0  80 7F 00 4C */	lwz r3, 0x4c(r31)
/* 801B63B4 001B30F4  BB 61 00 1C */	lmw r27, 0x1c(r1)
/* 801B63B8 001B30F8  80 01 00 34 */	lwz r0, 0x34(r1)
/* 801B63BC 001B30FC  38 21 00 30 */	addi r1, r1, 0x30
/* 801B63C0 001B3100  7C 08 03 A6 */	mtlr r0
/* 801B63C4 001B3104  4E 80 00 20 */	blr

.global __OSUnlockSram
__OSUnlockSram:
/* 801B63C8 001B3108  7C 08 02 A6 */	mflr r0
/* 801B63CC 001B310C  38 80 00 00 */	li r4, 0x0
/* 801B63D0 001B3110  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B63D4 001B3114  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B63D8 001B3118  4B FF FC B5 */	bl UnlockSram
/* 801B63DC 001B311C  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B63E0 001B3120  38 21 00 08 */	addi r1, r1, 0x8
/* 801B63E4 001B3124  7C 08 03 A6 */	mtlr r0
/* 801B63E8 001B3128  4E 80 00 20 */	blr

.global __OSUnlockSramEx
__OSUnlockSramEx:
/* 801B63EC 001B312C  7C 08 02 A6 */	mflr r0
/* 801B63F0 001B3130  38 80 00 14 */	li r4, 0x14
/* 801B63F4 001B3134  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B63F8 001B3138  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B63FC 001B313C  4B FF FC 91 */	bl UnlockSram
/* 801B6400 001B3140  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B6404 001B3144  38 21 00 08 */	addi r1, r1, 0x8
/* 801B6408 001B3148  7C 08 03 A6 */	mtlr r0
/* 801B640C 001B314C  4E 80 00 20 */	blr

.global __OSSyncSram
__OSSyncSram:
/* 801B6410 001B3150  3C 60 80 31 */	lis r3, Scb@ha
/* 801B6414 001B3154  38 63 7B 00 */	addi r3, r3, Scb@l
/* 801B6418 001B3158  80 63 00 4C */	lwz r3, 0x4c(r3)
/* 801B641C 001B315C  4E 80 00 20 */	blr

.global OSGetSoundMode
OSGetSoundMode:
/* 801B6420 001B3160  7C 08 02 A6 */	mflr r0
/* 801B6424 001B3164  3C 60 80 31 */	lis r3, Scb@ha
/* 801B6428 001B3168  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B642C 001B316C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801B6430 001B3170  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801B6434 001B3174  3B E3 7B 00 */	addi r31, r3, Scb@l
/* 801B6438 001B3178  4B FF D6 0D */	bl OSDisableInterrupts
/* 801B643C 001B317C  80 1F 00 48 */	lwz r0, 0x48(r31)
/* 801B6440 001B3180  38 9F 00 48 */	addi r4, r31, 0x48
/* 801B6444 001B3184  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B6448 001B3188  41 82 00 10 */	beq lbl_801B6458
/* 801B644C 001B318C  4B FF D6 21 */	bl OSRestoreInterrupts
/* 801B6450 001B3190  3B E0 00 00 */	li r31, 0x0
/* 801B6454 001B3194  48 00 00 10 */	b func_801B6464
lbl_801B6458:
/* 801B6458 001B3198  90 7F 00 44 */	stw r3, 0x44(r31)
/* 801B645C 001B319C  38 00 00 01 */	li r0, 0x1
/* 801B6460 001B31A0  90 04 00 00 */	stw r0, 0x0(r4)
func_801B6464:
/* 801B6464 001B31A4  88 1F 00 13 */	lbz r0, 0x13(r31)
/* 801B6468 001B31A8  54 00 07 7B */	rlwinm. r0, r0, 0, 29, 29
/* 801B646C 001B31AC  41 82 00 0C */	beq lbl_801B6478
/* 801B6470 001B31B0  3B E0 00 01 */	li r31, 0x1
/* 801B6474 001B31B4  48 00 00 08 */	b func_801B647C
lbl_801B6478:
/* 801B6478 001B31B8  3B E0 00 00 */	li r31, 0x0
func_801B647C:
/* 801B647C 001B31BC  38 60 00 00 */	li r3, 0x0
/* 801B6480 001B31C0  38 80 00 00 */	li r4, 0x0
/* 801B6484 001B31C4  4B FF FC 09 */	bl UnlockSram
/* 801B6488 001B31C8  7F E3 FB 78 */	mr r3, r31
/* 801B648C 001B31CC  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801B6490 001B31D0  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801B6494 001B31D4  38 21 00 20 */	addi r1, r1, 0x20
/* 801B6498 001B31D8  7C 08 03 A6 */	mtlr r0
/* 801B649C 001B31DC  4E 80 00 20 */	blr

.global func_801B64A0
func_801B64A0:
/* 801B64A0 001B31E0  7C 08 02 A6 */	mflr r0
/* 801B64A4 001B31E4  3C 80 80 31 */	lis r4, Scb@ha
/* 801B64A8 001B31E8  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B64AC 001B31EC  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801B64B0 001B31F0  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801B64B4 001B31F4  3B E4 7B 00 */	addi r31, r4, Scb@l
/* 801B64B8 001B31F8  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801B64BC 001B31FC  54 7E 17 7A */	rlwinm r30, r3, 2, 29, 29
/* 801B64C0 001B3200  4B FF D5 85 */	bl OSDisableInterrupts
/* 801B64C4 001B3204  80 1F 00 48 */	lwz r0, 0x48(r31)
/* 801B64C8 001B3208  38 9F 00 48 */	addi r4, r31, 0x48
/* 801B64CC 001B320C  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B64D0 001B3210  41 82 00 10 */	beq lbl_801B64E0
/* 801B64D4 001B3214  4B FF D5 99 */	bl OSRestoreInterrupts
/* 801B64D8 001B3218  3B E0 00 00 */	li r31, 0x0
/* 801B64DC 001B321C  48 00 00 10 */	b func_801B64EC
lbl_801B64E0:
/* 801B64E0 001B3220  90 7F 00 44 */	stw r3, 0x44(r31)
/* 801B64E4 001B3224  38 00 00 01 */	li r0, 0x1
/* 801B64E8 001B3228  90 04 00 00 */	stw r0, 0x0(r4)

.global func_801B64EC
func_801B64EC:
/* 801B64EC 001B322C  88 7F 00 13 */	lbz r3, 0x13(r31)
/* 801B64F0 001B3230  54 60 07 7A */	rlwinm r0, r3, 0, 29, 29
/* 801B64F4 001B3234  7C 1E 00 40 */	cmplw r30, r0
/* 801B64F8 001B3238  40 82 00 14 */	bne lbl_801B650C
/* 801B64FC 001B323C  38 60 00 00 */	li r3, 0x0
/* 801B6500 001B3240  38 80 00 00 */	li r4, 0x0
/* 801B6504 001B3244  4B FF FB 89 */	bl UnlockSram
/* 801B6508 001B3248  48 00 00 24 */	b func_801B652C
lbl_801B650C:
/* 801B650C 001B324C  54 60 07 B8 */	rlwinm r0, r3, 0, 30, 28
/* 801B6510 001B3250  98 1F 00 13 */	stb r0, 0x13(r31)
/* 801B6514 001B3254  38 60 00 01 */	li r3, 0x1
/* 801B6518 001B3258  38 80 00 00 */	li r4, 0x0
/* 801B651C 001B325C  88 1F 00 13 */	lbz r0, 0x13(r31)
/* 801B6520 001B3260  7C 00 F3 78 */	or r0, r0, r30
/* 801B6524 001B3264  98 1F 00 13 */	stb r0, 0x13(r31)
/* 801B6528 001B3268  4B FF FB 65 */	bl UnlockSram

.global func_801B652C
func_801B652C:
/* 801B652C 001B326C  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801B6530 001B3270  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801B6534 001B3274  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801B6538 001B3278  38 21 00 20 */	addi r1, r1, 0x20
/* 801B653C 001B327C  7C 08 03 A6 */	mtlr r0
/* 801B6540 001B3280  4E 80 00 20 */	blr

.global OSGetWirelessID
OSGetWirelessID:
/* 801B6544 001B3284  7C 08 02 A6 */	mflr r0
/* 801B6548 001B3288  3C 80 80 31 */	lis r4, Scb@ha
/* 801B654C 001B328C  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B6550 001B3290  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801B6554 001B3294  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801B6558 001B3298  3B E4 7B 00 */	addi r31, r4, Scb@l
/* 801B655C 001B329C  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801B6560 001B32A0  3B C3 00 00 */	addi r30, r3, 0x0
/* 801B6564 001B32A4  4B FF D4 E1 */	bl OSDisableInterrupts
/* 801B6568 001B32A8  80 1F 00 48 */	lwz r0, 0x48(r31)
/* 801B656C 001B32AC  38 9F 00 48 */	addi r4, r31, 0x48
/* 801B6570 001B32B0  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B6574 001B32B4  41 82 00 10 */	beq lbl_801B6584
/* 801B6578 001B32B8  4B FF D4 F5 */	bl OSRestoreInterrupts
/* 801B657C 001B32BC  38 60 00 00 */	li r3, 0x0
/* 801B6580 001B32C0  48 00 00 14 */	b func_801B6594
lbl_801B6584:
/* 801B6584 001B32C4  90 7F 00 44 */	stw r3, 0x44(r31)
/* 801B6588 001B32C8  38 00 00 01 */	li r0, 0x1
/* 801B658C 001B32CC  38 7F 00 14 */	addi r3, r31, 0x14
/* 801B6590 001B32D0  90 04 00 00 */	stw r0, 0x0(r4)

.global func_801B6594
func_801B6594:
/* 801B6594 001B32D4  57 C0 08 3C */	slwi r0, r30, 1
/* 801B6598 001B32D8  7C 63 02 14 */	add r3, r3, r0
/* 801B659C 001B32DC  A3 E3 00 1C */	lhz r31, 0x1c(r3)
/* 801B65A0 001B32E0  38 60 00 00 */	li r3, 0x0
/* 801B65A4 001B32E4  38 80 00 14 */	li r4, 0x14
/* 801B65A8 001B32E8  4B FF FA E5 */	bl UnlockSram
/* 801B65AC 001B32EC  7F E3 FB 78 */	mr r3, r31
/* 801B65B0 001B32F0  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801B65B4 001B32F4  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801B65B8 001B32F8  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801B65BC 001B32FC  38 21 00 20 */	addi r1, r1, 0x20
/* 801B65C0 001B3300  7C 08 03 A6 */	mtlr r0
/* 801B65C4 001B3304  4E 80 00 20 */	blr

.global OSSetWirelessID
OSSetWirelessID:
/* 801B65C8 001B3308  7C 08 02 A6 */	mflr r0
/* 801B65CC 001B330C  3C A0 80 31 */	lis r5, Scb@ha
/* 801B65D0 001B3310  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B65D4 001B3314  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801B65D8 001B3318  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801B65DC 001B331C  3B E5 7B 00 */	addi r31, r5, Scb@l
/* 801B65E0 001B3320  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801B65E4 001B3324  3B C4 00 00 */	addi r30, r4, 0x0
/* 801B65E8 001B3328  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801B65EC 001B332C  3B A3 00 00 */	addi r29, r3, 0x0
/* 801B65F0 001B3330  4B FF D4 55 */	bl OSDisableInterrupts
/* 801B65F4 001B3334  80 1F 00 48 */	lwz r0, 0x48(r31)
/* 801B65F8 001B3338  38 9F 00 48 */	addi r4, r31, 0x48
/* 801B65FC 001B333C  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B6600 001B3340  41 82 00 10 */	beq lbl_801B6610
/* 801B6604 001B3344  4B FF D4 69 */	bl OSRestoreInterrupts
/* 801B6608 001B3348  38 60 00 00 */	li r3, 0x0
/* 801B660C 001B334C  48 00 00 14 */	b func_801B6620
lbl_801B6610:
/* 801B6610 001B3350  90 7F 00 44 */	stw r3, 0x44(r31)
/* 801B6614 001B3354  38 00 00 01 */	li r0, 0x1
/* 801B6618 001B3358  38 7F 00 14 */	addi r3, r31, 0x14
/* 801B661C 001B335C  90 04 00 00 */	stw r0, 0x0(r4)

.global func_801B6620
func_801B6620:
/* 801B6620 001B3360  57 A0 08 3C */	slwi r0, r29, 1
/* 801B6624 001B3364  7C 83 02 14 */	add r4, r3, r0
/* 801B6628 001B3368  A4 64 00 1C */	lhzu r3, 0x1c(r4)
/* 801B662C 001B336C  57 C0 04 3E */	clrlwi r0, r30, 16
/* 801B6630 001B3370  7C 03 00 40 */	cmplw r3, r0
/* 801B6634 001B3374  41 82 00 18 */	beq lbl_801B664C
/* 801B6638 001B3378  B3 C4 00 00 */	sth r30, 0x0(r4)
/* 801B663C 001B337C  38 60 00 01 */	li r3, 0x1
/* 801B6640 001B3380  38 80 00 14 */	li r4, 0x14
/* 801B6644 001B3384  4B FF FA 49 */	bl UnlockSram
/* 801B6648 001B3388  48 00 00 10 */	b func_801B6658
lbl_801B664C:
/* 801B664C 001B338C  38 60 00 00 */	li r3, 0x0
/* 801B6650 001B3390  38 80 00 14 */	li r4, 0x14
/* 801B6654 001B3394  4B FF FA 39 */	bl UnlockSram

.global func_801B6658
func_801B6658:
/* 801B6658 001B3398  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801B665C 001B339C  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801B6660 001B33A0  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801B6664 001B33A4  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801B6668 001B33A8  38 21 00 28 */	addi r1, r1, 0x28
/* 801B666C 001B33AC  7C 08 03 A6 */	mtlr r0
/* 801B6670 001B33B0  4E 80 00 20 */	blr

.global func_801B6674
func_801B6674:
/* 801B6674 001B33B4  7C 08 02 A6 */	mflr r0
/* 801B6678 001B33B8  3C 60 80 31 */	lis r3, Scb@ha
/* 801B667C 001B33BC  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B6680 001B33C0  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B6684 001B33C4  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B6688 001B33C8  3B E3 7B 00 */	addi r31, r3, Scb@l
/* 801B668C 001B33CC  4B FF D3 B9 */	bl OSDisableInterrupts
/* 801B6690 001B33D0  80 1F 00 48 */	lwz r0, 0x48(r31)
/* 801B6694 001B33D4  38 9F 00 48 */	addi r4, r31, 0x48
/* 801B6698 001B33D8  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B669C 001B33DC  41 82 00 10 */	beq lbl_801B66AC
/* 801B66A0 001B33E0  4B FF D3 CD */	bl OSRestoreInterrupts
/* 801B66A4 001B33E4  38 60 00 00 */	li r3, 0x0
/* 801B66A8 001B33E8  48 00 00 14 */	b func_801B66BC
lbl_801B66AC:
/* 801B66AC 001B33EC  90 7F 00 44 */	stw r3, 0x44(r31)
/* 801B66B0 001B33F0  38 00 00 01 */	li r0, 0x1
/* 801B66B4 001B33F4  38 7F 00 14 */	addi r3, r31, 0x14
/* 801B66B8 001B33F8  90 04 00 00 */	stw r0, 0x0(r4)

.global func_801B66BC
func_801B66BC:
/* 801B66BC 001B33FC  A3 E3 00 28 */	lhz r31, 0x28(r3)
/* 801B66C0 001B3400  38 60 00 00 */	li r3, 0x0
/* 801B66C4 001B3404  38 80 00 14 */	li r4, 0x14
/* 801B66C8 001B3408  4B FF F9 C5 */	bl UnlockSram
/* 801B66CC 001B340C  7F E3 FB 78 */	mr r3, r31
/* 801B66D0 001B3410  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B66D4 001B3414  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B66D8 001B3418  38 21 00 18 */	addi r1, r1, 0x18
/* 801B66DC 001B341C  7C 08 03 A6 */	mtlr r0
/* 801B66E0 001B3420  4E 80 00 20 */	blr

.global func_801B66E4
func_801B66E4:
/* 801B66E4 001B3424  7C 08 02 A6 */	mflr r0
/* 801B66E8 001B3428  54 64 04 3E */	clrlwi r4, r3, 16
/* 801B66EC 001B342C  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B66F0 001B3430  54 60 04 6A */	rlwinm r0, r3, 0, 17, 21
/* 801B66F4 001B3434  28 00 50 00 */	cmplwi r0, 0x5000
/* 801B66F8 001B3438  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801B66FC 001B343C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801B6700 001B3440  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801B6704 001B3444  3B C3 00 00 */	addi r30, r3, 0x0
/* 801B6708 001B3448  3C 60 80 31 */	lis r3, Scb@ha
/* 801B670C 001B344C  3B E3 7B 00 */	addi r31, r3, Scb@l
/* 801B6710 001B3450  41 82 00 10 */	beq lbl_801B6720
/* 801B6714 001B3454  54 80 06 32 */	rlwinm r0, r4, 0, 24, 25
/* 801B6718 001B3458  28 00 00 C0 */	cmplwi r0, 0xc0
/* 801B671C 001B345C  40 82 00 08 */	bne lbl_801B6724
lbl_801B6720:
/* 801B6720 001B3460  3B C0 00 00 */	li r30, 0x0
lbl_801B6724:
/* 801B6724 001B3464  4B FF D3 21 */	bl OSDisableInterrupts
/* 801B6728 001B3468  80 1F 00 48 */	lwz r0, 0x48(r31)
/* 801B672C 001B346C  38 BF 00 48 */	addi r5, r31, 0x48
/* 801B6730 001B3470  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B6734 001B3474  41 82 00 10 */	beq lbl_801B6744
/* 801B6738 001B3478  4B FF D3 35 */	bl OSRestoreInterrupts
/* 801B673C 001B347C  38 80 00 00 */	li r4, 0x0
/* 801B6740 001B3480  48 00 00 14 */	b func_801B6754
lbl_801B6744:
/* 801B6744 001B3484  90 7F 00 44 */	stw r3, 0x44(r31)
/* 801B6748 001B3488  38 00 00 01 */	li r0, 0x1
/* 801B674C 001B348C  38 9F 00 14 */	addi r4, r31, 0x14
/* 801B6750 001B3490  90 05 00 00 */	stw r0, 0x0(r5)

.global func_801B6754
func_801B6754:
/* 801B6754 001B3494  A0 04 00 28 */	lhz r0, 0x28(r4)
/* 801B6758 001B3498  57 C3 04 3E */	clrlwi r3, r30, 16
/* 801B675C 001B349C  7C 03 00 40 */	cmplw r3, r0
/* 801B6760 001B34A0  40 82 00 14 */	bne lbl_801B6774
/* 801B6764 001B34A4  38 60 00 00 */	li r3, 0x0
/* 801B6768 001B34A8  38 80 00 14 */	li r4, 0x14
/* 801B676C 001B34AC  4B FF F9 21 */	bl UnlockSram
/* 801B6770 001B34B0  48 00 00 14 */	b func_801B6784
lbl_801B6774:
/* 801B6774 001B34B4  B3 C4 00 28 */	sth r30, 0x28(r4)
/* 801B6778 001B34B8  38 60 00 01 */	li r3, 0x1
/* 801B677C 001B34BC  38 80 00 14 */	li r4, 0x14
/* 801B6780 001B34C0  4B FF F9 0D */	bl UnlockSram

.global func_801B6784
func_801B6784:
/* 801B6784 001B34C4  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801B6788 001B34C8  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801B678C 001B34CC  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801B6790 001B34D0  38 21 00 20 */	addi r1, r1, 0x20
/* 801B6794 001B34D4  7C 08 03 A6 */	mtlr r0
/* 801B6798 001B34D8  4E 80 00 20 */	blr
.global func_801B679C
func_801B679C:
/* 801B679C 001B34DC  90 83 00 00 */	stw r4, 0x0(r3)
/* 801B67A0 001B34E0  38 80 00 00 */	li r4, 0x0
/* 801B67A4 001B34E4  38 00 FF FF */	li r0, -0x1
/* 801B67A8 001B34E8  90 83 00 0C */	stw r4, 0xc(r3)
/* 801B67AC 001B34EC  90 83 00 08 */	stw r4, 0x8(r3)
/* 801B67B0 001B34F0  90 83 00 04 */	stw r4, 0x4(r3)
/* 801B67B4 001B34F4  90 03 00 14 */	stw r0, 0x14(r3)
/* 801B67B8 001B34F8  90 83 00 10 */	stw r4, 0x10(r3)
/* 801B67BC 001B34FC  90 83 00 1C */	stw r4, 0x1c(r3)
/* 801B67C0 001B3500  90 83 00 18 */	stw r4, 0x18(r3)
/* 801B67C4 001B3504  4E 80 00 20 */	blr
.global func_801B67C8
func_801B67C8:
/* 801B67C8 001B3508  7C 08 02 A6 */	mflr r0
/* 801B67CC 001B350C  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B67D0 001B3510  38 00 00 01 */	li r0, 0x1
/* 801B67D4 001B3514  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B67D8 001B3518  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B67DC 001B351C  3B E3 00 00 */	addi r31, r3, 0x0
/* 801B67E0 001B3520  90 03 00 28 */	stw r0, 0x28(r3)
/* 801B67E4 001B3524  48 00 14 0D */	bl OSGetTime
/* 801B67E8 001B3528  90 9F 00 24 */	stw r4, 0x24(r31)
/* 801B67EC 001B352C  90 7F 00 20 */	stw r3, 0x20(r31)
/* 801B67F0 001B3530  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B67F4 001B3534  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B67F8 001B3538  38 21 00 18 */	addi r1, r1, 0x18
/* 801B67FC 001B353C  7C 08 03 A6 */	mtlr r0
/* 801B6800 001B3540  4E 80 00 20 */	blr
.global func_801B6804
func_801B6804:
/* 801B6804 001B3544  7C 08 02 A6 */	mflr r0
/* 801B6808 001B3548  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B680C 001B354C  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B6810 001B3550  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B6814 001B3554  7C 7F 1B 78 */	mr r31, r3
/* 801B6818 001B3558  80 03 00 28 */	lwz r0, 0x28(r3)
/* 801B681C 001B355C  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B6820 001B3560  41 82 00 9C */	beq lbl_801B68BC
/* 801B6824 001B3564  48 00 13 CD */	bl OSGetTime
/* 801B6828 001B3568  80 BF 00 24 */	lwz r5, 0x24(r31)
/* 801B682C 001B356C  38 00 00 00 */	li r0, 0x0
/* 801B6830 001B3570  80 DF 00 20 */	lwz r6, 0x20(r31)
/* 801B6834 001B3574  7C E5 20 10 */	subfc r7, r5, r4
/* 801B6838 001B3578  80 BF 00 0C */	lwz r5, 0xc(r31)
/* 801B683C 001B357C  7C C6 19 10 */	subfe r6, r6, r3
/* 801B6840 001B3580  80 9F 00 08 */	lwz r4, 0x8(r31)
/* 801B6844 001B3584  7C 65 38 14 */	addc r3, r5, r7
/* 801B6848 001B3588  90 7F 00 0C */	stw r3, 0xc(r31)
/* 801B684C 001B358C  7C 84 31 14 */	adde r4, r4, r6
/* 801B6850 001B3590  6C C3 80 00 */	xoris r3, r6, 0x8000
/* 801B6854 001B3594  90 9F 00 08 */	stw r4, 0x8(r31)
/* 801B6858 001B3598  90 1F 00 28 */	stw r0, 0x28(r31)
/* 801B685C 001B359C  80 9F 00 04 */	lwz r4, 0x4(r31)
/* 801B6860 001B35A0  38 04 00 01 */	addi r0, r4, 0x1
/* 801B6864 001B35A4  90 1F 00 04 */	stw r0, 0x4(r31)
/* 801B6868 001B35A8  80 1F 00 18 */	lwz r0, 0x18(r31)
/* 801B686C 001B35AC  80 BF 00 1C */	lwz r5, 0x1c(r31)
/* 801B6870 001B35B0  6C 04 80 00 */	xoris r4, r0, 0x8000
/* 801B6874 001B35B4  7C 07 28 10 */	subfc r0, r7, r5
/* 801B6878 001B35B8  7C 63 21 10 */	subfe r3, r3, r4
/* 801B687C 001B35BC  7C 64 21 10 */	subfe r3, r4, r4
/* 801B6880 001B35C0  7C 63 00 D1 */	neg. r3, r3
/* 801B6884 001B35C4  41 82 00 0C */	beq lbl_801B6890
/* 801B6888 001B35C8  90 FF 00 1C */	stw r7, 0x1c(r31)
/* 801B688C 001B35CC  90 DF 00 18 */	stw r6, 0x18(r31)
lbl_801B6890:
/* 801B6890 001B35D0  80 1F 00 10 */	lwz r0, 0x10(r31)
/* 801B6894 001B35D4  6C C4 80 00 */	xoris r4, r6, 0x8000
/* 801B6898 001B35D8  80 BF 00 14 */	lwz r5, 0x14(r31)
/* 801B689C 001B35DC  6C 03 80 00 */	xoris r3, r0, 0x8000
/* 801B68A0 001B35E0  7C 05 38 10 */	subfc r0, r5, r7
/* 801B68A4 001B35E4  7C 63 21 10 */	subfe r3, r3, r4
/* 801B68A8 001B35E8  7C 64 21 10 */	subfe r3, r4, r4
/* 801B68AC 001B35EC  7C 63 00 D1 */	neg. r3, r3
/* 801B68B0 001B35F0  41 82 00 0C */	beq lbl_801B68BC
/* 801B68B4 001B35F4  90 FF 00 14 */	stw r7, 0x14(r31)
/* 801B68B8 001B35F8  90 DF 00 10 */	stw r6, 0x10(r31)
lbl_801B68BC:
/* 801B68BC 001B35FC  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B68C0 001B3600  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B68C4 001B3604  38 21 00 18 */	addi r1, r1, 0x18
/* 801B68C8 001B3608  7C 08 03 A6 */	mtlr r0
/* 801B68CC 001B360C  4E 80 00 20 */	blr
.global func_801B68D0
func_801B68D0:
/* 801B68D0 001B3610  7C 08 02 A6 */	mflr r0
/* 801B68D4 001B3614  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B68D8 001B3618  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801B68DC 001B361C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801B68E0 001B3620  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801B68E4 001B3624  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801B68E8 001B3628  7C 7D 1B 78 */	mr r29, r3
/* 801B68EC 001B362C  80 03 00 28 */	lwz r0, 0x28(r3)
/* 801B68F0 001B3630  83 E3 00 08 */	lwz r31, 0x8(r3)
/* 801B68F4 001B3634  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B68F8 001B3638  83 C3 00 0C */	lwz r30, 0xc(r3)
/* 801B68FC 001B363C  41 82 00 20 */	beq lbl_801B691C
/* 801B6900 001B3640  48 00 12 F1 */	bl OSGetTime
/* 801B6904 001B3644  80 BD 00 24 */	lwz r5, 0x24(r29)
/* 801B6908 001B3648  80 1D 00 20 */	lwz r0, 0x20(r29)
/* 801B690C 001B364C  7C 85 20 10 */	subfc r4, r5, r4
/* 801B6910 001B3650  7C 00 19 10 */	subfe r0, r0, r3
/* 801B6914 001B3654  7F DE 20 14 */	addc r30, r30, r4
/* 801B6918 001B3658  7F FF 01 14 */	adde r31, r31, r0
lbl_801B691C:
/* 801B691C 001B365C  38 9E 00 00 */	addi r4, r30, 0x0
/* 801B6920 001B3660  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801B6924 001B3664  38 7F 00 00 */	addi r3, r31, 0x0
/* 801B6928 001B3668  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801B692C 001B366C  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801B6930 001B3670  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801B6934 001B3674  38 21 00 20 */	addi r1, r1, 0x20
/* 801B6938 001B3678  7C 08 03 A6 */	mtlr r0
/* 801B693C 001B367C  4E 80 00 20 */	blr
.global func_801B6940
func_801B6940:
/* 801B6940 001B3680  38 80 00 00 */	li r4, 0x0
/* 801B6944 001B3684  90 83 00 0C */	stw r4, 0xc(r3)
/* 801B6948 001B3688  38 00 FF FF */	li r0, -0x1
/* 801B694C 001B368C  90 83 00 08 */	stw r4, 0x8(r3)
/* 801B6950 001B3690  90 83 00 04 */	stw r4, 0x4(r3)
/* 801B6954 001B3694  90 03 00 14 */	stw r0, 0x14(r3)
/* 801B6958 001B3698  90 83 00 10 */	stw r4, 0x10(r3)
/* 801B695C 001B369C  90 83 00 1C */	stw r4, 0x1c(r3)
/* 801B6960 001B36A0  90 83 00 18 */	stw r4, 0x18(r3)
/* 801B6964 001B36A4  4E 80 00 20 */	blr
_OSSystemCallVectorStart:
/* 801B6968 001B36A8  7D 30 FA A6 */	mfspr r9, 1008
/* 801B696C 001B36AC  61 2A 00 08 */	ori r10, r9, 0x8
/* 801B6970 001B36B0  7D 50 FB A6 */	mtspr 1008, r10
/* 801B6974 001B36B4  4C 00 01 2C */	isync
/* 801B6978 001B36B8  7C 00 04 AC */	sync
/* 801B697C 001B36BC  7D 30 FB A6 */	mtspr 1008, r9
/* 801B6980 001B36C0  4C 00 00 64 */	rfi
lbl_801B6984:
/* 801B6984 001B36C4  60 00 00 00 */	nop

.global __OSInitSystemCall
__OSInitSystemCall:
/* 801B6988 001B36C8  7C 08 02 A6 */	mflr r0
/* 801B698C 001B36CC  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B6990 001B36D0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801B6994 001B36D4  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801B6998 001B36D8  3C A0 80 00 */	lis r5, 0x80000C00@ha
/* 801B699C 001B36DC  3C 80 80 1B */	lis r4, _OSSystemCallVectorStart@ha
/* 801B69A0 001B36E0  3C 60 80 1B */	lis r3, lbl_801B6984@ha
/* 801B69A4 001B36E4  3B E5 0C 00 */	addi r31, r5, 0x80000C00@l
/* 801B69A8 001B36E8  38 03 69 84 */	addi r0, r3, lbl_801B6984@l
/* 801B69AC 001B36EC  38 84 69 68 */	addi r4, r4, _OSSystemCallVectorStart@l
/* 801B69B0 001B36F0  7F E3 FB 78 */	mr r3, r31
/* 801B69B4 001B36F4  7C A4 00 50 */	subf r5, r4, r0
/* 801B69B8 001B36F8  4B E4 EC 15 */	bl memcpy
/* 801B69BC 001B36FC  7F E3 FB 78 */	mr r3, r31
/* 801B69C0 001B3700  38 80 01 00 */	li r4, 0x100
/* 801B69C4 001B3704  4B FF BA 65 */	bl DCFlushRangeNoSync
/* 801B69C8 001B3708  7C 00 04 AC */	sync
/* 801B69CC 001B370C  7F E3 FB 78 */	mr r3, r31
/* 801B69D0 001B3710  38 80 01 00 */	li r4, 0x100
/* 801B69D4 001B3714  4B FF BA D9 */	bl ICInvalidateRange
/* 801B69D8 001B3718  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801B69DC 001B371C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801B69E0 001B3720  38 21 00 10 */	addi r1, r1, 0x10
/* 801B69E4 001B3724  7C 08 03 A6 */	mtlr r0
/* 801B69E8 001B3728  4E 80 00 20 */	blr

.global lbl_801B69EC
lbl_801B69EC:
/* 801B69EC 001B372C  4E 80 00 20 */	blr

.global __OSThreadInit
__OSThreadInit:
/* 801B69F0 001B3730  7C 08 02 A6 */	mflr r0
/* 801B69F4 001B3734  3C 60 80 31 */	lis r3, lbl_80317B58@ha
/* 801B69F8 001B3738  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B69FC 001B373C  38 00 00 02 */	li r0, 0x2
/* 801B6A00 001B3740  38 80 00 10 */	li r4, 0x10
/* 801B6A04 001B3744  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B6A08 001B3748  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B6A0C 001B374C  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801B6A10 001B3750  93 A1 00 0C */	stw r29, 0xc(r1)
/* 801B6A14 001B3754  3B A0 00 00 */	li r29, 0x0
/* 801B6A18 001B3758  93 81 00 08 */	stw r28, 0x8(r1)
/* 801B6A1C 001B375C  3B 83 7B 58 */	addi r28, r3, lbl_80317B58@l
/* 801B6A20 001B3760  3B FC 04 18 */	addi r31, r28, 0x418
/* 801B6A24 001B3764  B0 1C 06 E0 */	sth r0, 0x6e0(r28)
/* 801B6A28 001B3768  38 00 00 01 */	li r0, 0x1
/* 801B6A2C 001B376C  38 7F 02 E8 */	addi r3, r31, 0x2e8
/* 801B6A30 001B3770  B0 1C 06 E2 */	sth r0, 0x6e2(r28)
/* 801B6A34 001B3774  38 00 FF FF */	li r0, -0x1
/* 801B6A38 001B3778  90 9C 06 EC */	stw r4, 0x6ec(r28)
/* 801B6A3C 001B377C  90 9C 06 E8 */	stw r4, 0x6e8(r28)
/* 801B6A40 001B3780  93 BC 06 E4 */	stw r29, 0x6e4(r28)
/* 801B6A44 001B3784  90 1C 06 F0 */	stw r0, 0x6f0(r28)
/* 801B6A48 001B3788  93 BC 07 08 */	stw r29, 0x708(r28)
/* 801B6A4C 001B378C  48 00 00 FD */	bl OSInitThreadQueue
/* 801B6A50 001B3790  93 BC 07 10 */	stw r29, 0x710(r28)
/* 801B6A54 001B3794  3F C0 80 00 */	lis r30, 0x800000D8@ha
/* 801B6A58 001B3798  38 7F 00 00 */	addi r3, r31, 0x0
/* 801B6A5C 001B379C  93 BC 07 0C */	stw r29, 0x70c(r28)
/* 801B6A60 001B37A0  93 FE 00 D8 */	stw r31, 0x800000D8@l(r30)
/* 801B6A64 001B37A4  4B FF C4 89 */	bl OSClearContext
/* 801B6A68 001B37A8  7F E3 FB 78 */	mr r3, r31
/* 801B6A6C 001B37AC  4B FF C2 B9 */	bl OSSetCurrentContext
/* 801B6A70 001B37B0  3C 60 80 36 */	lis r3, _stack_addr@ha
/* 801B6A74 001B37B4  38 03 CF A0 */	addi r0, r3, _stack_addr@l
/* 801B6A78 001B37B8  3C 60 80 35 */	lis r3, _f_stack@ha
/* 801B6A7C 001B37BC  90 1C 07 1C */	stw r0, 0x71c(r28)
/* 801B6A80 001B37C0  38 03 CF A0 */	addi r0, r3, _f_stack@l
/* 801B6A84 001B37C4  90 1C 07 20 */	stw r0, 0x720(r28)
/* 801B6A88 001B37C8  3C 60 DE AE */	lis r3, 0xDEADBABE@ha
/* 801B6A8C 001B37CC  38 03 BA BE */	addi r0, r3, 0xDEADBABE@l
/* 801B6A90 001B37D0  80 7C 07 20 */	lwz r3, 0x720(r28)
/* 801B6A94 001B37D4  7F E4 FB 78 */	mr r4, r31
/* 801B6A98 001B37D8  90 03 00 00 */	stw r0, 0x0(r3)
/* 801B6A9C 001B37DC  81 8D A1 E8 */	lwz r12, lbl_80348BA8@sda21(r13)
/* 801B6AA0 001B37E0  80 7E 00 E4 */	lwz r3, 0xe4(r30)
/* 801B6AA4 001B37E4  7D 88 03 A6 */	mtlr r12
/* 801B6AA8 001B37E8  4E 80 00 21 */	blrl
/* 801B6AAC 001B37EC  93 FE 00 E4 */	stw r31, 0xe4(r30)
/* 801B6AB0 001B37F0  38 60 00 00 */	li r3, 0x0
/* 801B6AB4 001B37F4  48 00 10 91 */	bl func_801B7B44
/* 801B6AB8 001B37F8  93 AD AC B8 */	stw r29, RunQueueBits@sda21(r13)
/* 801B6ABC 001B37FC  3B C0 00 00 */	li r30, 0x0
/* 801B6AC0 001B3800  57 C0 18 38 */	slwi r0, r30, 3
/* 801B6AC4 001B3804  93 AD AC BC */	stw r29, RunQueueHint@sda21(r13)
/* 801B6AC8 001B3808  7F BC 02 14 */	add r29, r28, r0
lbl_801B6ACC:
/* 801B6ACC 001B380C  7F A3 EB 78 */	mr r3, r29
/* 801B6AD0 001B3810  48 00 00 79 */	bl OSInitThreadQueue
/* 801B6AD4 001B3814  3B DE 00 01 */	addi r30, r30, 0x1
/* 801B6AD8 001B3818  2C 1E 00 1F */	cmpwi r30, 0x1f
/* 801B6ADC 001B381C  3B BD 00 08 */	addi r29, r29, 0x8
/* 801B6AE0 001B3820  40 81 FF EC */	ble lbl_801B6ACC
/* 801B6AE4 001B3824  3F C0 80 00 */	lis r30, 0x800000DC@ha
/* 801B6AE8 001B3828  38 7E 00 DC */	addi r3, r30, 0x800000DC@l
/* 801B6AEC 001B382C  48 00 00 5D */	bl OSInitThreadQueue
/* 801B6AF0 001B3830  38 9E 00 DC */	addi r4, r30, 0xdc
/* 801B6AF4 001B3834  84 64 00 04 */	lwzu r3, 0x4(r4)
/* 801B6AF8 001B3838  28 03 00 00 */	cmplwi r3, 0x0
/* 801B6AFC 001B383C  40 82 00 0C */	bne lbl_801B6B08
/* 801B6B00 001B3840  93 FE 00 DC */	stw r31, 0xdc(r30)
/* 801B6B04 001B3844  48 00 00 08 */	b func_801B6B0C
lbl_801B6B08:
/* 801B6B08 001B3848  93 E3 02 FC */	stw r31, 0x2fc(r3)

.global func_801B6B0C
func_801B6B0C:
/* 801B6B0C 001B384C  90 7F 03 00 */	stw r3, 0x300(r31)
/* 801B6B10 001B3850  3B C0 00 00 */	li r30, 0x0
/* 801B6B14 001B3854  38 7C 07 30 */	addi r3, r28, 0x730
/* 801B6B18 001B3858  93 DF 02 FC */	stw r30, 0x2fc(r31)
/* 801B6B1C 001B385C  93 E4 00 00 */	stw r31, 0x0(r4)
/* 801B6B20 001B3860  4B FF C3 CD */	bl OSClearContext
/* 801B6B24 001B3864  93 CD AC C0 */	stw r30, Reschedule@sda21(r13)
/* 801B6B28 001B3868  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B6B2C 001B386C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B6B30 001B3870  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801B6B34 001B3874  83 A1 00 0C */	lwz r29, 0xc(r1)
/* 801B6B38 001B3878  83 81 00 08 */	lwz r28, 0x8(r1)
/* 801B6B3C 001B387C  38 21 00 18 */	addi r1, r1, 0x18
/* 801B6B40 001B3880  7C 08 03 A6 */	mtlr r0
/* 801B6B44 001B3884  4E 80 00 20 */	blr

.global OSInitThreadQueue
OSInitThreadQueue:
/* 801B6B48 001B3888  38 00 00 00 */	li r0, 0x0
/* 801B6B4C 001B388C  90 03 00 04 */	stw r0, 0x4(r3)
/* 801B6B50 001B3890  90 03 00 00 */	stw r0, 0x0(r3)
/* 801B6B54 001B3894  4E 80 00 20 */	blr

.global OSGetCurrentThread
OSGetCurrentThread:
/* 801B6B58 001B3898  3C 60 80 00 */	lis r3, 0x800000E4@ha
/* 801B6B5C 001B389C  80 63 00 E4 */	lwz r3, 0x800000E4@l(r3)
/* 801B6B60 001B38A0  4E 80 00 20 */	blr

.global func_801B6B64
func_801B6B64:
/* 801B6B64 001B38A4  A0 63 02 C8 */	lhz r3, 0x2c8(r3)
/* 801B6B68 001B38A8  38 00 00 01 */	li r0, 0x1
/* 801B6B6C 001B38AC  28 03 00 08 */	cmplwi r3, 0x8
/* 801B6B70 001B38B0  41 82 00 10 */	beq lbl_801B6B80
/* 801B6B74 001B38B4  28 03 00 00 */	cmplwi r3, 0x0
/* 801B6B78 001B38B8  41 82 00 08 */	beq lbl_801B6B80
/* 801B6B7C 001B38BC  38 00 00 00 */	li r0, 0x0
lbl_801B6B80:
/* 801B6B80 001B38C0  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B6B84 001B38C4  41 82 00 0C */	beq lbl_801B6B90
/* 801B6B88 001B38C8  38 60 00 01 */	li r3, 0x1
/* 801B6B8C 001B38CC  4E 80 00 20 */	blr
lbl_801B6B90:
/* 801B6B90 001B38D0  38 60 00 00 */	li r3, 0x0
/* 801B6B94 001B38D4  4E 80 00 20 */	blr

.global OSDisableScheduler
OSDisableScheduler:
/* 801B6B98 001B38D8  7C 08 02 A6 */	mflr r0
/* 801B6B9C 001B38DC  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B6BA0 001B38E0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801B6BA4 001B38E4  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801B6BA8 001B38E8  4B FF CE 9D */	bl OSDisableInterrupts
/* 801B6BAC 001B38EC  80 8D AC C0 */	lwz r4, Reschedule@sda21(r13)
/* 801B6BB0 001B38F0  38 04 00 01 */	addi r0, r4, 0x1
/* 801B6BB4 001B38F4  90 0D AC C0 */	stw r0, Reschedule@sda21(r13)
/* 801B6BB8 001B38F8  7C 9F 23 78 */	mr r31, r4
/* 801B6BBC 001B38FC  4B FF CE B1 */	bl OSRestoreInterrupts
/* 801B6BC0 001B3900  7F E3 FB 78 */	mr r3, r31
/* 801B6BC4 001B3904  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801B6BC8 001B3908  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801B6BCC 001B390C  38 21 00 10 */	addi r1, r1, 0x10
/* 801B6BD0 001B3910  7C 08 03 A6 */	mtlr r0
/* 801B6BD4 001B3914  4E 80 00 20 */	blr

.global OSEnableScheduler
OSEnableScheduler:
/* 801B6BD8 001B3918  7C 08 02 A6 */	mflr r0
/* 801B6BDC 001B391C  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B6BE0 001B3920  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801B6BE4 001B3924  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801B6BE8 001B3928  4B FF CE 5D */	bl OSDisableInterrupts
/* 801B6BEC 001B392C  80 8D AC C0 */	lwz r4, Reschedule@sda21(r13)
/* 801B6BF0 001B3930  38 04 FF FF */	addi r0, r4, -0x1
/* 801B6BF4 001B3934  90 0D AC C0 */	stw r0, Reschedule@sda21(r13)
/* 801B6BF8 001B3938  7C 9F 23 78 */	mr r31, r4
/* 801B6BFC 001B393C  4B FF CE 71 */	bl OSRestoreInterrupts
/* 801B6C00 001B3940  7F E3 FB 78 */	mr r3, r31
/* 801B6C04 001B3944  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801B6C08 001B3948  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801B6C0C 001B394C  38 21 00 10 */	addi r1, r1, 0x10
/* 801B6C10 001B3950  7C 08 03 A6 */	mtlr r0
/* 801B6C14 001B3954  4E 80 00 20 */	blr

.global UnsetRun
UnsetRun:
/* 801B6C18 001B3958  80 83 02 E0 */	lwz r4, 0x2e0(r3)
/* 801B6C1C 001B395C  80 A3 02 DC */	lwz r5, 0x2dc(r3)
/* 801B6C20 001B3960  28 04 00 00 */	cmplwi r4, 0x0
/* 801B6C24 001B3964  80 C3 02 E4 */	lwz r6, 0x2e4(r3)
/* 801B6C28 001B3968  40 82 00 0C */	bne lbl_801B6C34
/* 801B6C2C 001B396C  90 C5 00 04 */	stw r6, 0x4(r5)
/* 801B6C30 001B3970  48 00 00 08 */	b func_801B6C38
lbl_801B6C34:
/* 801B6C34 001B3974  90 C4 02 E4 */	stw r6, 0x2e4(r4)
func_801B6C38:
/* 801B6C38 001B3978  28 06 00 00 */	cmplwi r6, 0x0
/* 801B6C3C 001B397C  40 82 00 0C */	bne lbl_801B6C48
/* 801B6C40 001B3980  90 85 00 00 */	stw r4, 0x0(r5)
/* 801B6C44 001B3984  48 00 00 08 */	b func_801B6C4C
lbl_801B6C48:
/* 801B6C48 001B3988  90 86 02 E0 */	stw r4, 0x2e0(r6)
func_801B6C4C:
/* 801B6C4C 001B398C  80 05 00 00 */	lwz r0, 0x0(r5)
/* 801B6C50 001B3990  28 00 00 00 */	cmplwi r0, 0x0
/* 801B6C54 001B3994  40 82 00 20 */	bne lbl_801B6C74
/* 801B6C58 001B3998  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 801B6C5C 001B399C  38 80 00 01 */	li r4, 0x1
/* 801B6C60 001B39A0  80 AD AC B8 */	lwz r5, RunQueueBits@sda21(r13)
/* 801B6C64 001B39A4  20 00 00 1F */	subfic r0, r0, 0x1f
/* 801B6C68 001B39A8  7C 80 00 30 */	slw r0, r4, r0
/* 801B6C6C 001B39AC  7C A0 00 78 */	andc r0, r5, r0
/* 801B6C70 001B39B0  90 0D AC B8 */	stw r0, RunQueueBits@sda21(r13)
lbl_801B6C74:
/* 801B6C74 001B39B4  38 00 00 00 */	li r0, 0x0
/* 801B6C78 001B39B8  90 03 02 DC */	stw r0, 0x2dc(r3)
/* 801B6C7C 001B39BC  4E 80 00 20 */	blr

.global __OSGetEffectivePriority
__OSGetEffectivePriority:
/* 801B6C80 001B39C0  80 83 02 D4 */	lwz r4, 0x2d4(r3)
/* 801B6C84 001B39C4  80 A3 02 F4 */	lwz r5, 0x2f4(r3)
/* 801B6C88 001B39C8  48 00 00 24 */	b func_801B6CAC
lbl_801B6C8C:
/* 801B6C8C 001B39CC  80 65 00 00 */	lwz r3, 0x0(r5)
/* 801B6C90 001B39D0  28 03 00 00 */	cmplwi r3, 0x0
/* 801B6C94 001B39D4  41 82 00 14 */	beq lbl_801B6CA8
/* 801B6C98 001B39D8  80 03 02 D0 */	lwz r0, 0x2d0(r3)
/* 801B6C9C 001B39DC  7C 00 20 00 */	cmpw r0, r4
/* 801B6CA0 001B39E0  40 80 00 08 */	bge lbl_801B6CA8
/* 801B6CA4 001B39E4  7C 04 03 78 */	mr r4, r0
lbl_801B6CA8:
/* 801B6CA8 001B39E8  80 A5 00 10 */	lwz r5, 0x10(r5)

.global func_801B6CAC
func_801B6CAC:
/* 801B6CAC 001B39EC  28 05 00 00 */	cmplwi r5, 0x0
/* 801B6CB0 001B39F0  40 82 FF DC */	bne lbl_801B6C8C
/* 801B6CB4 001B39F4  7C 83 23 78 */	mr r3, r4
/* 801B6CB8 001B39F8  4E 80 00 20 */	blr

.global SetEffectivePriority
SetEffectivePriority:
/* 801B6CBC 001B39FC  7C 08 02 A6 */	mflr r0
/* 801B6CC0 001B3A00  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B6CC4 001B3A04  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B6CC8 001B3A08  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B6CCC 001B3A0C  7C 7F 1B 78 */	mr r31, r3
/* 801B6CD0 001B3A10  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801B6CD4 001B3A14  3B C4 00 00 */	addi r30, r4, 0x0
/* 801B6CD8 001B3A18  A0 03 02 C8 */	lhz r0, 0x2c8(r3)
/* 801B6CDC 001B3A1C  2C 00 00 03 */	cmpwi r0, 0x3
/* 801B6CE0 001B3A20  41 82 01 80 */	beq func_801B6E60
/* 801B6CE4 001B3A24  40 80 00 14 */	bge lbl_801B6CF8
/* 801B6CE8 001B3A28  2C 00 00 01 */	cmpwi r0, 0x1
/* 801B6CEC 001B3A2C  41 82 00 18 */	beq lbl_801B6D04
/* 801B6CF0 001B3A30  40 80 01 64 */	bge lbl_801B6E54
/* 801B6CF4 001B3A34  48 00 01 6C */	b func_801B6E60
lbl_801B6CF8:
/* 801B6CF8 001B3A38  2C 00 00 05 */	cmpwi r0, 0x5
/* 801B6CFC 001B3A3C  40 80 01 64 */	bge func_801B6E60
/* 801B6D00 001B3A40  48 00 00 7C */	b func_801B6D7C
lbl_801B6D04:
/* 801B6D04 001B3A44  7F E3 FB 78 */	mr r3, r31
/* 801B6D08 001B3A48  4B FF FF 11 */	bl UnsetRun
/* 801B6D0C 001B3A4C  93 DF 02 D0 */	stw r30, 0x2d0(r31)
/* 801B6D10 001B3A50  3C 60 80 31 */	lis r3, lbl_80317B58@ha
/* 801B6D14 001B3A54  38 03 7B 58 */	addi r0, r3, lbl_80317B58@l
/* 801B6D18 001B3A58  80 7F 02 D0 */	lwz r3, 0x2d0(r31)
/* 801B6D1C 001B3A5C  54 63 18 38 */	slwi r3, r3, 3
/* 801B6D20 001B3A60  7C 00 1A 14 */	add r0, r0, r3
/* 801B6D24 001B3A64  90 1F 02 DC */	stw r0, 0x2dc(r31)
/* 801B6D28 001B3A68  80 9F 02 DC */	lwz r4, 0x2dc(r31)
/* 801B6D2C 001B3A6C  80 64 00 04 */	lwz r3, 0x4(r4)
/* 801B6D30 001B3A70  28 03 00 00 */	cmplwi r3, 0x0
/* 801B6D34 001B3A74  40 82 00 0C */	bne lbl_801B6D40
/* 801B6D38 001B3A78  93 E4 00 00 */	stw r31, 0x0(r4)
/* 801B6D3C 001B3A7C  48 00 00 08 */	b func_801B6D44
lbl_801B6D40:
/* 801B6D40 001B3A80  93 E3 02 E0 */	stw r31, 0x2e0(r3)

.global func_801B6D44
func_801B6D44:
/* 801B6D44 001B3A84  90 7F 02 E4 */	stw r3, 0x2e4(r31)
/* 801B6D48 001B3A88  38 00 00 00 */	li r0, 0x0
/* 801B6D4C 001B3A8C  38 60 00 01 */	li r3, 0x1
/* 801B6D50 001B3A90  90 1F 02 E0 */	stw r0, 0x2e0(r31)
/* 801B6D54 001B3A94  80 9F 02 DC */	lwz r4, 0x2dc(r31)
/* 801B6D58 001B3A98  93 E4 00 04 */	stw r31, 0x4(r4)
/* 801B6D5C 001B3A9C  80 1F 02 D0 */	lwz r0, 0x2d0(r31)
/* 801B6D60 001B3AA0  80 8D AC B8 */	lwz r4, RunQueueBits@sda21(r13)
/* 801B6D64 001B3AA4  20 00 00 1F */	subfic r0, r0, 0x1f
/* 801B6D68 001B3AA8  7C 60 00 30 */	slw r0, r3, r0
/* 801B6D6C 001B3AAC  7C 80 03 78 */	or r0, r4, r0
/* 801B6D70 001B3AB0  90 0D AC B8 */	stw r0, RunQueueBits@sda21(r13)
/* 801B6D74 001B3AB4  90 6D AC BC */	stw r3, RunQueueHint@sda21(r13)
/* 801B6D78 001B3AB8  48 00 00 E8 */	b func_801B6E60

.global func_801B6D7C
func_801B6D7C:
/* 801B6D7C 001B3ABC  80 9F 02 E0 */	lwz r4, 0x2e0(r31)
/* 801B6D80 001B3AC0  80 BF 02 E4 */	lwz r5, 0x2e4(r31)
/* 801B6D84 001B3AC4  28 04 00 00 */	cmplwi r4, 0x0
/* 801B6D88 001B3AC8  40 82 00 10 */	bne lbl_801B6D98
/* 801B6D8C 001B3ACC  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 801B6D90 001B3AD0  90 A3 00 04 */	stw r5, 0x4(r3)
/* 801B6D94 001B3AD4  48 00 00 08 */	b func_801B6D9C
lbl_801B6D98:
/* 801B6D98 001B3AD8  90 A4 02 E4 */	stw r5, 0x2e4(r4)

.global func_801B6D9C
func_801B6D9C:
/* 801B6D9C 001B3ADC  28 05 00 00 */	cmplwi r5, 0x0
/* 801B6DA0 001B3AE0  40 82 00 10 */	bne lbl_801B6DB0
/* 801B6DA4 001B3AE4  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 801B6DA8 001B3AE8  90 83 00 00 */	stw r4, 0x0(r3)
/* 801B6DAC 001B3AEC  48 00 00 08 */	b func_801B6DB4
lbl_801B6DB0:
/* 801B6DB0 001B3AF0  90 85 02 E0 */	stw r4, 0x2e0(r5)

.global func_801B6DB4
func_801B6DB4:
/* 801B6DB4 001B3AF4  93 DF 02 D0 */	stw r30, 0x2d0(r31)
/* 801B6DB8 001B3AF8  80 9F 02 DC */	lwz r4, 0x2dc(r31)
/* 801B6DBC 001B3AFC  80 A4 00 00 */	lwz r5, 0x0(r4)
/* 801B6DC0 001B3B00  48 00 00 08 */	b func_801B6DC8
lbl_801B6DC4:
/* 801B6DC4 001B3B04  80 A5 02 E0 */	lwz r5, 0x2e0(r5)

.global func_801B6DC8
func_801B6DC8:
/* 801B6DC8 001B3B08  28 05 00 00 */	cmplwi r5, 0x0
/* 801B6DCC 001B3B0C  41 82 00 14 */	beq lbl_801B6DE0
/* 801B6DD0 001B3B10  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 801B6DD4 001B3B14  80 1F 02 D0 */	lwz r0, 0x2d0(r31)
/* 801B6DD8 001B3B18  7C 03 00 00 */	cmpw r3, r0
/* 801B6DDC 001B3B1C  40 81 FF E8 */	ble lbl_801B6DC4
lbl_801B6DE0:
/* 801B6DE0 001B3B20  28 05 00 00 */	cmplwi r5, 0x0
/* 801B6DE4 001B3B24  40 82 00 34 */	bne lbl_801B6E18
/* 801B6DE8 001B3B28  80 64 00 04 */	lwz r3, 0x4(r4)
/* 801B6DEC 001B3B2C  28 03 00 00 */	cmplwi r3, 0x0
/* 801B6DF0 001B3B30  40 82 00 0C */	bne lbl_801B6DFC
/* 801B6DF4 001B3B34  93 E4 00 00 */	stw r31, 0x0(r4)
/* 801B6DF8 001B3B38  48 00 00 08 */	b func_801B6E00
lbl_801B6DFC:
/* 801B6DFC 001B3B3C  93 E3 02 E0 */	stw r31, 0x2e0(r3)

.global func_801B6E00
func_801B6E00:
/* 801B6E00 001B3B40  90 7F 02 E4 */	stw r3, 0x2e4(r31)
/* 801B6E04 001B3B44  38 00 00 00 */	li r0, 0x0
/* 801B6E08 001B3B48  90 1F 02 E0 */	stw r0, 0x2e0(r31)
/* 801B6E0C 001B3B4C  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 801B6E10 001B3B50  93 E3 00 04 */	stw r31, 0x4(r3)
/* 801B6E14 001B3B54  48 00 00 2C */	b func_801B6E40
lbl_801B6E18:
/* 801B6E18 001B3B58  90 BF 02 E0 */	stw r5, 0x2e0(r31)
/* 801B6E1C 001B3B5C  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 801B6E20 001B3B60  93 E5 02 E4 */	stw r31, 0x2e4(r5)
/* 801B6E24 001B3B64  28 03 00 00 */	cmplwi r3, 0x0
/* 801B6E28 001B3B68  90 7F 02 E4 */	stw r3, 0x2e4(r31)
/* 801B6E2C 001B3B6C  40 82 00 10 */	bne lbl_801B6E3C
/* 801B6E30 001B3B70  80 7F 02 DC */	lwz r3, 0x2dc(r31)
/* 801B6E34 001B3B74  93 E3 00 00 */	stw r31, 0x0(r3)
/* 801B6E38 001B3B78  48 00 00 08 */	b func_801B6E40
lbl_801B6E3C:
/* 801B6E3C 001B3B7C  93 E3 02 E0 */	stw r31, 0x2e0(r3)

.global func_801B6E40
func_801B6E40:
/* 801B6E40 001B3B80  80 7F 02 F0 */	lwz r3, 0x2f0(r31)
/* 801B6E44 001B3B84  28 03 00 00 */	cmplwi r3, 0x0
/* 801B6E48 001B3B88  41 82 00 18 */	beq func_801B6E60
/* 801B6E4C 001B3B8C  80 63 00 08 */	lwz r3, 0x8(r3)
/* 801B6E50 001B3B90  48 00 00 14 */	b func_801B6E64
lbl_801B6E54:
/* 801B6E54 001B3B94  38 00 00 01 */	li r0, 0x1
/* 801B6E58 001B3B98  90 0D AC BC */	stw r0, RunQueueHint@sda21(r13)
/* 801B6E5C 001B3B9C  93 DF 02 D0 */	stw r30, 0x2d0(r31)

.global func_801B6E60
func_801B6E60:
/* 801B6E60 001B3BA0  38 60 00 00 */	li r3, 0x0

.global func_801B6E64
func_801B6E64:
/* 801B6E64 001B3BA4  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B6E68 001B3BA8  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B6E6C 001B3BAC  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801B6E70 001B3BB0  38 21 00 18 */	addi r1, r1, 0x18
/* 801B6E74 001B3BB4  7C 08 03 A6 */	mtlr r0
/* 801B6E78 001B3BB8  4E 80 00 20 */	blr

.global SelectThread
SelectThread:
/* 801B6E7C 001B3BBC  7C 08 02 A6 */	mflr r0
/* 801B6E80 001B3BC0  3C 80 80 31 */	lis r4, lbl_80317B58@ha
/* 801B6E84 001B3BC4  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B6E88 001B3BC8  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B6E8C 001B3BCC  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B6E90 001B3BD0  3B E4 7B 58 */	addi r31, r4, lbl_80317B58@l
/* 801B6E94 001B3BD4  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801B6E98 001B3BD8  3B C3 00 00 */	addi r30, r3, 0x0
/* 801B6E9C 001B3BDC  80 0D AC C0 */	lwz r0, Reschedule@sda21(r13)
/* 801B6EA0 001B3BE0  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B6EA4 001B3BE4  40 81 00 0C */	ble lbl_801B6EB0
/* 801B6EA8 001B3BE8  38 60 00 00 */	li r3, 0x0
/* 801B6EAC 001B3BEC  48 00 01 E0 */	b func_801B708C
lbl_801B6EB0:
/* 801B6EB0 001B3BF0  4B FF BE D1 */	bl OSGetCurrentContext
/* 801B6EB4 001B3BF4  3C 80 80 00 */	lis r4, 0x800000E4@ha
/* 801B6EB8 001B3BF8  80 C4 00 E4 */	lwz r6, 0x800000E4@l(r4)
/* 801B6EBC 001B3BFC  7C 03 30 40 */	cmplw r3, r6
/* 801B6EC0 001B3C00  38 66 00 00 */	addi r3, r6, 0x0
/* 801B6EC4 001B3C04  41 82 00 0C */	beq lbl_801B6ED0
/* 801B6EC8 001B3C08  38 60 00 00 */	li r3, 0x0
/* 801B6ECC 001B3C0C  48 00 01 C0 */	b func_801B708C
lbl_801B6ED0:
/* 801B6ED0 001B3C10  28 06 00 00 */	cmplwi r6, 0x0
/* 801B6ED4 001B3C14  41 82 00 BC */	beq lbl_801B6F90
/* 801B6ED8 001B3C18  A0 06 02 C8 */	lhz r0, 0x2c8(r6)
/* 801B6EDC 001B3C1C  28 00 00 02 */	cmplwi r0, 0x2
/* 801B6EE0 001B3C20  40 82 00 90 */	bne lbl_801B6F70
/* 801B6EE4 001B3C24  2C 1E 00 00 */	cmpwi r30, 0x0
/* 801B6EE8 001B3C28  40 82 00 20 */	bne lbl_801B6F08
/* 801B6EEC 001B3C2C  80 8D AC B8 */	lwz r4, RunQueueBits@sda21(r13)
/* 801B6EF0 001B3C30  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 801B6EF4 001B3C34  7C 84 00 34 */	cntlzw r4, r4
/* 801B6EF8 001B3C38  7C 00 20 00 */	cmpw r0, r4
/* 801B6EFC 001B3C3C  41 81 00 0C */	bgt lbl_801B6F08
/* 801B6F00 001B3C40  38 60 00 00 */	li r3, 0x0
/* 801B6F04 001B3C44  48 00 01 88 */	b func_801B708C
lbl_801B6F08:
/* 801B6F08 001B3C48  38 00 00 01 */	li r0, 0x1
/* 801B6F0C 001B3C4C  B0 06 02 C8 */	sth r0, 0x2c8(r6)
/* 801B6F10 001B3C50  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 801B6F14 001B3C54  54 00 18 38 */	slwi r0, r0, 3
/* 801B6F18 001B3C58  7C 1F 02 14 */	add r0, r31, r0
/* 801B6F1C 001B3C5C  90 06 02 DC */	stw r0, 0x2dc(r6)
/* 801B6F20 001B3C60  80 A6 02 DC */	lwz r5, 0x2dc(r6)
/* 801B6F24 001B3C64  80 85 00 04 */	lwz r4, 0x4(r5)
/* 801B6F28 001B3C68  28 04 00 00 */	cmplwi r4, 0x0
/* 801B6F2C 001B3C6C  40 82 00 0C */	bne lbl_801B6F38
/* 801B6F30 001B3C70  90 C5 00 00 */	stw r6, 0x0(r5)
/* 801B6F34 001B3C74  48 00 00 08 */	b func_801B6F3C
lbl_801B6F38:
/* 801B6F38 001B3C78  90 C4 02 E0 */	stw r6, 0x2e0(r4)
func_801B6F3C:
/* 801B6F3C 001B3C7C  90 86 02 E4 */	stw r4, 0x2e4(r6)
/* 801B6F40 001B3C80  38 00 00 00 */	li r0, 0x0
/* 801B6F44 001B3C84  38 80 00 01 */	li r4, 0x1
/* 801B6F48 001B3C88  90 06 02 E0 */	stw r0, 0x2e0(r6)
/* 801B6F4C 001B3C8C  80 A6 02 DC */	lwz r5, 0x2dc(r6)
/* 801B6F50 001B3C90  90 C5 00 04 */	stw r6, 0x4(r5)
/* 801B6F54 001B3C94  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 801B6F58 001B3C98  80 AD AC B8 */	lwz r5, RunQueueBits@sda21(r13)
/* 801B6F5C 001B3C9C  20 00 00 1F */	subfic r0, r0, 0x1f
/* 801B6F60 001B3CA0  7C 80 00 30 */	slw r0, r4, r0
/* 801B6F64 001B3CA4  7C A0 03 78 */	or r0, r5, r0
/* 801B6F68 001B3CA8  90 0D AC B8 */	stw r0, RunQueueBits@sda21(r13)
/* 801B6F6C 001B3CAC  90 8D AC BC */	stw r4, RunQueueHint@sda21(r13)
lbl_801B6F70:
/* 801B6F70 001B3CB0  A0 06 01 A2 */	lhz r0, 0x1a2(r6)
/* 801B6F74 001B3CB4  54 00 07 BD */	rlwinm. r0, r0, 0, 30, 30
/* 801B6F78 001B3CB8  40 82 00 18 */	bne lbl_801B6F90
/* 801B6F7C 001B3CBC  4B FF BE 11 */	bl OSSaveContext
/* 801B6F80 001B3CC0  28 03 00 00 */	cmplwi r3, 0x0
/* 801B6F84 001B3CC4  41 82 00 0C */	beq lbl_801B6F90
/* 801B6F88 001B3CC8  38 60 00 00 */	li r3, 0x0
/* 801B6F8C 001B3CCC  48 00 01 00 */	b func_801B708C
lbl_801B6F90:
/* 801B6F90 001B3CD0  80 0D AC B8 */	lwz r0, RunQueueBits@sda21(r13)
/* 801B6F94 001B3CD4  28 00 00 00 */	cmplwi r0, 0x0
/* 801B6F98 001B3CD8  40 82 00 54 */	bne lbl_801B6FEC
/* 801B6F9C 001B3CDC  81 8D A1 E8 */	lwz r12, lbl_80348BA8@sda21(r13)
/* 801B6FA0 001B3CE0  3F C0 80 00 */	lis r30, 0x800000E4@ha
/* 801B6FA4 001B3CE4  80 7E 00 E4 */	lwz r3, 0x800000E4@l(r30)
/* 801B6FA8 001B3CE8  38 80 00 00 */	li r4, 0x0
/* 801B6FAC 001B3CEC  7D 88 03 A6 */	mtlr r12
/* 801B6FB0 001B3CF0  4E 80 00 21 */	blrl
/* 801B6FB4 001B3CF4  38 00 00 00 */	li r0, 0x0
/* 801B6FB8 001B3CF8  90 1E 00 E4 */	stw r0, 0xe4(r30)
/* 801B6FBC 001B3CFC  38 7F 07 30 */	addi r3, r31, 0x730
/* 801B6FC0 001B3D00  4B FF BD 65 */	bl OSSetCurrentContext
lbl_801B6FC4:
/* 801B6FC4 001B3D04  4B FF CA 95 */	bl OSEnableInterrupts
lbl_801B6FC8:
/* 801B6FC8 001B3D08  80 0D AC B8 */	lwz r0, RunQueueBits@sda21(r13)
/* 801B6FCC 001B3D0C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B6FD0 001B3D10  41 82 FF F8 */	beq lbl_801B6FC8
/* 801B6FD4 001B3D14  4B FF CA 71 */	bl OSDisableInterrupts
/* 801B6FD8 001B3D18  80 0D AC B8 */	lwz r0, RunQueueBits@sda21(r13)
/* 801B6FDC 001B3D1C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B6FE0 001B3D20  41 82 FF E4 */	beq lbl_801B6FC4
/* 801B6FE4 001B3D24  38 7F 07 30 */	addi r3, r31, 0x730
/* 801B6FE8 001B3D28  4B FF BF 05 */	bl OSClearContext
lbl_801B6FEC:
/* 801B6FEC 001B3D2C  38 60 00 00 */	li r3, 0x0
/* 801B6FF0 001B3D30  90 6D AC BC */	stw r3, RunQueueHint@sda21(r13)
/* 801B6FF4 001B3D34  80 0D AC B8 */	lwz r0, RunQueueBits@sda21(r13)
/* 801B6FF8 001B3D38  7C 07 00 34 */	cntlzw r7, r0
/* 801B6FFC 001B3D3C  54 E0 18 38 */	slwi r0, r7, 3
/* 801B7000 001B3D40  7C 9F 02 14 */	add r4, r31, r0
/* 801B7004 001B3D44  80 A4 00 00 */	lwz r5, 0x0(r4)
/* 801B7008 001B3D48  80 C5 02 E0 */	lwz r6, 0x2e0(r5)
/* 801B700C 001B3D4C  3B C5 00 00 */	addi r30, r5, 0x0
/* 801B7010 001B3D50  28 06 00 00 */	cmplwi r6, 0x0
/* 801B7014 001B3D54  40 82 00 0C */	bne lbl_801B7020
/* 801B7018 001B3D58  90 64 00 04 */	stw r3, 0x4(r4)
/* 801B701C 001B3D5C  48 00 00 08 */	b func_801B7024
lbl_801B7020:
/* 801B7020 001B3D60  90 66 02 E4 */	stw r3, 0x2e4(r6)
func_801B7024:
/* 801B7024 001B3D64  90 C4 00 00 */	stw r6, 0x0(r4)
/* 801B7028 001B3D68  80 04 00 00 */	lwz r0, 0x0(r4)
/* 801B702C 001B3D6C  28 00 00 00 */	cmplwi r0, 0x0
/* 801B7030 001B3D70  40 82 00 1C */	bne lbl_801B704C
/* 801B7034 001B3D74  20 07 00 1F */	subfic r0, r7, 0x1f
/* 801B7038 001B3D78  80 8D AC B8 */	lwz r4, RunQueueBits@sda21(r13)
/* 801B703C 001B3D7C  38 60 00 01 */	li r3, 0x1
/* 801B7040 001B3D80  7C 60 00 30 */	slw r0, r3, r0
/* 801B7044 001B3D84  7C 80 00 78 */	andc r0, r4, r0
/* 801B7048 001B3D88  90 0D AC B8 */	stw r0, RunQueueBits@sda21(r13)
lbl_801B704C:
/* 801B704C 001B3D8C  38 00 00 00 */	li r0, 0x0
/* 801B7050 001B3D90  90 1E 02 DC */	stw r0, 0x2dc(r30)
/* 801B7054 001B3D94  38 00 00 02 */	li r0, 0x2
/* 801B7058 001B3D98  3F E0 80 00 */	lis r31, 0x800000E4@ha
/* 801B705C 001B3D9C  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 801B7060 001B3DA0  7F C4 F3 78 */	mr r4, r30
/* 801B7064 001B3DA4  81 8D A1 E8 */	lwz r12, lbl_80348BA8@sda21(r13)
/* 801B7068 001B3DA8  80 7F 00 E4 */	lwz r3, 0x800000E4@l(r31)
/* 801B706C 001B3DAC  7D 88 03 A6 */	mtlr r12
/* 801B7070 001B3DB0  4E 80 00 21 */	blrl
/* 801B7074 001B3DB4  93 DF 00 E4 */	stw r30, 0xe4(r31)
/* 801B7078 001B3DB8  7F C3 F3 78 */	mr r3, r30
/* 801B707C 001B3DBC  4B FF BC A9 */	bl OSSetCurrentContext
/* 801B7080 001B3DC0  7F C3 F3 78 */	mr r3, r30
/* 801B7084 001B3DC4  4B FF BD 89 */	bl OSLoadContext
/* 801B7088 001B3DC8  7F C3 F3 78 */	mr r3, r30
func_801B708C:
/* 801B708C 001B3DCC  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B7090 001B3DD0  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B7094 001B3DD4  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801B7098 001B3DD8  38 21 00 18 */	addi r1, r1, 0x18
/* 801B709C 001B3DDC  7C 08 03 A6 */	mtlr r0
/* 801B70A0 001B3DE0  4E 80 00 20 */	blr

.global __OSReschedule
__OSReschedule:
/* 801B70A4 001B3DE4  7C 08 02 A6 */	mflr r0
/* 801B70A8 001B3DE8  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B70AC 001B3DEC  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B70B0 001B3DF0  80 0D AC BC */	lwz r0, RunQueueHint@sda21(r13)
/* 801B70B4 001B3DF4  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B70B8 001B3DF8  41 82 00 0C */	beq lbl_801B70C4
/* 801B70BC 001B3DFC  38 60 00 00 */	li r3, 0x0
/* 801B70C0 001B3E00  4B FF FD BD */	bl SelectThread
lbl_801B70C4:
/* 801B70C4 001B3E04  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B70C8 001B3E08  38 21 00 08 */	addi r1, r1, 0x8
/* 801B70CC 001B3E0C  7C 08 03 A6 */	mtlr r0
/* 801B70D0 001B3E10  4E 80 00 20 */	blr

.global func_801B70D4
func_801B70D4:
/* 801B70D4 001B3E14  7C 08 02 A6 */	mflr r0
/* 801B70D8 001B3E18  2C 08 00 00 */	cmpwi r8, 0x0
/* 801B70DC 001B3E1C  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B70E0 001B3E20  94 21 FF B0 */	stwu r1, -0x50(r1)
/* 801B70E4 001B3E24  BF 61 00 3C */	stmw r27, 0x3c(r1)
/* 801B70E8 001B3E28  3B E3 00 00 */	addi r31, r3, 0x0
/* 801B70EC 001B3E2C  3B 65 00 00 */	addi r27, r5, 0x0
/* 801B70F0 001B3E30  3B 86 00 00 */	addi r28, r6, 0x0
/* 801B70F4 001B3E34  3B A7 00 00 */	addi r29, r7, 0x0
/* 801B70F8 001B3E38  41 80 00 0C */	blt lbl_801B7104
/* 801B70FC 001B3E3C  2C 08 00 1F */	cmpwi r8, 0x1f
/* 801B7100 001B3E40  40 81 00 0C */	ble lbl_801B710C
lbl_801B7104:
/* 801B7104 001B3E44  38 60 00 00 */	li r3, 0x0
/* 801B7108 001B3E48  48 00 01 A0 */	b func_801B72A8
lbl_801B710C:
/* 801B710C 001B3E4C  38 C0 00 01 */	li r6, 0x1
/* 801B7110 001B3E50  B0 DF 02 C8 */	sth r6, 0x2c8(r31)
/* 801B7114 001B3E54  55 20 07 FE */	clrlwi r0, r9, 31
/* 801B7118 001B3E58  57 87 00 38 */	rlwinm r7, r28, 0, 0, 28
/* 801B711C 001B3E5C  B0 1F 02 CA */	sth r0, 0x2ca(r31)
/* 801B7120 001B3E60  38 00 FF FF */	li r0, -0x1
/* 801B7124 001B3E64  3B C0 00 00 */	li r30, 0x0
/* 801B7128 001B3E68  91 1F 02 D4 */	stw r8, 0x2d4(r31)
/* 801B712C 001B3E6C  38 7F 00 00 */	addi r3, r31, 0x0
/* 801B7130 001B3E70  38 A7 FF F8 */	addi r5, r7, -0x8
/* 801B7134 001B3E74  91 1F 02 D0 */	stw r8, 0x2d0(r31)
/* 801B7138 001B3E78  90 DF 02 CC */	stw r6, 0x2cc(r31)
/* 801B713C 001B3E7C  90 1F 02 D8 */	stw r0, 0x2d8(r31)
/* 801B7140 001B3E80  93 DF 02 F0 */	stw r30, 0x2f0(r31)
/* 801B7144 001B3E84  93 DF 02 EC */	stw r30, 0x2ec(r31)
/* 801B7148 001B3E88  93 DF 02 E8 */	stw r30, 0x2e8(r31)
/* 801B714C 001B3E8C  93 DF 02 F8 */	stw r30, 0x2f8(r31)
/* 801B7150 001B3E90  93 DF 02 F4 */	stw r30, 0x2f4(r31)
/* 801B7154 001B3E94  93 C7 FF F8 */	stw r30, -0x8(r7)
/* 801B7158 001B3E98  93 C7 FF FC */	stw r30, -0x4(r7)
/* 801B715C 001B3E9C  4B FF BD B5 */	bl OSInitContext
/* 801B7160 001B3EA0  3C 60 80 1B */	lis r3, lbl_801B72BC@ha
/* 801B7164 001B3EA4  38 03 72 BC */	addi r0, r3, lbl_801B72BC@l
/* 801B7168 001B3EA8  90 1F 00 84 */	stw r0, 0x84(r31)
/* 801B716C 001B3EAC  3C 60 DE AE */	lis r3, 0xDEADBABE@ha
/* 801B7170 001B3EB0  7C 9D E0 50 */	subf r4, r29, r28
/* 801B7174 001B3EB4  93 7F 00 0C */	stw r27, 0xc(r31)
/* 801B7178 001B3EB8  38 03 BA BE */	addi r0, r3, 0xDEADBABE@l
/* 801B717C 001B3EBC  93 9F 03 04 */	stw r28, 0x304(r31)
/* 801B7180 001B3EC0  90 9F 03 08 */	stw r4, 0x308(r31)
/* 801B7184 001B3EC4  80 7F 03 08 */	lwz r3, 0x308(r31)
/* 801B7188 001B3EC8  90 03 00 00 */	stw r0, 0x0(r3)
/* 801B718C 001B3ECC  93 DF 03 0C */	stw r30, 0x30c(r31)
/* 801B7190 001B3ED0  93 DF 03 10 */	stw r30, 0x310(r31)
/* 801B7194 001B3ED4  93 DF 03 14 */	stw r30, 0x314(r31)
/* 801B7198 001B3ED8  4B FF C8 AD */	bl OSDisableInterrupts
/* 801B719C 001B3EDC  3C 80 80 31 */	lis r4, __OSErrorTable@ha
/* 801B71A0 001B3EE0  38 84 7A 90 */	addi r4, r4, __OSErrorTable@l
/* 801B71A4 001B3EE4  80 04 00 40 */	lwz r0, 0x40(r4)
/* 801B71A8 001B3EE8  28 00 00 00 */	cmplwi r0, 0x0
/* 801B71AC 001B3EEC  41 82 00 C4 */	beq lbl_801B7270
/* 801B71B0 001B3EF0  80 9F 01 9C */	lwz r4, 0x19c(r31)
/* 801B71B4 001B3EF4  38 00 00 04 */	li r0, 0x4
/* 801B71B8 001B3EF8  7C 09 03 A6 */	mtctr r0
/* 801B71BC 001B3EFC  38 BF 00 00 */	addi r5, r31, 0x0
/* 801B71C0 001B3F00  60 80 09 00 */	ori r0, r4, 0x900
/* 801B71C4 001B3F04  90 1F 01 9C */	stw r0, 0x19c(r31)
/* 801B71C8 001B3F08  A0 1F 01 A2 */	lhz r0, 0x1a2(r31)
/* 801B71CC 001B3F0C  60 00 00 01 */	ori r0, r0, 0x1
/* 801B71D0 001B3F10  B0 1F 01 A2 */	sth r0, 0x1a2(r31)
/* 801B71D4 001B3F14  80 0D A1 D8 */	lwz r0, lbl_80348B98@sda21(r13)
/* 801B71D8 001B3F18  54 00 06 38 */	rlwinm r0, r0, 0, 24, 28
/* 801B71DC 001B3F1C  60 00 00 04 */	ori r0, r0, 0x4
/* 801B71E0 001B3F20  90 1F 01 94 */	stw r0, 0x194(r31)
lbl_801B71E4:
/* 801B71E4 001B3F24  38 00 FF FF */	li r0, -0x1
/* 801B71E8 001B3F28  90 05 00 94 */	stw r0, 0x94(r5)
/* 801B71EC 001B3F2C  90 05 00 90 */	stw r0, 0x90(r5)
/* 801B71F0 001B3F30  90 05 01 CC */	stw r0, 0x1cc(r5)
/* 801B71F4 001B3F34  90 05 01 C8 */	stw r0, 0x1c8(r5)
/* 801B71F8 001B3F38  90 05 00 9C */	stw r0, 0x9c(r5)
/* 801B71FC 001B3F3C  90 05 00 98 */	stw r0, 0x98(r5)
/* 801B7200 001B3F40  90 05 01 D4 */	stw r0, 0x1d4(r5)
/* 801B7204 001B3F44  90 05 01 D0 */	stw r0, 0x1d0(r5)
/* 801B7208 001B3F48  90 05 00 A4 */	stw r0, 0xa4(r5)
/* 801B720C 001B3F4C  90 05 00 A0 */	stw r0, 0xa0(r5)
/* 801B7210 001B3F50  90 05 01 DC */	stw r0, 0x1dc(r5)
/* 801B7214 001B3F54  90 05 01 D8 */	stw r0, 0x1d8(r5)
/* 801B7218 001B3F58  90 05 00 AC */	stw r0, 0xac(r5)
/* 801B721C 001B3F5C  90 05 00 A8 */	stw r0, 0xa8(r5)
/* 801B7220 001B3F60  90 05 01 E4 */	stw r0, 0x1e4(r5)
/* 801B7224 001B3F64  90 05 01 E0 */	stw r0, 0x1e0(r5)
/* 801B7228 001B3F68  90 05 00 B4 */	stw r0, 0xb4(r5)
/* 801B722C 001B3F6C  90 05 00 B0 */	stw r0, 0xb0(r5)
/* 801B7230 001B3F70  90 05 01 EC */	stw r0, 0x1ec(r5)
/* 801B7234 001B3F74  90 05 01 E8 */	stw r0, 0x1e8(r5)
/* 801B7238 001B3F78  90 05 00 BC */	stw r0, 0xbc(r5)
/* 801B723C 001B3F7C  90 05 00 B8 */	stw r0, 0xb8(r5)
/* 801B7240 001B3F80  90 05 01 F4 */	stw r0, 0x1f4(r5)
/* 801B7244 001B3F84  90 05 01 F0 */	stw r0, 0x1f0(r5)
/* 801B7248 001B3F88  90 05 00 C4 */	stw r0, 0xc4(r5)
/* 801B724C 001B3F8C  90 05 00 C0 */	stw r0, 0xc0(r5)
/* 801B7250 001B3F90  90 05 01 FC */	stw r0, 0x1fc(r5)
/* 801B7254 001B3F94  90 05 01 F8 */	stw r0, 0x1f8(r5)
/* 801B7258 001B3F98  90 05 00 CC */	stw r0, 0xcc(r5)
/* 801B725C 001B3F9C  90 05 00 C8 */	stw r0, 0xc8(r5)
/* 801B7260 001B3FA0  90 05 02 04 */	stw r0, 0x204(r5)
/* 801B7264 001B3FA4  90 05 02 00 */	stw r0, 0x200(r5)
/* 801B7268 001B3FA8  38 A5 00 40 */	addi r5, r5, 0x40
/* 801B726C 001B3FAC  42 00 FF 78 */	bdnz lbl_801B71E4
lbl_801B7270:
/* 801B7270 001B3FB0  3C 80 80 00 */	lis r4, 0x800000DC@ha
/* 801B7274 001B3FB4  38 A4 00 DC */	addi r5, r4, 0x800000DC@l
/* 801B7278 001B3FB8  84 C5 00 04 */	lwzu r6, 0x4(r5)
/* 801B727C 001B3FBC  28 06 00 00 */	cmplwi r6, 0x0
/* 801B7280 001B3FC0  40 82 00 0C */	bne lbl_801B728C
/* 801B7284 001B3FC4  93 E4 00 DC */	stw r31, 0xdc(r4)
/* 801B7288 001B3FC8  48 00 00 08 */	b func_801B7290
lbl_801B728C:
/* 801B728C 001B3FCC  93 E6 02 FC */	stw r31, 0x2fc(r6)

.global func_801B7290
func_801B7290:
/* 801B7290 001B3FD0  90 DF 03 00 */	stw r6, 0x300(r31)
/* 801B7294 001B3FD4  38 00 00 00 */	li r0, 0x0
/* 801B7298 001B3FD8  90 1F 02 FC */	stw r0, 0x2fc(r31)
/* 801B729C 001B3FDC  93 E5 00 00 */	stw r31, 0x0(r5)
/* 801B72A0 001B3FE0  4B FF C7 CD */	bl OSRestoreInterrupts
/* 801B72A4 001B3FE4  38 60 00 01 */	li r3, 0x1

.global func_801B72A8
func_801B72A8:
/* 801B72A8 001B3FE8  BB 61 00 3C */	lmw r27, 0x3c(r1)
/* 801B72AC 001B3FEC  80 01 00 54 */	lwz r0, 0x54(r1)
/* 801B72B0 001B3FF0  38 21 00 50 */	addi r1, r1, 0x50
/* 801B72B4 001B3FF4  7C 08 03 A6 */	mtlr r0
/* 801B72B8 001B3FF8  4E 80 00 20 */	blr
lbl_801B72BC:
/* 801B72BC 001B3FFC  7C 08 02 A6 */	mflr r0
/* 801B72C0 001B4000  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B72C4 001B4004  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801B72C8 001B4008  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801B72CC 001B400C  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801B72D0 001B4010  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801B72D4 001B4014  93 81 00 10 */	stw r28, 0x10(r1)
/* 801B72D8 001B4018  7C 7C 1B 78 */	mr r28, r3
/* 801B72DC 001B401C  4B FF C7 69 */	bl OSDisableInterrupts
/* 801B72E0 001B4020  3F E0 80 00 */	lis r31, 0x800000E4@ha
/* 801B72E4 001B4024  83 DF 00 E4 */	lwz r30, 0x800000E4@l(r31)
/* 801B72E8 001B4028  3B A3 00 00 */	addi r29, r3, 0x0
/* 801B72EC 001B402C  38 7E 00 00 */	addi r3, r30, 0x0
/* 801B72F0 001B4030  4B FF BB FD */	bl OSClearContext
/* 801B72F4 001B4034  A0 1E 02 CA */	lhz r0, 0x2ca(r30)
/* 801B72F8 001B4038  54 00 07 FF */	clrlwi. r0, r0, 31
/* 801B72FC 001B403C  41 82 00 44 */	beq lbl_801B7340
/* 801B7300 001B4040  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 801B7304 001B4044  80 BE 03 00 */	lwz r5, 0x300(r30)
/* 801B7308 001B4048  28 04 00 00 */	cmplwi r4, 0x0
/* 801B730C 001B404C  40 82 00 0C */	bne lbl_801B7318
/* 801B7310 001B4050  90 BF 00 E0 */	stw r5, 0xe0(r31)
/* 801B7314 001B4054  48 00 00 08 */	b func_801B731C
lbl_801B7318:
/* 801B7318 001B4058  90 A4 03 00 */	stw r5, 0x300(r4)

.global func_801B731C
func_801B731C:
/* 801B731C 001B405C  28 05 00 00 */	cmplwi r5, 0x0
/* 801B7320 001B4060  40 82 00 10 */	bne lbl_801B7330
/* 801B7324 001B4064  3C 60 80 00 */	lis r3, 0x800000DC@ha
/* 801B7328 001B4068  90 83 00 DC */	stw r4, 0x800000DC@l(r3)
/* 801B732C 001B406C  48 00 00 08 */	b func_801B7334
lbl_801B7330:
/* 801B7330 001B4070  90 85 02 FC */	stw r4, 0x2fc(r5)

.global func_801B7334
func_801B7334:
/* 801B7334 001B4074  38 00 00 00 */	li r0, 0x0
/* 801B7338 001B4078  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 801B733C 001B407C  48 00 00 10 */	b func_801B734C
lbl_801B7340:
/* 801B7340 001B4080  38 00 00 08 */	li r0, 0x8
/* 801B7344 001B4084  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 801B7348 001B4088  93 9E 02 D8 */	stw r28, 0x2d8(r30)

.global func_801B734C
func_801B734C:
/* 801B734C 001B408C  7F C3 F3 78 */	mr r3, r30
/* 801B7350 001B4090  4B FF DE 35 */	bl __OSUnlockAllMutex
/* 801B7354 001B4094  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 801B7358 001B4098  48 00 06 E9 */	bl OSWakeupThread
/* 801B735C 001B409C  38 00 00 01 */	li r0, 0x1
/* 801B7360 001B40A0  90 0D AC BC */	stw r0, RunQueueHint@sda21(r13)
/* 801B7364 001B40A4  80 0D AC BC */	lwz r0, RunQueueHint@sda21(r13)
/* 801B7368 001B40A8  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B736C 001B40AC  41 82 00 0C */	beq lbl_801B7378
/* 801B7370 001B40B0  38 60 00 00 */	li r3, 0x0
/* 801B7374 001B40B4  4B FF FB 09 */	bl SelectThread
lbl_801B7378:
/* 801B7378 001B40B8  7F A3 EB 78 */	mr r3, r29
/* 801B737C 001B40BC  4B FF C6 F1 */	bl OSRestoreInterrupts
/* 801B7380 001B40C0  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801B7384 001B40C4  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801B7388 001B40C8  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801B738C 001B40CC  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801B7390 001B40D0  83 81 00 10 */	lwz r28, 0x10(r1)
/* 801B7394 001B40D4  38 21 00 20 */	addi r1, r1, 0x20
/* 801B7398 001B40D8  7C 08 03 A6 */	mtlr r0
/* 801B739C 001B40DC  4E 80 00 20 */	blr

.global OSCancelThread
OSCancelThread:
/* 801B73A0 001B40E0  7C 08 02 A6 */	mflr r0
/* 801B73A4 001B40E4  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B73A8 001B40E8  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801B73AC 001B40EC  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801B73B0 001B40F0  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801B73B4 001B40F4  7C 7E 1B 78 */	mr r30, r3
/* 801B73B8 001B40F8  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801B73BC 001B40FC  4B FF C6 89 */	bl OSDisableInterrupts
/* 801B73C0 001B4100  A0 1E 02 C8 */	lhz r0, 0x2c8(r30)
/* 801B73C4 001B4104  3B E3 00 00 */	addi r31, r3, 0x0
/* 801B73C8 001B4108  2C 00 00 03 */	cmpwi r0, 0x3
/* 801B73CC 001B410C  41 82 00 DC */	beq func_801B74A8
/* 801B73D0 001B4110  40 80 00 14 */	bge lbl_801B73E4
/* 801B73D4 001B4114  2C 00 00 01 */	cmpwi r0, 0x1
/* 801B73D8 001B4118  41 82 00 18 */	beq lbl_801B73F0
/* 801B73DC 001B411C  40 80 00 2C */	bge lbl_801B7408
/* 801B73E0 001B4120  48 00 00 C8 */	b func_801B74A8
lbl_801B73E4:
/* 801B73E4 001B4124  2C 00 00 05 */	cmpwi r0, 0x5
/* 801B73E8 001B4128  40 80 00 C0 */	bge func_801B74A8
/* 801B73EC 001B412C  48 00 00 28 */	b func_801B7414
lbl_801B73F0:
/* 801B73F0 001B4130  80 1E 02 CC */	lwz r0, 0x2cc(r30)
/* 801B73F4 001B4134  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B73F8 001B4138  41 81 00 BC */	bgt func_801B74B4
/* 801B73FC 001B413C  7F C3 F3 78 */	mr r3, r30
/* 801B7400 001B4140  4B FF F8 19 */	bl UnsetRun
/* 801B7404 001B4144  48 00 00 B0 */	b func_801B74B4
lbl_801B7408:
/* 801B7408 001B4148  38 00 00 01 */	li r0, 0x1
/* 801B740C 001B414C  90 0D AC BC */	stw r0, RunQueueHint@sda21(r13)
/* 801B7410 001B4150  48 00 00 A4 */	b func_801B74B4

.global func_801B7414
func_801B7414:
/* 801B7414 001B4154  80 9E 02 E0 */	lwz r4, 0x2e0(r30)
/* 801B7418 001B4158  80 BE 02 E4 */	lwz r5, 0x2e4(r30)
/* 801B741C 001B415C  28 04 00 00 */	cmplwi r4, 0x0
/* 801B7420 001B4160  40 82 00 10 */	bne lbl_801B7430
/* 801B7424 001B4164  80 7E 02 DC */	lwz r3, 0x2dc(r30)
/* 801B7428 001B4168  90 A3 00 04 */	stw r5, 0x4(r3)
/* 801B742C 001B416C  48 00 00 08 */	b func_801B7434
lbl_801B7430:
/* 801B7430 001B4170  90 A4 02 E4 */	stw r5, 0x2e4(r4)

.global func_801B7434
func_801B7434:
/* 801B7434 001B4174  28 05 00 00 */	cmplwi r5, 0x0
/* 801B7438 001B4178  40 82 00 10 */	bne lbl_801B7448
/* 801B743C 001B417C  80 7E 02 DC */	lwz r3, 0x2dc(r30)
/* 801B7440 001B4180  90 83 00 00 */	stw r4, 0x0(r3)
/* 801B7444 001B4184  48 00 00 08 */	b func_801B744C
lbl_801B7448:
/* 801B7448 001B4188  90 85 02 E0 */	stw r4, 0x2e0(r5)

.global func_801B744C
func_801B744C:
/* 801B744C 001B418C  38 00 00 00 */	li r0, 0x0
/* 801B7450 001B4190  90 1E 02 DC */	stw r0, 0x2dc(r30)
/* 801B7454 001B4194  80 1E 02 CC */	lwz r0, 0x2cc(r30)
/* 801B7458 001B4198  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B745C 001B419C  41 81 00 58 */	bgt func_801B74B4
/* 801B7460 001B41A0  80 7E 02 F0 */	lwz r3, 0x2f0(r30)
/* 801B7464 001B41A4  28 03 00 00 */	cmplwi r3, 0x0
/* 801B7468 001B41A8  41 82 00 4C */	beq func_801B74B4
/* 801B746C 001B41AC  83 A3 00 08 */	lwz r29, 0x8(r3)
lbl_801B7470:
/* 801B7470 001B41B0  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 801B7474 001B41B4  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B7478 001B41B8  41 81 00 3C */	bgt func_801B74B4
/* 801B747C 001B41BC  7F A3 EB 78 */	mr r3, r29
/* 801B7480 001B41C0  4B FF F8 01 */	bl __OSGetEffectivePriority
/* 801B7484 001B41C4  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 801B7488 001B41C8  38 83 00 00 */	addi r4, r3, 0x0
/* 801B748C 001B41CC  7C 00 20 00 */	cmpw r0, r4
/* 801B7490 001B41D0  41 82 00 24 */	beq func_801B74B4
/* 801B7494 001B41D4  7F A3 EB 78 */	mr r3, r29
/* 801B7498 001B41D8  4B FF F8 25 */	bl SetEffectivePriority
/* 801B749C 001B41DC  7C 7D 1B 79 */	mr. r29, r3
/* 801B74A0 001B41E0  40 82 FF D0 */	bne lbl_801B7470
/* 801B74A4 001B41E4  48 00 00 10 */	b func_801B74B4

.global func_801B74A8
func_801B74A8:
/* 801B74A8 001B41E8  7F E3 FB 78 */	mr r3, r31
/* 801B74AC 001B41EC  4B FF C5 C1 */	bl OSRestoreInterrupts
/* 801B74B0 001B41F0  48 00 00 90 */	b func_801B7540

.global func_801B74B4
func_801B74B4:
/* 801B74B4 001B41F4  7F C3 F3 78 */	mr r3, r30
/* 801B74B8 001B41F8  4B FF BA 35 */	bl OSClearContext
/* 801B74BC 001B41FC  A0 1E 02 CA */	lhz r0, 0x2ca(r30)
/* 801B74C0 001B4200  54 00 07 FF */	clrlwi. r0, r0, 31
/* 801B74C4 001B4204  41 82 00 48 */	beq lbl_801B750C
/* 801B74C8 001B4208  80 9E 02 FC */	lwz r4, 0x2fc(r30)
/* 801B74CC 001B420C  80 BE 03 00 */	lwz r5, 0x300(r30)
/* 801B74D0 001B4210  28 04 00 00 */	cmplwi r4, 0x0
/* 801B74D4 001B4214  40 82 00 10 */	bne lbl_801B74E4
/* 801B74D8 001B4218  3C 60 80 00 */	lis r3, 0x800000E0@ha
/* 801B74DC 001B421C  90 A3 00 E0 */	stw r5, 0x800000E0@l(r3)
/* 801B74E0 001B4220  48 00 00 08 */	b func_801B74E8
lbl_801B74E4:
/* 801B74E4 001B4224  90 A4 03 00 */	stw r5, 0x300(r4)

.global func_801B74E8
func_801B74E8:
/* 801B74E8 001B4228  28 05 00 00 */	cmplwi r5, 0x0
/* 801B74EC 001B422C  40 82 00 10 */	bne lbl_801B74FC
/* 801B74F0 001B4230  3C 60 80 00 */	lis r3, 0x800000DC@ha
/* 801B74F4 001B4234  90 83 00 DC */	stw r4, 0x800000DC@l(r3)
/* 801B74F8 001B4238  48 00 00 08 */	b func_801B7500
lbl_801B74FC:
/* 801B74FC 001B423C  90 85 02 FC */	stw r4, 0x2fc(r5)

.global func_801B7500
func_801B7500:
/* 801B7500 001B4240  38 00 00 00 */	li r0, 0x0
/* 801B7504 001B4244  B0 1E 02 C8 */	sth r0, 0x2c8(r30)
/* 801B7508 001B4248  48 00 00 0C */	b func_801B7514
lbl_801B750C:
/* 801B750C 001B424C  38 00 00 08 */	li r0, 0x8
/* 801B7510 001B4250  B0 1E 02 C8 */	sth r0, 0x2c8(r30)

.global func_801B7514
func_801B7514:
/* 801B7514 001B4254  7F C3 F3 78 */	mr r3, r30
/* 801B7518 001B4258  4B FF DC 6D */	bl __OSUnlockAllMutex
/* 801B751C 001B425C  38 7E 02 E8 */	addi r3, r30, 0x2e8
/* 801B7520 001B4260  48 00 05 21 */	bl OSWakeupThread
/* 801B7524 001B4264  80 0D AC BC */	lwz r0, RunQueueHint@sda21(r13)
/* 801B7528 001B4268  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B752C 001B426C  41 82 00 0C */	beq lbl_801B7538
/* 801B7530 001B4270  38 60 00 00 */	li r3, 0x0
/* 801B7534 001B4274  4B FF F9 49 */	bl SelectThread
lbl_801B7538:
/* 801B7538 001B4278  7F E3 FB 78 */	mr r3, r31
/* 801B753C 001B427C  4B FF C5 31 */	bl OSRestoreInterrupts

.global func_801B7540
func_801B7540:
/* 801B7540 001B4280  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801B7544 001B4284  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801B7548 001B4288  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801B754C 001B428C  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801B7550 001B4290  38 21 00 20 */	addi r1, r1, 0x20
/* 801B7554 001B4294  7C 08 03 A6 */	mtlr r0
/* 801B7558 001B4298  4E 80 00 20 */	blr

.global OSResumeThread
OSResumeThread:
/* 801B755C 001B429C  7C 08 02 A6 */	mflr r0
/* 801B7560 001B42A0  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B7564 001B42A4  94 21 FF D8 */	stwu r1, -0x28(r1)
/* 801B7568 001B42A8  93 E1 00 24 */	stw r31, 0x24(r1)
/* 801B756C 001B42AC  93 C1 00 20 */	stw r30, 0x20(r1)
/* 801B7570 001B42B0  93 A1 00 1C */	stw r29, 0x1c(r1)
/* 801B7574 001B42B4  7C 7D 1B 78 */	mr r29, r3
/* 801B7578 001B42B8  4B FF C4 CD */	bl OSDisableInterrupts
/* 801B757C 001B42BC  80 9D 02 CC */	lwz r4, 0x2cc(r29)
/* 801B7580 001B42C0  3B E3 00 00 */	addi r31, r3, 0x0
/* 801B7584 001B42C4  38 04 FF FF */	addi r0, r4, -0x1
/* 801B7588 001B42C8  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 801B758C 001B42CC  7C 9E 23 78 */	mr r30, r4
/* 801B7590 001B42D0  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 801B7594 001B42D4  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B7598 001B42D8  40 80 00 10 */	bge lbl_801B75A8
/* 801B759C 001B42DC  38 00 00 00 */	li r0, 0x0
/* 801B75A0 001B42E0  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 801B75A4 001B42E4  48 00 02 18 */	b func_801B77BC
lbl_801B75A8:
/* 801B75A8 001B42E8  40 82 02 14 */	bne func_801B77BC
/* 801B75AC 001B42EC  A0 1D 02 C8 */	lhz r0, 0x2c8(r29)
/* 801B75B0 001B42F0  2C 00 00 04 */	cmpwi r0, 0x4
/* 801B75B4 001B42F4  41 82 00 B8 */	beq lbl_801B766C
/* 801B75B8 001B42F8  40 80 01 F0 */	bge func_801B77A8
/* 801B75BC 001B42FC  2C 00 00 01 */	cmpwi r0, 0x1
/* 801B75C0 001B4300  41 82 00 08 */	beq lbl_801B75C8
/* 801B75C4 001B4304  48 00 01 E4 */	b func_801B77A8
lbl_801B75C8:
/* 801B75C8 001B4308  80 1D 02 D4 */	lwz r0, 0x2d4(r29)
/* 801B75CC 001B430C  80 7D 02 F4 */	lwz r3, 0x2f4(r29)
/* 801B75D0 001B4310  48 00 00 24 */	b func_801B75F4
lbl_801B75D4:
/* 801B75D4 001B4314  80 83 00 00 */	lwz r4, 0x0(r3)
/* 801B75D8 001B4318  28 04 00 00 */	cmplwi r4, 0x0
/* 801B75DC 001B431C  41 82 00 14 */	beq lbl_801B75F0
/* 801B75E0 001B4320  80 84 02 D0 */	lwz r4, 0x2d0(r4)
/* 801B75E4 001B4324  7C 04 00 00 */	cmpw r4, r0
/* 801B75E8 001B4328  40 80 00 08 */	bge lbl_801B75F0
/* 801B75EC 001B432C  7C 80 23 78 */	mr r0, r4
lbl_801B75F0:
/* 801B75F0 001B4330  80 63 00 10 */	lwz r3, 0x10(r3)

.global func_801B75F4
func_801B75F4:
/* 801B75F4 001B4334  28 03 00 00 */	cmplwi r3, 0x0
/* 801B75F8 001B4338  40 82 FF DC */	bne lbl_801B75D4
/* 801B75FC 001B433C  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 801B7600 001B4340  3C 60 80 31 */	lis r3, lbl_80317B58@ha
/* 801B7604 001B4344  38 03 7B 58 */	addi r0, r3, lbl_80317B58@l
/* 801B7608 001B4348  80 7D 02 D0 */	lwz r3, 0x2d0(r29)
/* 801B760C 001B434C  54 63 18 38 */	slwi r3, r3, 3
/* 801B7610 001B4350  7C 00 1A 14 */	add r0, r0, r3
/* 801B7614 001B4354  90 1D 02 DC */	stw r0, 0x2dc(r29)
/* 801B7618 001B4358  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 801B761C 001B435C  80 64 00 04 */	lwz r3, 0x4(r4)
/* 801B7620 001B4360  28 03 00 00 */	cmplwi r3, 0x0
/* 801B7624 001B4364  40 82 00 0C */	bne lbl_801B7630
/* 801B7628 001B4368  93 A4 00 00 */	stw r29, 0x0(r4)
/* 801B762C 001B436C  48 00 00 08 */	b func_801B7634
lbl_801B7630:
/* 801B7630 001B4370  93 A3 02 E0 */	stw r29, 0x2e0(r3)

.global func_801B7634
func_801B7634:
/* 801B7634 001B4374  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 801B7638 001B4378  38 00 00 00 */	li r0, 0x0
/* 801B763C 001B437C  38 60 00 01 */	li r3, 0x1
/* 801B7640 001B4380  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 801B7644 001B4384  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 801B7648 001B4388  93 A4 00 04 */	stw r29, 0x4(r4)
/* 801B764C 001B438C  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 801B7650 001B4390  80 8D AC B8 */	lwz r4, RunQueueBits@sda21(r13)
/* 801B7654 001B4394  20 00 00 1F */	subfic r0, r0, 0x1f
/* 801B7658 001B4398  7C 60 00 30 */	slw r0, r3, r0
/* 801B765C 001B439C  7C 80 03 78 */	or r0, r4, r0
/* 801B7660 001B43A0  90 0D AC B8 */	stw r0, RunQueueBits@sda21(r13)
/* 801B7664 001B43A4  90 6D AC BC */	stw r3, RunQueueHint@sda21(r13)
/* 801B7668 001B43A8  48 00 01 40 */	b func_801B77A8
lbl_801B766C:
/* 801B766C 001B43AC  80 9D 02 E0 */	lwz r4, 0x2e0(r29)
/* 801B7670 001B43B0  80 BD 02 E4 */	lwz r5, 0x2e4(r29)
/* 801B7674 001B43B4  28 04 00 00 */	cmplwi r4, 0x0
/* 801B7678 001B43B8  40 82 00 10 */	bne lbl_801B7688
/* 801B767C 001B43BC  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801B7680 001B43C0  90 A3 00 04 */	stw r5, 0x4(r3)
/* 801B7684 001B43C4  48 00 00 08 */	b func_801B768C
lbl_801B7688:
/* 801B7688 001B43C8  90 A4 02 E4 */	stw r5, 0x2e4(r4)

.global func_801B768C
func_801B768C:
/* 801B768C 001B43CC  28 05 00 00 */	cmplwi r5, 0x0
/* 801B7690 001B43D0  40 82 00 10 */	bne lbl_801B76A0
/* 801B7694 001B43D4  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801B7698 001B43D8  90 83 00 00 */	stw r4, 0x0(r3)
/* 801B769C 001B43DC  48 00 00 08 */	b func_801B76A4
lbl_801B76A0:
/* 801B76A0 001B43E0  90 85 02 E0 */	stw r4, 0x2e0(r5)

.global func_801B76A4
func_801B76A4:
/* 801B76A4 001B43E4  80 1D 02 D4 */	lwz r0, 0x2d4(r29)
/* 801B76A8 001B43E8  80 7D 02 F4 */	lwz r3, 0x2f4(r29)
/* 801B76AC 001B43EC  48 00 00 24 */	b func_801B76D0
lbl_801B76B0:
/* 801B76B0 001B43F0  80 83 00 00 */	lwz r4, 0x0(r3)
/* 801B76B4 001B43F4  28 04 00 00 */	cmplwi r4, 0x0
/* 801B76B8 001B43F8  41 82 00 14 */	beq lbl_801B76CC
/* 801B76BC 001B43FC  80 84 02 D0 */	lwz r4, 0x2d0(r4)
/* 801B76C0 001B4400  7C 04 00 00 */	cmpw r4, r0
/* 801B76C4 001B4404  40 80 00 08 */	bge lbl_801B76CC
/* 801B76C8 001B4408  7C 80 23 78 */	mr r0, r4
lbl_801B76CC:
/* 801B76CC 001B440C  80 63 00 10 */	lwz r3, 0x10(r3)

.global func_801B76D0
func_801B76D0:
/* 801B76D0 001B4410  28 03 00 00 */	cmplwi r3, 0x0
/* 801B76D4 001B4414  40 82 FF DC */	bne lbl_801B76B0
/* 801B76D8 001B4418  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 801B76DC 001B441C  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 801B76E0 001B4420  80 A4 00 00 */	lwz r5, 0x0(r4)
/* 801B76E4 001B4424  48 00 00 08 */	b func_801B76EC
lbl_801B76E8:
/* 801B76E8 001B4428  80 A5 02 E0 */	lwz r5, 0x2e0(r5)

.global func_801B76EC
func_801B76EC:
/* 801B76EC 001B442C  28 05 00 00 */	cmplwi r5, 0x0
/* 801B76F0 001B4430  41 82 00 14 */	beq lbl_801B7704
/* 801B76F4 001B4434  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 801B76F8 001B4438  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 801B76FC 001B443C  7C 03 00 00 */	cmpw r3, r0
/* 801B7700 001B4440  40 81 FF E8 */	ble lbl_801B76E8
lbl_801B7704:
/* 801B7704 001B4444  28 05 00 00 */	cmplwi r5, 0x0
/* 801B7708 001B4448  40 82 00 34 */	bne lbl_801B773C
/* 801B770C 001B444C  80 64 00 04 */	lwz r3, 0x4(r4)
/* 801B7710 001B4450  28 03 00 00 */	cmplwi r3, 0x0
/* 801B7714 001B4454  40 82 00 0C */	bne lbl_801B7720
/* 801B7718 001B4458  93 A4 00 00 */	stw r29, 0x0(r4)
/* 801B771C 001B445C  48 00 00 08 */	b func_801B7724
lbl_801B7720:
/* 801B7720 001B4460  93 A3 02 E0 */	stw r29, 0x2e0(r3)

.global func_801B7724
func_801B7724:
/* 801B7724 001B4464  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 801B7728 001B4468  38 00 00 00 */	li r0, 0x0
/* 801B772C 001B446C  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 801B7730 001B4470  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801B7734 001B4474  93 A3 00 04 */	stw r29, 0x4(r3)
/* 801B7738 001B4478  48 00 00 2C */	b func_801B7764
lbl_801B773C:
/* 801B773C 001B447C  90 BD 02 E0 */	stw r5, 0x2e0(r29)
/* 801B7740 001B4480  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 801B7744 001B4484  93 A5 02 E4 */	stw r29, 0x2e4(r5)
/* 801B7748 001B4488  28 03 00 00 */	cmplwi r3, 0x0
/* 801B774C 001B448C  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 801B7750 001B4490  40 82 00 10 */	bne lbl_801B7760
/* 801B7754 001B4494  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801B7758 001B4498  93 A3 00 00 */	stw r29, 0x0(r3)
/* 801B775C 001B449C  48 00 00 08 */	b func_801B7764
lbl_801B7760:
/* 801B7760 001B44A0  93 A3 02 E0 */	stw r29, 0x2e0(r3)

.global func_801B7764
func_801B7764:
/* 801B7764 001B44A4  80 7D 02 F0 */	lwz r3, 0x2f0(r29)
/* 801B7768 001B44A8  28 03 00 00 */	cmplwi r3, 0x0
/* 801B776C 001B44AC  41 82 00 3C */	beq func_801B77A8
/* 801B7770 001B44B0  83 A3 00 08 */	lwz r29, 0x8(r3)
lbl_801B7774:
/* 801B7774 001B44B4  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 801B7778 001B44B8  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B777C 001B44BC  41 81 00 2C */	bgt func_801B77A8
/* 801B7780 001B44C0  7F A3 EB 78 */	mr r3, r29
/* 801B7784 001B44C4  4B FF F4 FD */	bl __OSGetEffectivePriority
/* 801B7788 001B44C8  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 801B778C 001B44CC  38 83 00 00 */	addi r4, r3, 0x0
/* 801B7790 001B44D0  7C 00 20 00 */	cmpw r0, r4
/* 801B7794 001B44D4  41 82 00 14 */	beq func_801B77A8
/* 801B7798 001B44D8  7F A3 EB 78 */	mr r3, r29
/* 801B779C 001B44DC  4B FF F5 21 */	bl SetEffectivePriority
/* 801B77A0 001B44E0  7C 7D 1B 79 */	mr. r29, r3
/* 801B77A4 001B44E4  40 82 FF D0 */	bne lbl_801B7774

.global func_801B77A8
func_801B77A8:
/* 801B77A8 001B44E8  80 0D AC BC */	lwz r0, RunQueueHint@sda21(r13)
/* 801B77AC 001B44EC  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B77B0 001B44F0  41 82 00 0C */	beq func_801B77BC
/* 801B77B4 001B44F4  38 60 00 00 */	li r3, 0x0
/* 801B77B8 001B44F8  4B FF F6 C5 */	bl SelectThread

.global func_801B77BC
func_801B77BC:
/* 801B77BC 001B44FC  7F E3 FB 78 */	mr r3, r31
/* 801B77C0 001B4500  4B FF C2 AD */	bl OSRestoreInterrupts
/* 801B77C4 001B4504  7F C3 F3 78 */	mr r3, r30
/* 801B77C8 001B4508  80 01 00 2C */	lwz r0, 0x2c(r1)
/* 801B77CC 001B450C  83 E1 00 24 */	lwz r31, 0x24(r1)
/* 801B77D0 001B4510  83 C1 00 20 */	lwz r30, 0x20(r1)
/* 801B77D4 001B4514  83 A1 00 1C */	lwz r29, 0x1c(r1)
/* 801B77D8 001B4518  38 21 00 28 */	addi r1, r1, 0x28
/* 801B77DC 001B451C  7C 08 03 A6 */	mtlr r0
/* 801B77E0 001B4520  4E 80 00 20 */	blr

.global OSSuspendThread
OSSuspendThread:
/* 801B77E4 001B4524  7C 08 02 A6 */	mflr r0
/* 801B77E8 001B4528  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B77EC 001B452C  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801B77F0 001B4530  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801B77F4 001B4534  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801B77F8 001B4538  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801B77FC 001B453C  7C 7D 1B 78 */	mr r29, r3
/* 801B7800 001B4540  4B FF C2 45 */	bl OSDisableInterrupts
/* 801B7804 001B4544  80 9D 02 CC */	lwz r4, 0x2cc(r29)
/* 801B7808 001B4548  3B E3 00 00 */	addi r31, r3, 0x0
/* 801B780C 001B454C  38 04 00 01 */	addi r0, r4, 0x1
/* 801B7810 001B4550  7C 9E 23 79 */	mr. r30, r4
/* 801B7814 001B4554  90 1D 02 CC */	stw r0, 0x2cc(r29)
/* 801B7818 001B4558  40 82 01 14 */	bne lbl_801B792C
/* 801B781C 001B455C  A0 1D 02 C8 */	lhz r0, 0x2c8(r29)
/* 801B7820 001B4560  2C 00 00 03 */	cmpwi r0, 0x3
/* 801B7824 001B4564  41 82 00 F4 */	beq func_801B7918
/* 801B7828 001B4568  40 80 00 14 */	bge lbl_801B783C
/* 801B782C 001B456C  2C 00 00 01 */	cmpwi r0, 0x1
/* 801B7830 001B4570  41 82 00 28 */	beq lbl_801B7858
/* 801B7834 001B4574  40 80 00 14 */	bge lbl_801B7848
/* 801B7838 001B4578  48 00 00 E0 */	b func_801B7918
lbl_801B783C:
/* 801B783C 001B457C  2C 00 00 05 */	cmpwi r0, 0x5
/* 801B7840 001B4580  40 80 00 D8 */	bge func_801B7918
/* 801B7844 001B4584  48 00 00 20 */	b func_801B7864
lbl_801B7848:
/* 801B7848 001B4588  38 00 00 01 */	li r0, 0x1
/* 801B784C 001B458C  90 0D AC BC */	stw r0, RunQueueHint@sda21(r13)
/* 801B7850 001B4590  B0 1D 02 C8 */	sth r0, 0x2c8(r29)
/* 801B7854 001B4594  48 00 00 C4 */	b func_801B7918
lbl_801B7858:
/* 801B7858 001B4598  7F A3 EB 78 */	mr r3, r29
/* 801B785C 001B459C  4B FF F3 BD */	bl UnsetRun
/* 801B7860 001B45A0  48 00 00 B8 */	b func_801B7918

.global func_801B7864
func_801B7864:
/* 801B7864 001B45A4  80 9D 02 E0 */	lwz r4, 0x2e0(r29)
/* 801B7868 001B45A8  80 BD 02 E4 */	lwz r5, 0x2e4(r29)
/* 801B786C 001B45AC  28 04 00 00 */	cmplwi r4, 0x0
/* 801B7870 001B45B0  40 82 00 10 */	bne lbl_801B7880
/* 801B7874 001B45B4  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801B7878 001B45B8  90 A3 00 04 */	stw r5, 0x4(r3)
/* 801B787C 001B45BC  48 00 00 08 */	b func_801B7884
lbl_801B7880:
/* 801B7880 001B45C0  90 A4 02 E4 */	stw r5, 0x2e4(r4)

.global func_801B7884
func_801B7884:
/* 801B7884 001B45C4  28 05 00 00 */	cmplwi r5, 0x0
/* 801B7888 001B45C8  40 82 00 10 */	bne lbl_801B7898
/* 801B788C 001B45CC  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801B7890 001B45D0  90 83 00 00 */	stw r4, 0x0(r3)
/* 801B7894 001B45D4  48 00 00 08 */	b func_801B789C
lbl_801B7898:
/* 801B7898 001B45D8  90 85 02 E0 */	stw r4, 0x2e0(r5)

.global func_801B789C
func_801B789C:
/* 801B789C 001B45DC  38 00 00 20 */	li r0, 0x20
/* 801B78A0 001B45E0  90 1D 02 D0 */	stw r0, 0x2d0(r29)
/* 801B78A4 001B45E4  80 9D 02 DC */	lwz r4, 0x2dc(r29)
/* 801B78A8 001B45E8  80 64 00 04 */	lwz r3, 0x4(r4)
/* 801B78AC 001B45EC  28 03 00 00 */	cmplwi r3, 0x0
/* 801B78B0 001B45F0  40 82 00 0C */	bne lbl_801B78BC
/* 801B78B4 001B45F4  93 A4 00 00 */	stw r29, 0x0(r4)
/* 801B78B8 001B45F8  48 00 00 08 */	b func_801B78C0
lbl_801B78BC:
/* 801B78BC 001B45FC  93 A3 02 E0 */	stw r29, 0x2e0(r3)

.global func_801B78C0
func_801B78C0:
/* 801B78C0 001B4600  90 7D 02 E4 */	stw r3, 0x2e4(r29)
/* 801B78C4 001B4604  38 00 00 00 */	li r0, 0x0
/* 801B78C8 001B4608  90 1D 02 E0 */	stw r0, 0x2e0(r29)
/* 801B78CC 001B460C  80 7D 02 DC */	lwz r3, 0x2dc(r29)
/* 801B78D0 001B4610  93 A3 00 04 */	stw r29, 0x4(r3)
/* 801B78D4 001B4614  80 7D 02 F0 */	lwz r3, 0x2f0(r29)
/* 801B78D8 001B4618  28 03 00 00 */	cmplwi r3, 0x0
/* 801B78DC 001B461C  41 82 00 3C */	beq func_801B7918
/* 801B78E0 001B4620  83 A3 00 08 */	lwz r29, 0x8(r3)
lbl_801B78E4:
/* 801B78E4 001B4624  80 1D 02 CC */	lwz r0, 0x2cc(r29)
/* 801B78E8 001B4628  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B78EC 001B462C  41 81 00 2C */	bgt func_801B7918
/* 801B78F0 001B4630  7F A3 EB 78 */	mr r3, r29
/* 801B78F4 001B4634  4B FF F3 8D */	bl __OSGetEffectivePriority
/* 801B78F8 001B4638  80 1D 02 D0 */	lwz r0, 0x2d0(r29)
/* 801B78FC 001B463C  38 83 00 00 */	addi r4, r3, 0x0
/* 801B7900 001B4640  7C 00 20 00 */	cmpw r0, r4
/* 801B7904 001B4644  41 82 00 14 */	beq func_801B7918
/* 801B7908 001B4648  7F A3 EB 78 */	mr r3, r29
/* 801B790C 001B464C  4B FF F3 B1 */	bl SetEffectivePriority
/* 801B7910 001B4650  7C 7D 1B 79 */	mr. r29, r3
/* 801B7914 001B4654  40 82 FF D0 */	bne lbl_801B78E4

.global func_801B7918
func_801B7918:
/* 801B7918 001B4658  80 0D AC BC */	lwz r0, RunQueueHint@sda21(r13)
/* 801B791C 001B465C  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B7920 001B4660  41 82 00 0C */	beq lbl_801B792C
/* 801B7924 001B4664  38 60 00 00 */	li r3, 0x0
/* 801B7928 001B4668  4B FF F5 55 */	bl SelectThread
lbl_801B792C:
/* 801B792C 001B466C  7F E3 FB 78 */	mr r3, r31
/* 801B7930 001B4670  4B FF C1 3D */	bl OSRestoreInterrupts
/* 801B7934 001B4674  7F C3 F3 78 */	mr r3, r30
/* 801B7938 001B4678  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801B793C 001B467C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801B7940 001B4680  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801B7944 001B4684  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801B7948 001B4688  38 21 00 20 */	addi r1, r1, 0x20
/* 801B794C 001B468C  7C 08 03 A6 */	mtlr r0
/* 801B7950 001B4690  4E 80 00 20 */	blr

.global OSSleepThread
OSSleepThread:
/* 801B7954 001B4694  7C 08 02 A6 */	mflr r0
/* 801B7958 001B4698  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B795C 001B469C  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B7960 001B46A0  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B7964 001B46A4  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801B7968 001B46A8  7C 7E 1B 78 */	mr r30, r3
/* 801B796C 001B46AC  4B FF C0 D9 */	bl OSDisableInterrupts
/* 801B7970 001B46B0  3C 80 80 00 */	lis r4, 0x800000E4@ha
/* 801B7974 001B46B4  80 84 00 E4 */	lwz r4, 0x800000E4@l(r4)
/* 801B7978 001B46B8  38 00 00 04 */	li r0, 0x4
/* 801B797C 001B46BC  7C 7F 1B 78 */	mr r31, r3
/* 801B7980 001B46C0  B0 04 02 C8 */	sth r0, 0x2c8(r4)
/* 801B7984 001B46C4  93 C4 02 DC */	stw r30, 0x2dc(r4)
/* 801B7988 001B46C8  80 BE 00 00 */	lwz r5, 0x0(r30)
/* 801B798C 001B46CC  48 00 00 08 */	b func_801B7994
lbl_801B7990:
/* 801B7990 001B46D0  80 A5 02 E0 */	lwz r5, 0x2e0(r5)

.global func_801B7994
func_801B7994:
/* 801B7994 001B46D4  28 05 00 00 */	cmplwi r5, 0x0
/* 801B7998 001B46D8  41 82 00 14 */	beq lbl_801B79AC
/* 801B799C 001B46DC  80 65 02 D0 */	lwz r3, 0x2d0(r5)
/* 801B79A0 001B46E0  80 04 02 D0 */	lwz r0, 0x2d0(r4)
/* 801B79A4 001B46E4  7C 03 00 00 */	cmpw r3, r0
/* 801B79A8 001B46E8  40 81 FF E8 */	ble lbl_801B7990
lbl_801B79AC:
/* 801B79AC 001B46EC  28 05 00 00 */	cmplwi r5, 0x0
/* 801B79B0 001B46F0  40 82 00 30 */	bne lbl_801B79E0
/* 801B79B4 001B46F4  80 7E 00 04 */	lwz r3, 0x4(r30)
/* 801B79B8 001B46F8  28 03 00 00 */	cmplwi r3, 0x0
/* 801B79BC 001B46FC  40 82 00 0C */	bne lbl_801B79C8
/* 801B79C0 001B4700  90 9E 00 00 */	stw r4, 0x0(r30)
/* 801B79C4 001B4704  48 00 00 08 */	b func_801B79CC
lbl_801B79C8:
/* 801B79C8 001B4708  90 83 02 E0 */	stw r4, 0x2e0(r3)

.global func_801B79CC
func_801B79CC:
/* 801B79CC 001B470C  90 64 02 E4 */	stw r3, 0x2e4(r4)
/* 801B79D0 001B4710  38 00 00 00 */	li r0, 0x0
/* 801B79D4 001B4714  90 04 02 E0 */	stw r0, 0x2e0(r4)
/* 801B79D8 001B4718  90 9E 00 04 */	stw r4, 0x4(r30)
/* 801B79DC 001B471C  48 00 00 28 */	b func_801B7A04
lbl_801B79E0:
/* 801B79E0 001B4720  90 A4 02 E0 */	stw r5, 0x2e0(r4)
/* 801B79E4 001B4724  80 65 02 E4 */	lwz r3, 0x2e4(r5)
/* 801B79E8 001B4728  90 85 02 E4 */	stw r4, 0x2e4(r5)
/* 801B79EC 001B472C  28 03 00 00 */	cmplwi r3, 0x0
/* 801B79F0 001B4730  90 64 02 E4 */	stw r3, 0x2e4(r4)
/* 801B79F4 001B4734  40 82 00 0C */	bne lbl_801B7A00
/* 801B79F8 001B4738  90 9E 00 00 */	stw r4, 0x0(r30)
/* 801B79FC 001B473C  48 00 00 08 */	b func_801B7A04
lbl_801B7A00:
/* 801B7A00 001B4740  90 83 02 E0 */	stw r4, 0x2e0(r3)

.global func_801B7A04
func_801B7A04:
/* 801B7A04 001B4744  38 00 00 01 */	li r0, 0x1
/* 801B7A08 001B4748  90 0D AC BC */	stw r0, RunQueueHint@sda21(r13)
/* 801B7A0C 001B474C  80 0D AC BC */	lwz r0, RunQueueHint@sda21(r13)
/* 801B7A10 001B4750  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B7A14 001B4754  41 82 00 0C */	beq lbl_801B7A20
/* 801B7A18 001B4758  38 60 00 00 */	li r3, 0x0
/* 801B7A1C 001B475C  4B FF F4 61 */	bl SelectThread
lbl_801B7A20:
/* 801B7A20 001B4760  7F E3 FB 78 */	mr r3, r31
/* 801B7A24 001B4764  4B FF C0 49 */	bl OSRestoreInterrupts
/* 801B7A28 001B4768  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B7A2C 001B476C  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B7A30 001B4770  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801B7A34 001B4774  38 21 00 18 */	addi r1, r1, 0x18
/* 801B7A38 001B4778  7C 08 03 A6 */	mtlr r0
/* 801B7A3C 001B477C  4E 80 00 20 */	blr

.global OSWakeupThread
OSWakeupThread:
/* 801B7A40 001B4780  7C 08 02 A6 */	mflr r0
/* 801B7A44 001B4784  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B7A48 001B4788  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B7A4C 001B478C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B7A50 001B4790  93 C1 00 10 */	stw r30, 0x10(r1)
/* 801B7A54 001B4794  7C 7E 1B 78 */	mr r30, r3
/* 801B7A58 001B4798  4B FF BF ED */	bl OSDisableInterrupts
/* 801B7A5C 001B479C  3C 80 80 31 */	lis r4, lbl_80317B58@ha
/* 801B7A60 001B47A0  3B E3 00 00 */	addi r31, r3, 0x0
/* 801B7A64 001B47A4  38 A4 7B 58 */	addi r5, r4, lbl_80317B58@l
/* 801B7A68 001B47A8  48 00 00 9C */	b func_801B7B04
lbl_801B7A6C:
/* 801B7A6C 001B47AC  80 66 02 E0 */	lwz r3, 0x2e0(r6)
/* 801B7A70 001B47B0  28 03 00 00 */	cmplwi r3, 0x0
/* 801B7A74 001B47B4  40 82 00 10 */	bne lbl_801B7A84
/* 801B7A78 001B47B8  38 00 00 00 */	li r0, 0x0
/* 801B7A7C 001B47BC  90 1E 00 04 */	stw r0, 0x4(r30)
/* 801B7A80 001B47C0  48 00 00 0C */	b func_801B7A8C
lbl_801B7A84:
/* 801B7A84 001B47C4  38 00 00 00 */	li r0, 0x0
/* 801B7A88 001B47C8  90 03 02 E4 */	stw r0, 0x2e4(r3)

.global func_801B7A8C
func_801B7A8C:
/* 801B7A8C 001B47CC  90 7E 00 00 */	stw r3, 0x0(r30)
/* 801B7A90 001B47D0  38 00 00 01 */	li r0, 0x1
/* 801B7A94 001B47D4  B0 06 02 C8 */	sth r0, 0x2c8(r6)
/* 801B7A98 001B47D8  80 06 02 CC */	lwz r0, 0x2cc(r6)
/* 801B7A9C 001B47DC  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B7AA0 001B47E0  41 81 00 64 */	bgt func_801B7B04
/* 801B7AA4 001B47E4  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 801B7AA8 001B47E8  54 00 18 38 */	slwi r0, r0, 3
/* 801B7AAC 001B47EC  7C 05 02 14 */	add r0, r5, r0
/* 801B7AB0 001B47F0  90 06 02 DC */	stw r0, 0x2dc(r6)
/* 801B7AB4 001B47F4  80 86 02 DC */	lwz r4, 0x2dc(r6)
/* 801B7AB8 001B47F8  80 64 00 04 */	lwz r3, 0x4(r4)
/* 801B7ABC 001B47FC  28 03 00 00 */	cmplwi r3, 0x0
/* 801B7AC0 001B4800  40 82 00 0C */	bne lbl_801B7ACC
/* 801B7AC4 001B4804  90 C4 00 00 */	stw r6, 0x0(r4)
/* 801B7AC8 001B4808  48 00 00 08 */	b func_801B7AD0
lbl_801B7ACC:
/* 801B7ACC 001B480C  90 C3 02 E0 */	stw r6, 0x2e0(r3)

.global func_801B7AD0
func_801B7AD0:
/* 801B7AD0 001B4810  90 66 02 E4 */	stw r3, 0x2e4(r6)
/* 801B7AD4 001B4814  38 00 00 00 */	li r0, 0x0
/* 801B7AD8 001B4818  38 60 00 01 */	li r3, 0x1
/* 801B7ADC 001B481C  90 06 02 E0 */	stw r0, 0x2e0(r6)
/* 801B7AE0 001B4820  80 86 02 DC */	lwz r4, 0x2dc(r6)
/* 801B7AE4 001B4824  90 C4 00 04 */	stw r6, 0x4(r4)
/* 801B7AE8 001B4828  80 06 02 D0 */	lwz r0, 0x2d0(r6)
/* 801B7AEC 001B482C  80 8D AC B8 */	lwz r4, RunQueueBits@sda21(r13)
/* 801B7AF0 001B4830  20 00 00 1F */	subfic r0, r0, 0x1f
/* 801B7AF4 001B4834  7C 60 00 30 */	slw r0, r3, r0
/* 801B7AF8 001B4838  7C 80 03 78 */	or r0, r4, r0
/* 801B7AFC 001B483C  90 0D AC B8 */	stw r0, RunQueueBits@sda21(r13)
/* 801B7B00 001B4840  90 6D AC BC */	stw r3, RunQueueHint@sda21(r13)
func_801B7B04:
/* 801B7B04 001B4844  80 DE 00 00 */	lwz r6, 0x0(r30)
/* 801B7B08 001B4848  28 06 00 00 */	cmplwi r6, 0x0
/* 801B7B0C 001B484C  40 82 FF 60 */	bne lbl_801B7A6C
/* 801B7B10 001B4850  80 0D AC BC */	lwz r0, RunQueueHint@sda21(r13)
/* 801B7B14 001B4854  2C 00 00 00 */	cmpwi r0, 0x0
/* 801B7B18 001B4858  41 82 00 0C */	beq lbl_801B7B24
/* 801B7B1C 001B485C  38 60 00 00 */	li r3, 0x0
/* 801B7B20 001B4860  4B FF F3 5D */	bl SelectThread
lbl_801B7B24:
/* 801B7B24 001B4864  7F E3 FB 78 */	mr r3, r31
/* 801B7B28 001B4868  4B FF BF 45 */	bl OSRestoreInterrupts
/* 801B7B2C 001B486C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B7B30 001B4870  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B7B34 001B4874  83 C1 00 10 */	lwz r30, 0x10(r1)
/* 801B7B38 001B4878  38 21 00 18 */	addi r1, r1, 0x18
/* 801B7B3C 001B487C  7C 08 03 A6 */	mtlr r0
/* 801B7B40 001B4880  4E 80 00 20 */	blr

.global func_801B7B44
func_801B7B44:
/* 801B7B44 001B4884  7C 08 02 A6 */	mflr r0
/* 801B7B48 001B4888  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B7B4C 001B488C  54 60 82 1E */	rlwinm r0, r3, 16, 8, 15
/* 801B7B50 001B4890  50 60 C0 0E */	rlwimi r0, r3, 24, 0, 7
/* 801B7B54 001B4894  94 21 FF E8 */	stwu r1, -0x18(r1)
/* 801B7B58 001B4898  50 60 44 2E */	rlwimi r0, r3, 8, 16, 23
/* 801B7B5C 001B489C  93 E1 00 14 */	stw r31, 0x14(r1)
/* 801B7B60 001B48A0  7C 1F 03 78 */	mr r31, r0
/* 801B7B64 001B48A4  50 7F 06 3E */	rlwimi r31, r3, 0, 24, 31
/* 801B7B68 001B48A8  4B FF B3 7D */	bl OSGetStackPointer
/* 801B7B6C 001B48AC  3C 80 80 00 */	lis r4, 0x800000E4@ha
/* 801B7B70 001B48B0  80 A4 00 E4 */	lwz r5, 0x800000E4@l(r4)
/* 801B7B74 001B48B4  38 83 00 03 */	addi r4, r3, 0x3
/* 801B7B78 001B48B8  80 A5 03 08 */	lwz r5, 0x308(r5)
/* 801B7B7C 001B48BC  38 A5 00 04 */	addi r5, r5, 0x4
/* 801B7B80 001B48C0  7C 05 18 40 */	cmplw r5, r3
/* 801B7B84 001B48C4  7C 85 20 50 */	subf r4, r5, r4
/* 801B7B88 001B48C8  54 84 F0 BE */	srwi r4, r4, 2
/* 801B7B8C 001B48CC  40 80 00 50 */	bge lbl_801B7BDC
/* 801B7B90 001B48D0  54 80 E8 FF */	srwi. r0, r4, 3
/* 801B7B94 001B48D4  7C 09 03 A6 */	mtctr r0
/* 801B7B98 001B48D8  41 82 00 34 */	beq lbl_801B7BCC
lbl_801B7B9C:
/* 801B7B9C 001B48DC  93 E5 00 00 */	stw r31, 0x0(r5)
/* 801B7BA0 001B48E0  93 E5 00 04 */	stw r31, 0x4(r5)
/* 801B7BA4 001B48E4  93 E5 00 08 */	stw r31, 0x8(r5)
/* 801B7BA8 001B48E8  93 E5 00 0C */	stw r31, 0xc(r5)
/* 801B7BAC 001B48EC  93 E5 00 10 */	stw r31, 0x10(r5)
/* 801B7BB0 001B48F0  93 E5 00 14 */	stw r31, 0x14(r5)
/* 801B7BB4 001B48F4  93 E5 00 18 */	stw r31, 0x18(r5)
/* 801B7BB8 001B48F8  93 E5 00 1C */	stw r31, 0x1c(r5)
/* 801B7BBC 001B48FC  38 A5 00 20 */	addi r5, r5, 0x20
/* 801B7BC0 001B4900  42 00 FF DC */	bdnz lbl_801B7B9C
/* 801B7BC4 001B4904  70 84 00 07 */	andi. r4, r4, 0x7
/* 801B7BC8 001B4908  41 82 00 14 */	beq lbl_801B7BDC
lbl_801B7BCC:
/* 801B7BCC 001B490C  7C 89 03 A6 */	mtctr r4
lbl_801B7BD0:
/* 801B7BD0 001B4910  93 E5 00 00 */	stw r31, 0x0(r5)
/* 801B7BD4 001B4914  38 A5 00 04 */	addi r5, r5, 0x4
/* 801B7BD8 001B4918  42 00 FF F8 */	bdnz lbl_801B7BD0
lbl_801B7BDC:
/* 801B7BDC 001B491C  80 01 00 1C */	lwz r0, 0x1c(r1)
/* 801B7BE0 001B4920  83 E1 00 14 */	lwz r31, 0x14(r1)
/* 801B7BE4 001B4924  38 21 00 18 */	addi r1, r1, 0x18
/* 801B7BE8 001B4928  7C 08 03 A6 */	mtlr r0
/* 801B7BEC 001B492C  4E 80 00 20 */	blr

.global OSGetTime
OSGetTime:
/* 801B7BF0 001B4930  7C 6D 42 E6 */	mftb r3, 269
/* 801B7BF4 001B4934  7C 8C 42 E6 */	mftb r4, 268
/* 801B7BF8 001B4938  7C AD 42 E6 */	mftb r5, 269
/* 801B7BFC 001B493C  7C 03 28 00 */	cmpw r3, r5
/* 801B7C00 001B4940  40 82 FF F0 */	bne OSGetTime
/* 801B7C04 001B4944  4E 80 00 20 */	blr

.global OSGetTick
OSGetTick:
/* 801B7C08 001B4948  7C 6C 42 E6 */	mftb r3, 268
/* 801B7C0C 001B494C  4E 80 00 20 */	blr

.global __OSGetSystemTime
__OSGetSystemTime:
/* 801B7C10 001B4950  7C 08 02 A6 */	mflr r0
/* 801B7C14 001B4954  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B7C18 001B4958  94 21 FF E0 */	stwu r1, -0x20(r1)
/* 801B7C1C 001B495C  93 E1 00 1C */	stw r31, 0x1c(r1)
/* 801B7C20 001B4960  93 C1 00 18 */	stw r30, 0x18(r1)
/* 801B7C24 001B4964  93 A1 00 14 */	stw r29, 0x14(r1)
/* 801B7C28 001B4968  4B FF BE 1D */	bl OSDisableInterrupts
/* 801B7C2C 001B496C  7C 7F 1B 78 */	mr r31, r3
/* 801B7C30 001B4970  4B FF FF C1 */	bl OSGetTime
/* 801B7C34 001B4974  3C C0 80 00 */	lis r6, 0x800030DC@ha
/* 801B7C38 001B4978  80 A6 30 DC */	lwz r5, 0x800030DC@l(r6)
/* 801B7C3C 001B497C  80 06 30 D8 */	lwz r0, 0x30d8(r6)
/* 801B7C40 001B4980  7F A5 20 14 */	addc r29, r5, r4
/* 801B7C44 001B4984  7F C0 19 14 */	adde r30, r0, r3
/* 801B7C48 001B4988  7F E3 FB 78 */	mr r3, r31
/* 801B7C4C 001B498C  4B FF BE 21 */	bl OSRestoreInterrupts
/* 801B7C50 001B4990  7F A4 EB 78 */	mr r4, r29
/* 801B7C54 001B4994  7F C3 F3 78 */	mr r3, r30
/* 801B7C58 001B4998  80 01 00 24 */	lwz r0, 0x24(r1)
/* 801B7C5C 001B499C  83 E1 00 1C */	lwz r31, 0x1c(r1)
/* 801B7C60 001B49A0  83 C1 00 18 */	lwz r30, 0x18(r1)
/* 801B7C64 001B49A4  83 A1 00 14 */	lwz r29, 0x14(r1)
/* 801B7C68 001B49A8  38 21 00 20 */	addi r1, r1, 0x20
/* 801B7C6C 001B49AC  7C 08 03 A6 */	mtlr r0
/* 801B7C70 001B49B0  4E 80 00 20 */	blr

.global InitMetroTRK_BBA
InitMetroTRK_BBA:
/* 801B7C74 001B49B4  4E 80 00 20 */	blr

.global __init_user
__init_user:
/* 801B7C78 001B49B8  7C 08 02 A6 */	mflr r0
/* 801B7C7C 001B49BC  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B7C80 001B49C0  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B7C84 001B49C4  48 00 00 15 */	bl __init_cpp
/* 801B7C88 001B49C8  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B7C8C 001B49CC  38 21 00 08 */	addi r1, r1, 0x8
/* 801B7C90 001B49D0  7C 08 03 A6 */	mtlr r0
/* 801B7C94 001B49D4  4E 80 00 20 */	blr

.global __init_cpp
__init_cpp:
/* 801B7C98 001B49D8  7C 08 02 A6 */	mflr r0
/* 801B7C9C 001B49DC  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B7CA0 001B49E0  94 21 FF F0 */	stwu r1, -0x10(r1)
/* 801B7CA4 001B49E4  93 E1 00 0C */	stw r31, 0xc(r1)
/* 801B7CA8 001B49E8  3C 60 80 24 */	lis r3, __init_cpp_exceptions_reference@ha
/* 801B7CAC 001B49EC  38 03 DD 80 */	addi r0, r3, __init_cpp_exceptions_reference@l
/* 801B7CB0 001B49F0  7C 1F 03 78 */	mr r31, r0
/* 801B7CB4 001B49F4  48 00 00 04 */	b func_801B7CB8
func_801B7CB8:
/* 801B7CB8 001B49F8  48 00 00 04 */	b func_801B7CBC
func_801B7CBC:
/* 801B7CBC 001B49FC  48 00 00 10 */	b func_801B7CCC
lbl_801B7CC0:
/* 801B7CC0 001B4A00  7D 88 03 A6 */	mtlr r12
/* 801B7CC4 001B4A04  4E 80 00 21 */	blrl
/* 801B7CC8 001B4A08  3B FF 00 04 */	addi r31, r31, 0x4
func_801B7CCC:
/* 801B7CCC 001B4A0C  81 9F 00 00 */	lwz r12, 0x0(r31)
/* 801B7CD0 001B4A10  28 0C 00 00 */	cmplwi r12, 0x0
/* 801B7CD4 001B4A14  40 82 FF EC */	bne lbl_801B7CC0
/* 801B7CD8 001B4A18  80 01 00 14 */	lwz r0, 0x14(r1)
/* 801B7CDC 001B4A1C  83 E1 00 0C */	lwz r31, 0xc(r1)
/* 801B7CE0 001B4A20  38 21 00 10 */	addi r1, r1, 0x10
/* 801B7CE4 001B4A24  7C 08 03 A6 */	mtlr r0
/* 801B7CE8 001B4A28  4E 80 00 20 */	blr

.global _ExitProcess
_ExitProcess:
/* 801B7CEC 001B4A2C  7C 08 02 A6 */	mflr r0
/* 801B7CF0 001B4A30  90 01 00 04 */	stw r0, 0x4(r1)
/* 801B7CF4 001B4A34  94 21 FF F8 */	stwu r1, -0x8(r1)
/* 801B7CF8 001B4A38  4B FF 8D 61 */	bl PPCHalt
/* 801B7CFC 001B4A3C  80 01 00 0C */	lwz r0, 0xc(r1)
/* 801B7D00 001B4A40  38 21 00 08 */	addi r1, r1, 0x8
/* 801B7D04 001B4A44  7C 08 03 A6 */	mtlr r0
/* 801B7D08 001B4A48  4E 80 00 20 */	blr


.section .data, "wa"  # 0x80297080 - 0x802E8E00 ; 0x00051D80

/* Dolphin/OS/OS.o START */

.global lbl_802DFC88
lbl_802DFC88:

	# ROM: 0x2DCC88
	.asciz "<< Dolphin SDK - OS\trelease build: Jul 23 2003 11:27:16 (0x2301) >>"
	.asciz "\nDolphin OS\n"
	.balign 4
	.asciz "Kernel built : %s %s\n"
	.balign 4
	.asciz "Jul 23 2003"
	.asciz "11:27:16"
	.balign 4
	.asciz "Console Type : "
	.asciz "Retail %d\n"
	.balign 4
	.asciz "Mac Emulator\n"
	.balign 4
	.asciz "PC Emulator\n"
	.balign 4
	.asciz "EPPC Arthur\n"
	.balign 4
	.asciz "EPPC Minnow\n"
	.balign 4
	.asciz "Development HW%d (%08x)\n"
	.balign 4
	.asciz "Memory %d MB\n"
	.balign 4
	.asciz "Arena : 0x%x - 0x%x\n"
	.balign 4
	.4byte 0x00000100
	.4byte 0x00000200
	.4byte 0x00000300
	.4byte 0x00000400
	.4byte 0x00000500
	.4byte 0x00000600
	.4byte 0x00000700
	.4byte 0x00000800
	.4byte 0x00000900
	.4byte 0x00000C00
	.4byte 0x00000D00
	.4byte 0x00000F00
	.4byte 0x00001300
	.4byte 0x00001400
	.4byte 0x00001700
	.asciz "Installing OSDBIntegrator\n"
	.balign 4
	.asciz ">>> OSINIT: exception %d commandeered by TRK\n"
	.balign 4
	.asciz ">>> OSINIT: exception %d vectored to debugger\n"
	.balign 4
	.asciz "Exceptions initialized...\n"
	.balign 4

/* Dolphin/OS/OS.o END */

/* Dolphin/OS/OSAlarm.o START */
.global ResetFunctionInfo
ResetFunctionInfo:

	# ROM: 0x2DCE80
	.4byte lbl_801B1CD4
	.int -1
	.4byte 0
	.4byte 0
/* Dolphin/OS/OSAlarm.o END? */

.global lbl_802DFE90
lbl_802DFE90:

	# ROM: 0x2DCE90
	.asciz "OSCheckHeap: Failed HeapArray in %d"
	.asciz "OSCheckHeap: Failed 0 <= heap && heap < NumHeaps in %d"
	.balign 4
	.asciz "OSCheckHeap: Failed 0 <= hd->size in %d"
	.asciz "OSCheckHeap: Failed hd->allocated == NULL || hd->allocated->prev == NULL in %d"
	.balign 4
	.asciz "OSCheckHeap: Failed InRange(cell, ArenaStart, ArenaEnd) in %d"
	.balign 4
	.asciz "OSCheckHeap: Failed OFFSET(cell, ALIGNMENT) == 0 in %d"
	.balign 4
	.ascii "OSCheckHeap: Failed cell->next == NU"

.global lbl_802E0000
lbl_802E0000:

	# ROM: 0x2DD000
	.4byte 0x4C4C207C

.global lbl_802E0004
lbl_802E0004:

	# ROM: 0x2DD004
	.4byte 0x7C206365

.global lbl_802E0008
lbl_802E0008:

	# ROM: 0x2DD008
	.4byte 0x6C6C2D3E

.global lbl_802E000C
lbl_802E000C:

	# ROM: 0x2DD00C
	.byte 0x6E

.global lbl_802E000D
lbl_802E000D:

	# ROM: 0x2DD00D
	.byte 0x65, 0x78, 0x74

.global lbl_802E0010
lbl_802E0010:

	# ROM: 0x2DD010
	.4byte 0x2D3E7072

.global lbl_802E0014
lbl_802E0014:

	# ROM: 0x2DD014
	.4byte 0x6576203D

.global lbl_802E0018
lbl_802E0018:

	# ROM: 0x2DD018
	.asciz "= cell in %d"
	.balign 4
	.asciz "OSCheckHeap: Failed MINOBJSIZE <= cell->size in %d"
	.balign 4
	.asciz "OSCheckHeap: Failed OFFSET(cell->size, ALIGNMENT) == 0 in %d"
	.balign 4
	.asciz "OSCheckHeap: Failed 0 < total && total <= hd->size in %d"
	.balign 4
	.asciz "OSCheckHeap: Failed hd->free == NULL || hd->free->prev == NULL in %d"
	.balign 4
	.asciz "OSCheckHeap: Failed cell->next == NULL || (char*) cell + cell->size < (char*) cell->next in %d"
	.balign 4
	.asciz "OSCheckHeap: Failed total == hd->size in %d"
	.asciz "\nOSDumpHeap(%d):\n"
	.balign 4
	.asciz "--------Inactive\n"
	.balign 4
	.asciz "addr\tsize\t\tend\tprev\tnext\n"
	.balign 4
	.asciz "--------Allocated\n"
	.balign 4
	.asciz "%x\t%d\t%x\t%x\t%x\n"
	.asciz "--------Free\n"
	.balign 4
	.4byte 0

.global DSPInitCode
DSPInitCode:

	# ROM: 0x2DD228
	.4byte 0x029F0010
	.4byte 0x029F0033
	.4byte 0x029F0034
	.4byte 0x029F0035
	.4byte 0x029F0036
	.4byte 0x029F0037
	.4byte 0x029F0038
	.4byte 0x029F0039
	.4byte 0x12061203
	.4byte 0x12041205
	.4byte 0x00808000
	.4byte 0x0088FFFF
	.4byte 0x00841000
	.4byte 0x0064001D
	.4byte 0x02180000
	.4byte 0x81001C1E
	.4byte 0x00441B1E
	.4byte 0x00840800
	.4byte 0x00640027
	.4byte 0x191E0000
	.4byte 0x00DEFFFC
	.4byte 0x02A08000
	.4byte 0x029C0028
	.4byte 0x16FC0054
	.4byte 0x16FD4348
	.4byte 0x002102FF
	.4byte 0x02FF02FF
	.4byte 0x02FF02FF
	.4byte 0x02FF02FF
	.4byte 0
	.4byte 0
	.4byte 0

.global lbl_802E02A8
lbl_802E02A8:

	# ROM: 0x2DD2A8
	.asciz ">>> L2 INVALIDATE : SHOULD NEVER HAPPEN\n"
	.balign 4
	.asciz "Machine check received\n"
	.asciz "HID2 = 0x%x   SRR1 = 0x%x\n"
	.balign 4
	.asciz "Machine check was not DMA/locked cache related\n"
	.asciz "DMAErrorHandler(): An error occurred while processing DMA.\n"
	.asciz "The following errors have been detected and cleared :\n"
	.balign 4
	.asciz "\t- Requested a locked cache tag that was already in the cache\n"
	.balign 4
	.asciz "\t- DMA attempted to access normal cache\n"
	.balign 4
	.asciz "\t- DMA missed in data cache\n"
	.balign 4
	.asciz "\t- DMA queue overflowed\n"
	.balign 4
	.asciz "L1 i-caches initialized\n"
	.balign 4
	.asciz "L1 d-caches initialized\n"
	.balign 4
	.asciz "L2 cache initialized\n"
	.balign 4
	.asciz "Locked cache machine check handler installed\n"
	.balign 4
	.4byte 0

.global lbl_802E04D8
lbl_802E04D8:

	# ROM: 0x2DD4D8
	.asciz "------------------------- Context 0x%08x -------------------------\n"
	.asciz "r%-2d  = 0x%08x (%14d)  r%-2d  = 0x%08x (%14d)\n"
	.asciz "LR   = 0x%08x                   CR   = 0x%08x\n"
	.balign 4
	.asciz "SRR0 = 0x%08x                   SRR1 = 0x%08x\n"
	.balign 4
	.asciz "\nGQRs----------\n"
	.balign 4
	.asciz "gqr%d = 0x%08x \t gqr%d = 0x%08x\n"
	.balign 4
	.asciz "\n\nFPRs----------\n"
	.balign 4
	.asciz "fr%d \t= %d \t fr%d \t= %d\n"
	.balign 4
	.asciz "\n\nPSFs----------\n"
	.balign 4
	.asciz "ps%d \t= 0x%x \t ps%d \t= 0x%x\n"
	.balign 4
	.asciz "\nAddress:      Back Chain    LR Save\n"
	.balign 4
	.asciz "0x%08x:   0x%08x    0x%08x\n"

.global lbl_802E068C
lbl_802E068C:

	# ROM: 0x2DD68C
	.asciz "FPU-unavailable handler installed\n"
	.balign 4

.global lbl_802E06B0
lbl_802E06B0:

	# ROM: 0x2DD6B0
	.asciz " in \"%s\" on line %d.\n"
	.balign 4
	.asciz "\nAddress:      Back Chain    LR Save\n"
	.balign 4
	.asciz "0x%08x:   0x%08x    0x%08x\n"
	.asciz "Non-recoverable Exception %d"
	.balign 4
	.asciz "Unhandled Exception %d"
	.balign 4
	.asciz "\nDSISR = 0x%08x                   DAR  = 0x%08x\n"
	.balign 4
	.asciz "TB = 0x%016llx\n"
	.asciz "\nInstruction at 0x%x (read from SRR0) attempted to access invalid address 0x%x (read from DAR)\n"
	.asciz "\nAttempted to fetch instruction from invalid address 0x%x (read from SRR0)\n"
	.asciz "\nInstruction at 0x%x (read from SRR0) attempted to access unaligned address 0x%x (read from DAR)\n"
	.balign 4
	.asciz "\nProgram exception : Possible illegal instruction/operation at or around 0x%x (read from SRR0)\n"
	.asciz "AI DMA Address =   0x%04x%04x\n"
	.balign 4
	.asciz "ARAM DMA Address = 0x%04x%04x\n"
	.balign 4
	.asciz "DI DMA Address =   0x%08x\n"
	.balign 4
	.asciz "\nLast interrupt (%d): SRR0 = 0x%08x  TB = 0x%016llx\n"
	.balign 4

.global lbl_802E098C
lbl_802E098C:

	# ROM: 0x2DD98C
	.4byte func_801B39B8
	.4byte func_801B39B8
	.4byte lbl_801B3910
	.4byte lbl_801B3928
	.4byte func_801B39B8
	.4byte lbl_801B393C
	.4byte lbl_801B3954
	.4byte func_801B39B8
	.4byte func_801B39B8
	.4byte func_801B39B8
	.4byte func_801B39B8
	.4byte func_801B39B8
	.4byte func_801B39B8
	.4byte func_801B39B8
	.4byte func_801B39B8
	.4byte lbl_801B396C
	.4byte 0

.global InterruptPrioTable
InterruptPrioTable:

	# ROM: 0x2DD9D0
	.int 256
	.int 64
	.4byte 0xF8000000
	.int 512
	.int 128
	.4byte 0x00003000
	.int 32
	.4byte 0x03FF8C00
	.4byte 0x04000000
	.4byte 0x00004000
	.int -1
	.4byte 0

.global lbl_802E0A00
lbl_802E0A00:

	# ROM: 0x2DDA00
	.asciz "OSLink: unknown relocation type %3d\n"
	.balign 4

.global lbl_802E0A28
lbl_802E0A28:

	# ROM: 0x2DDA28
	.asciz "OSUnlink: unknown relocation type %3d\n"
	.balign 4

.global lbl_802E0A50
lbl_802E0A50:

	# ROM: 0x2DDA50
	.4byte OnReset_1
	.int 127
	.4byte 0
	.4byte 0



.section .bss, "", @nobits  # 0x802E8E00 - 0x803469C0 ; 0x0005DBC0

/* Dolphin/OS/OS.o START */

.global DriveInfo
DriveInfo:
	.skip 0x50

/* Dolphin/OS/OS.o END */

.global __OSErrorTable
__OSErrorTable:
	.skip 0x50

.global lbl_80317AE0
lbl_80317AE0:
	.skip 0x20

.global Scb
Scb:
	.skip 0x58

.global lbl_80317B58
lbl_80317B58:
	.skip 0x4DA

.global lbl_80318032
lbl_80318032:
	.skip 0x453

.global lbl_80318485
lbl_80318485:
	.skip 0xA

.global lbl_8031848F
lbl_8031848F:
	.skip 0xC1



.section .sdata, "wa"  # 0x803469C0 - 0x80348FE0 ; 0x00002620

.global lbl_80348B80
lbl_80348B80:

	# ROM: 0x2E7FC0
	.4byte lbl_802DFC88

.global lbl_80348B84
lbl_80348B84:

	# ROM: 0x2E7FC4
	.asciz "%08x\n"
	.balign 4

.global lbl_80348B8C
lbl_80348B8C:

	# ROM: 0x2E7FCC
	.4byte 0x25730A00

.global __OSArenaLo
__OSArenaLo:

	# ROM: 0x2E7FD0
	.int -1
	.4byte 0

.global lbl_80348B98
lbl_80348B98:

	# ROM: 0x2E7FD8
	.int 248

.global lbl_80348B9C
lbl_80348B9C:

	# ROM: 0x2E7FDC
	.4byte 0x0A000000

.global fontEncode_80
fontEncode_80:

	# ROM: 0x2E7FE0
	.4byte 0xFFFF0000
	.4byte 0

.global lbl_80348BA8
lbl_80348BA8:

	# ROM: 0x2E7FE8
	.4byte lbl_801B69EC
	.4byte 0




.section .sbss, "", @nobits  # 0x80348FE0 - 0x80349E40 ; 0x00000E60

/* Dolphin/OS/OS.o START */

.global BootInfo
BootInfo:
	.skip 0x4

.global BI2DebugFlag
BI2DebugFlag:
	.skip 0x4

.global lbl_803495C8
lbl_803495C8:
	.skip 0x4

.global __OSIsGcam
__OSIsGcam:
	.skip 0x4

.global lbl_803495D0
lbl_803495D0:
	.skip 0x8

.global lbl_803495D8
lbl_803495D8:
	.skip 0x8

.global AreWeInitialized
AreWeInitialized:
	.skip 0x4

.global OSExceptionTable
OSExceptionTable:
	.skip 0x4

.global __OSSavedRegionEnd
__OSSavedRegionEnd:
	.skip 0x4

.global __OSSavedRegionStart
__OSSavedRegionStart:
	.skip 0x4

.global __OSInIPL
__OSInIPL:
	.skip 0x8

.global __OSStartTime
__OSStartTime:
	.skip 0x4

.global lbl_803495FC
lbl_803495FC:
	.skip 0x4

/* Dolphin/OS/OS.o END */

.global AlarmQueue
AlarmQueue:
	.skip 0x8

.global HeapArray
HeapArray:
	.skip 0x4

.global NumHeaps
NumHeaps:
	.skip 0x4

.global ArenaStart
ArenaStart:
	.skip 0x4

.global ArenaEnd
ArenaEnd:
	.skip 0x4

.global __OSArenaHi
__OSArenaHi:
	.skip 0x8

.global InterruptHandlerTable
InterruptHandlerTable:
	.skip 0x4

.global _OSLastInterruptSrr0
_OSLastInterruptSrr0:
	.skip 0x4

.global _OSLastInterrupt
_OSLastInterrupt:
	.skip 0x8

.global _OSLastInterruptTime
_OSLastInterruptTime:
	.skip 0x4

.global lbl_80349634
lbl_80349634:
	.skip 0x4

.global SaveStart
SaveStart:
	.skip 0x4

.global SaveEnd
SaveEnd:
	.skip 0x4

.global Prepared
Prepared:
	.skip 0x8

.global ResetFunctionQueue
ResetFunctionQueue:
	.skip 0x8

.global lbl_80349650
lbl_80349650:
	.skip 0x8

.global lbl_80349658
lbl_80349658:
	.skip 0x4

.global Down
Down:
	.skip 0x4

.global LastState
LastState:
	.skip 0x8

.global HoldUp
HoldUp:
	.skip 0x4

.global lbl_8034966C
lbl_8034966C:
	.skip 0x4

.global HoldDown
HoldDown:
	.skip 0x4

.global lbl_80349674
lbl_80349674:
	.skip 0x4

.global RunQueueBits
RunQueueBits:
	.skip 0x4

.global RunQueueHint
RunQueueHint:
	.skip 0x4

.global Reschedule
Reschedule:
	.skip 0x10
